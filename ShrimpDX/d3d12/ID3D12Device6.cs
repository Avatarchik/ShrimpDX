// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D12Device6: ID3D12Device5
    {
        static Guid s_uuid = new Guid("c70b221b-40e4-4a17-89af-025a0727a6dc");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int SetBackgroundProcessingMode(
            D3D12_BACKGROUND_PROCESSING_MODE Mode,
            D3D12_MEASUREMENTS_ACTION MeasurementsAction,
            IntPtr hEventToSignalUponCompletion,
            out int pbFurtherMeasurementsDesired
        ){
            var fp = GetFunctionPointer(65);
            if(m_SetBackgroundProcessingModeFunc==null) m_SetBackgroundProcessingModeFunc = (SetBackgroundProcessingModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetBackgroundProcessingModeFunc));
            
            return m_SetBackgroundProcessingModeFunc(m_ptr, Mode, MeasurementsAction, hEventToSignalUponCompletion, out pbFurtherMeasurementsDesired);
        }
        delegate int SetBackgroundProcessingModeFunc(IntPtr self, D3D12_BACKGROUND_PROCESSING_MODE Mode, D3D12_MEASUREMENTS_ACTION MeasurementsAction, IntPtr hEventToSignalUponCompletion, out int pbFurtherMeasurementsDesired);
        SetBackgroundProcessingModeFunc m_SetBackgroundProcessingModeFunc;

    }
}
