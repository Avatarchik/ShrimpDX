// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D12Tools: IUnknown
    {
        static Guid s_uuid = new Guid("7071e1f0-e84b-4b33-974f-12fa49de65c5");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual void EnableShaderInstrumentation(
            int bEnable
        ){
            var fp = GetFunctionPointer(3);
            if(m_EnableShaderInstrumentationFunc==null) m_EnableShaderInstrumentationFunc = (EnableShaderInstrumentationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(EnableShaderInstrumentationFunc));
            
            m_EnableShaderInstrumentationFunc(m_ptr, bEnable);
        }
        delegate void EnableShaderInstrumentationFunc(IntPtr self, int bEnable);
        EnableShaderInstrumentationFunc m_EnableShaderInstrumentationFunc;

        public virtual int ShaderInstrumentationEnabled(
        ){
            var fp = GetFunctionPointer(4);
            if(m_ShaderInstrumentationEnabledFunc==null) m_ShaderInstrumentationEnabledFunc = (ShaderInstrumentationEnabledFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ShaderInstrumentationEnabledFunc));
            
            return m_ShaderInstrumentationEnabledFunc(m_ptr);
        }
        delegate int ShaderInstrumentationEnabledFunc(IntPtr self);
        ShaderInstrumentationEnabledFunc m_ShaderInstrumentationEnabledFunc;

    }
}
