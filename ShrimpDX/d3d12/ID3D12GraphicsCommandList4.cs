// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D12GraphicsCommandList4: ID3D12GraphicsCommandList3
    {
        static Guid s_uuid = new Guid("8754318e-d3a9-4541-98cf-645b50dc4874");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual void BeginRenderPass(
            uint NumRenderTargets,
            ref D3D12_RENDER_PASS_RENDER_TARGET_DESC pRenderTargets,
            ref D3D12_RENDER_PASS_DEPTH_STENCIL_DESC pDepthStencil,
            D3D12_RENDER_PASS_FLAGS Flags
        ){
            var fp = GetFunctionPointer(68);
            if(m_BeginRenderPassFunc==null) m_BeginRenderPassFunc = (BeginRenderPassFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(BeginRenderPassFunc));
            
            m_BeginRenderPassFunc(m_ptr, NumRenderTargets, ref pRenderTargets, ref pDepthStencil, Flags);
        }
        delegate void BeginRenderPassFunc(IntPtr self, uint NumRenderTargets, ref D3D12_RENDER_PASS_RENDER_TARGET_DESC pRenderTargets, ref D3D12_RENDER_PASS_DEPTH_STENCIL_DESC pDepthStencil, D3D12_RENDER_PASS_FLAGS Flags);
        BeginRenderPassFunc m_BeginRenderPassFunc;

        public virtual void EndRenderPass(
        ){
            var fp = GetFunctionPointer(69);
            if(m_EndRenderPassFunc==null) m_EndRenderPassFunc = (EndRenderPassFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(EndRenderPassFunc));
            
            m_EndRenderPassFunc(m_ptr);
        }
        delegate void EndRenderPassFunc(IntPtr self);
        EndRenderPassFunc m_EndRenderPassFunc;

        public virtual void InitializeMetaCommand(
            ID3D12MetaCommand pMetaCommand,
            IntPtr pInitializationParametersData,
            ulong InitializationParametersDataSizeInBytes
        ){
            var fp = GetFunctionPointer(70);
            if(m_InitializeMetaCommandFunc==null) m_InitializeMetaCommandFunc = (InitializeMetaCommandFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(InitializeMetaCommandFunc));
            
            m_InitializeMetaCommandFunc(m_ptr, pMetaCommand!=null ? pMetaCommand.Ptr : IntPtr.Zero, pInitializationParametersData, InitializationParametersDataSizeInBytes);
        }
        delegate void InitializeMetaCommandFunc(IntPtr self, IntPtr pMetaCommand, IntPtr pInitializationParametersData, ulong InitializationParametersDataSizeInBytes);
        InitializeMetaCommandFunc m_InitializeMetaCommandFunc;

        public virtual void ExecuteMetaCommand(
            ID3D12MetaCommand pMetaCommand,
            IntPtr pExecutionParametersData,
            ulong ExecutionParametersDataSizeInBytes
        ){
            var fp = GetFunctionPointer(71);
            if(m_ExecuteMetaCommandFunc==null) m_ExecuteMetaCommandFunc = (ExecuteMetaCommandFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ExecuteMetaCommandFunc));
            
            m_ExecuteMetaCommandFunc(m_ptr, pMetaCommand!=null ? pMetaCommand.Ptr : IntPtr.Zero, pExecutionParametersData, ExecutionParametersDataSizeInBytes);
        }
        delegate void ExecuteMetaCommandFunc(IntPtr self, IntPtr pMetaCommand, IntPtr pExecutionParametersData, ulong ExecutionParametersDataSizeInBytes);
        ExecuteMetaCommandFunc m_ExecuteMetaCommandFunc;

        public virtual void BuildRaytracingAccelerationStructure(
            ref D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC pDesc,
            uint NumPostbuildInfoDescs,
            ref D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC pPostbuildInfoDescs
        ){
            var fp = GetFunctionPointer(72);
            if(m_BuildRaytracingAccelerationStructureFunc==null) m_BuildRaytracingAccelerationStructureFunc = (BuildRaytracingAccelerationStructureFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(BuildRaytracingAccelerationStructureFunc));
            
            m_BuildRaytracingAccelerationStructureFunc(m_ptr, ref pDesc, NumPostbuildInfoDescs, ref pPostbuildInfoDescs);
        }
        delegate void BuildRaytracingAccelerationStructureFunc(IntPtr self, ref D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC pDesc, uint NumPostbuildInfoDescs, ref D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC pPostbuildInfoDescs);
        BuildRaytracingAccelerationStructureFunc m_BuildRaytracingAccelerationStructureFunc;

        public virtual void EmitRaytracingAccelerationStructurePostbuildInfo(
            ref D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC pDesc,
            uint NumSourceAccelerationStructures,
            ref ulong pSourceAccelerationStructureData
        ){
            var fp = GetFunctionPointer(73);
            if(m_EmitRaytracingAccelerationStructurePostbuildInfoFunc==null) m_EmitRaytracingAccelerationStructurePostbuildInfoFunc = (EmitRaytracingAccelerationStructurePostbuildInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(EmitRaytracingAccelerationStructurePostbuildInfoFunc));
            
            m_EmitRaytracingAccelerationStructurePostbuildInfoFunc(m_ptr, ref pDesc, NumSourceAccelerationStructures, ref pSourceAccelerationStructureData);
        }
        delegate void EmitRaytracingAccelerationStructurePostbuildInfoFunc(IntPtr self, ref D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC pDesc, uint NumSourceAccelerationStructures, ref ulong pSourceAccelerationStructureData);
        EmitRaytracingAccelerationStructurePostbuildInfoFunc m_EmitRaytracingAccelerationStructurePostbuildInfoFunc;

        public virtual void CopyRaytracingAccelerationStructure(
            ulong DestAccelerationStructureData,
            ulong SourceAccelerationStructureData,
            D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode
        ){
            var fp = GetFunctionPointer(74);
            if(m_CopyRaytracingAccelerationStructureFunc==null) m_CopyRaytracingAccelerationStructureFunc = (CopyRaytracingAccelerationStructureFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CopyRaytracingAccelerationStructureFunc));
            
            m_CopyRaytracingAccelerationStructureFunc(m_ptr, DestAccelerationStructureData, SourceAccelerationStructureData, Mode);
        }
        delegate void CopyRaytracingAccelerationStructureFunc(IntPtr self, ulong DestAccelerationStructureData, ulong SourceAccelerationStructureData, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode);
        CopyRaytracingAccelerationStructureFunc m_CopyRaytracingAccelerationStructureFunc;

        public virtual void SetPipelineState1(
            ID3D12StateObject pStateObject
        ){
            var fp = GetFunctionPointer(75);
            if(m_SetPipelineState1Func==null) m_SetPipelineState1Func = (SetPipelineState1Func)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPipelineState1Func));
            
            m_SetPipelineState1Func(m_ptr, pStateObject!=null ? pStateObject.Ptr : IntPtr.Zero);
        }
        delegate void SetPipelineState1Func(IntPtr self, IntPtr pStateObject);
        SetPipelineState1Func m_SetPipelineState1Func;

        public virtual void DispatchRays(
            ref D3D12_DISPATCH_RAYS_DESC pDesc
        ){
            var fp = GetFunctionPointer(76);
            if(m_DispatchRaysFunc==null) m_DispatchRaysFunc = (DispatchRaysFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DispatchRaysFunc));
            
            m_DispatchRaysFunc(m_ptr, ref pDesc);
        }
        delegate void DispatchRaysFunc(IntPtr self, ref D3D12_DISPATCH_RAYS_DESC pDesc);
        DispatchRaysFunc m_DispatchRaysFunc;

    }
}
