// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D12Device5: ID3D12Device4
    {
        static Guid s_uuid = new Guid("8b4f173b-2fea-4b80-8f58-4307191ab95d");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int CreateLifetimeTracker(
            ID3D12LifetimeOwner pOwner,
            ref Guid riid,
            out IntPtr ppvTracker
        ){
            var fp = GetFunctionPointer(57);
            if(m_CreateLifetimeTrackerFunc==null) m_CreateLifetimeTrackerFunc = (CreateLifetimeTrackerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateLifetimeTrackerFunc));
            
            return m_CreateLifetimeTrackerFunc(m_ptr, pOwner!=null ? pOwner.Ptr : IntPtr.Zero, ref riid, out ppvTracker);
        }
        delegate int CreateLifetimeTrackerFunc(IntPtr self, IntPtr pOwner, ref Guid riid, out IntPtr ppvTracker);
        CreateLifetimeTrackerFunc m_CreateLifetimeTrackerFunc;

        public virtual void RemoveDevice(
        ){
            var fp = GetFunctionPointer(58);
            if(m_RemoveDeviceFunc==null) m_RemoveDeviceFunc = (RemoveDeviceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RemoveDeviceFunc));
            
            m_RemoveDeviceFunc(m_ptr);
        }
        delegate void RemoveDeviceFunc(IntPtr self);
        RemoveDeviceFunc m_RemoveDeviceFunc;

        public virtual int EnumerateMetaCommands(
            out uint pNumMetaCommands,
            out D3D12_META_COMMAND_DESC pDescs
        ){
            var fp = GetFunctionPointer(59);
            if(m_EnumerateMetaCommandsFunc==null) m_EnumerateMetaCommandsFunc = (EnumerateMetaCommandsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(EnumerateMetaCommandsFunc));
            
            return m_EnumerateMetaCommandsFunc(m_ptr, out pNumMetaCommands, out pDescs);
        }
        delegate int EnumerateMetaCommandsFunc(IntPtr self, out uint pNumMetaCommands, out D3D12_META_COMMAND_DESC pDescs);
        EnumerateMetaCommandsFunc m_EnumerateMetaCommandsFunc;

        public virtual int EnumerateMetaCommandParameters(
            ref Guid CommandId,
            D3D12_META_COMMAND_PARAMETER_STAGE Stage,
            out uint pTotalStructureSizeInBytes,
            out uint pParameterCount,
            out D3D12_META_COMMAND_PARAMETER_DESC pParameterDescs
        ){
            var fp = GetFunctionPointer(60);
            if(m_EnumerateMetaCommandParametersFunc==null) m_EnumerateMetaCommandParametersFunc = (EnumerateMetaCommandParametersFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(EnumerateMetaCommandParametersFunc));
            
            return m_EnumerateMetaCommandParametersFunc(m_ptr, ref CommandId, Stage, out pTotalStructureSizeInBytes, out pParameterCount, out pParameterDescs);
        }
        delegate int EnumerateMetaCommandParametersFunc(IntPtr self, ref Guid CommandId, D3D12_META_COMMAND_PARAMETER_STAGE Stage, out uint pTotalStructureSizeInBytes, out uint pParameterCount, out D3D12_META_COMMAND_PARAMETER_DESC pParameterDescs);
        EnumerateMetaCommandParametersFunc m_EnumerateMetaCommandParametersFunc;

        public virtual int CreateMetaCommand(
            ref Guid CommandId,
            uint NodeMask,
            IntPtr pCreationParametersData,
            ulong CreationParametersDataSizeInBytes,
            ref Guid riid,
            out IntPtr ppMetaCommand
        ){
            var fp = GetFunctionPointer(61);
            if(m_CreateMetaCommandFunc==null) m_CreateMetaCommandFunc = (CreateMetaCommandFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateMetaCommandFunc));
            
            return m_CreateMetaCommandFunc(m_ptr, ref CommandId, NodeMask, pCreationParametersData, CreationParametersDataSizeInBytes, ref riid, out ppMetaCommand);
        }
        delegate int CreateMetaCommandFunc(IntPtr self, ref Guid CommandId, uint NodeMask, IntPtr pCreationParametersData, ulong CreationParametersDataSizeInBytes, ref Guid riid, out IntPtr ppMetaCommand);
        CreateMetaCommandFunc m_CreateMetaCommandFunc;

        public virtual int CreateStateObject(
            ref D3D12_STATE_OBJECT_DESC pDesc,
            ref Guid riid,
            out IntPtr ppStateObject
        ){
            var fp = GetFunctionPointer(62);
            if(m_CreateStateObjectFunc==null) m_CreateStateObjectFunc = (CreateStateObjectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateStateObjectFunc));
            
            return m_CreateStateObjectFunc(m_ptr, ref pDesc, ref riid, out ppStateObject);
        }
        delegate int CreateStateObjectFunc(IntPtr self, ref D3D12_STATE_OBJECT_DESC pDesc, ref Guid riid, out IntPtr ppStateObject);
        CreateStateObjectFunc m_CreateStateObjectFunc;

        public virtual void GetRaytracingAccelerationStructurePrebuildInfo(
            ref D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS pDesc,
            out D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO pInfo
        ){
            var fp = GetFunctionPointer(63);
            if(m_GetRaytracingAccelerationStructurePrebuildInfoFunc==null) m_GetRaytracingAccelerationStructurePrebuildInfoFunc = (GetRaytracingAccelerationStructurePrebuildInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRaytracingAccelerationStructurePrebuildInfoFunc));
            
            m_GetRaytracingAccelerationStructurePrebuildInfoFunc(m_ptr, ref pDesc, out pInfo);
        }
        delegate void GetRaytracingAccelerationStructurePrebuildInfoFunc(IntPtr self, ref D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS pDesc, out D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO pInfo);
        GetRaytracingAccelerationStructurePrebuildInfoFunc m_GetRaytracingAccelerationStructurePrebuildInfoFunc;

        public virtual D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS CheckDriverMatchingIdentifier(
            D3D12_SERIALIZED_DATA_TYPE SerializedDataType,
            ref D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER pIdentifierToCheck
        ){
            var fp = GetFunctionPointer(64);
            if(m_CheckDriverMatchingIdentifierFunc==null) m_CheckDriverMatchingIdentifierFunc = (CheckDriverMatchingIdentifierFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckDriverMatchingIdentifierFunc));
            
            return m_CheckDriverMatchingIdentifierFunc(m_ptr, SerializedDataType, ref pIdentifierToCheck);
        }
        delegate D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS CheckDriverMatchingIdentifierFunc(IntPtr self, D3D12_SERIALIZED_DATA_TYPE SerializedDataType, ref D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER pIdentifierToCheck);
        CheckDriverMatchingIdentifierFunc m_CheckDriverMatchingIdentifierFunc;

    }
}
