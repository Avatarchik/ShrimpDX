// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID2D1SimplifiedGeometrySink: IUnknown
    {
        static Guid s_uuid = new Guid("2cd9069e-12e2-11dc-9fed-001143a055f9");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual void SetFillMode(
            D2D1_FILL_MODE fillMode
        ){
            var fp = GetFunctionPointer(3);
            if(m_SetFillModeFunc==null) m_SetFillModeFunc = (SetFillModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetFillModeFunc));
            
            m_SetFillModeFunc(m_ptr, fillMode);
        }
        delegate void SetFillModeFunc(IntPtr self, D2D1_FILL_MODE fillMode);
        SetFillModeFunc m_SetFillModeFunc;

        public virtual void SetSegmentFlags(
            D2D1_PATH_SEGMENT vertexFlags
        ){
            var fp = GetFunctionPointer(4);
            if(m_SetSegmentFlagsFunc==null) m_SetSegmentFlagsFunc = (SetSegmentFlagsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetSegmentFlagsFunc));
            
            m_SetSegmentFlagsFunc(m_ptr, vertexFlags);
        }
        delegate void SetSegmentFlagsFunc(IntPtr self, D2D1_PATH_SEGMENT vertexFlags);
        SetSegmentFlagsFunc m_SetSegmentFlagsFunc;

        public virtual void BeginFigure(
            System.Numerics.Vector2 startPoint,
            D2D1_FIGURE_BEGIN figureBegin
        ){
            var fp = GetFunctionPointer(5);
            if(m_BeginFigureFunc==null) m_BeginFigureFunc = (BeginFigureFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(BeginFigureFunc));
            
            m_BeginFigureFunc(m_ptr, startPoint, figureBegin);
        }
        delegate void BeginFigureFunc(IntPtr self, System.Numerics.Vector2 startPoint, D2D1_FIGURE_BEGIN figureBegin);
        BeginFigureFunc m_BeginFigureFunc;

        public virtual void AddLines(
            ref System.Numerics.Vector2 points,
            uint pointsCount
        ){
            var fp = GetFunctionPointer(6);
            if(m_AddLinesFunc==null) m_AddLinesFunc = (AddLinesFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AddLinesFunc));
            
            m_AddLinesFunc(m_ptr, ref points, pointsCount);
        }
        delegate void AddLinesFunc(IntPtr self, ref System.Numerics.Vector2 points, uint pointsCount);
        AddLinesFunc m_AddLinesFunc;

        public virtual void AddBeziers(
            ref D2D1_BEZIER_SEGMENT beziers,
            uint beziersCount
        ){
            var fp = GetFunctionPointer(7);
            if(m_AddBeziersFunc==null) m_AddBeziersFunc = (AddBeziersFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AddBeziersFunc));
            
            m_AddBeziersFunc(m_ptr, ref beziers, beziersCount);
        }
        delegate void AddBeziersFunc(IntPtr self, ref D2D1_BEZIER_SEGMENT beziers, uint beziersCount);
        AddBeziersFunc m_AddBeziersFunc;

        public virtual void EndFigure(
            D2D1_FIGURE_END figureEnd
        ){
            var fp = GetFunctionPointer(8);
            if(m_EndFigureFunc==null) m_EndFigureFunc = (EndFigureFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(EndFigureFunc));
            
            m_EndFigureFunc(m_ptr, figureEnd);
        }
        delegate void EndFigureFunc(IntPtr self, D2D1_FIGURE_END figureEnd);
        EndFigureFunc m_EndFigureFunc;

        public virtual int Close(
        ){
            var fp = GetFunctionPointer(9);
            if(m_CloseFunc==null) m_CloseFunc = (CloseFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CloseFunc));
            
            return m_CloseFunc(m_ptr);
        }
        delegate int CloseFunc(IntPtr self);
        CloseFunc m_CloseFunc;

    }
}
