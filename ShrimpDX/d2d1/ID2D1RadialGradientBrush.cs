// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID2D1RadialGradientBrush: ID2D1Brush
    {
        static Guid s_uuid = new Guid("2cd906ac-12e2-11dc-9fed-001143a055f9");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual void SetCenter(
            System.Numerics.Vector2 center
        ){
            var fp = GetFunctionPointer(8);
            if(m_SetCenterFunc==null) m_SetCenterFunc = (SetCenterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetCenterFunc));
            
            m_SetCenterFunc(m_ptr, center);
        }
        delegate void SetCenterFunc(IntPtr self, System.Numerics.Vector2 center);
        SetCenterFunc m_SetCenterFunc;

        public virtual void SetGradientOriginOffset(
            System.Numerics.Vector2 gradientOriginOffset
        ){
            var fp = GetFunctionPointer(9);
            if(m_SetGradientOriginOffsetFunc==null) m_SetGradientOriginOffsetFunc = (SetGradientOriginOffsetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetGradientOriginOffsetFunc));
            
            m_SetGradientOriginOffsetFunc(m_ptr, gradientOriginOffset);
        }
        delegate void SetGradientOriginOffsetFunc(IntPtr self, System.Numerics.Vector2 gradientOriginOffset);
        SetGradientOriginOffsetFunc m_SetGradientOriginOffsetFunc;

        public virtual void SetRadiusX(
            float radiusX
        ){
            var fp = GetFunctionPointer(10);
            if(m_SetRadiusXFunc==null) m_SetRadiusXFunc = (SetRadiusXFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRadiusXFunc));
            
            m_SetRadiusXFunc(m_ptr, radiusX);
        }
        delegate void SetRadiusXFunc(IntPtr self, float radiusX);
        SetRadiusXFunc m_SetRadiusXFunc;

        public virtual void SetRadiusY(
            float radiusY
        ){
            var fp = GetFunctionPointer(11);
            if(m_SetRadiusYFunc==null) m_SetRadiusYFunc = (SetRadiusYFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRadiusYFunc));
            
            m_SetRadiusYFunc(m_ptr, radiusY);
        }
        delegate void SetRadiusYFunc(IntPtr self, float radiusY);
        SetRadiusYFunc m_SetRadiusYFunc;

        public virtual System.Numerics.Vector2 GetCenter(
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetCenterFunc==null) m_GetCenterFunc = (GetCenterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCenterFunc));
            
            return m_GetCenterFunc(m_ptr);
        }
        delegate System.Numerics.Vector2 GetCenterFunc(IntPtr self);
        GetCenterFunc m_GetCenterFunc;

        public virtual System.Numerics.Vector2 GetGradientOriginOffset(
        ){
            var fp = GetFunctionPointer(13);
            if(m_GetGradientOriginOffsetFunc==null) m_GetGradientOriginOffsetFunc = (GetGradientOriginOffsetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetGradientOriginOffsetFunc));
            
            return m_GetGradientOriginOffsetFunc(m_ptr);
        }
        delegate System.Numerics.Vector2 GetGradientOriginOffsetFunc(IntPtr self);
        GetGradientOriginOffsetFunc m_GetGradientOriginOffsetFunc;

        public virtual float GetRadiusX(
        ){
            var fp = GetFunctionPointer(14);
            if(m_GetRadiusXFunc==null) m_GetRadiusXFunc = (GetRadiusXFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRadiusXFunc));
            
            return m_GetRadiusXFunc(m_ptr);
        }
        delegate float GetRadiusXFunc(IntPtr self);
        GetRadiusXFunc m_GetRadiusXFunc;

        public virtual float GetRadiusY(
        ){
            var fp = GetFunctionPointer(15);
            if(m_GetRadiusYFunc==null) m_GetRadiusYFunc = (GetRadiusYFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRadiusYFunc));
            
            return m_GetRadiusYFunc(m_ptr);
        }
        delegate float GetRadiusYFunc(IntPtr self);
        GetRadiusYFunc m_GetRadiusYFunc;

        public virtual void GetGradientStopCollection(
            out ID2D1GradientStopCollection gradientStopCollection
        ){
            var fp = GetFunctionPointer(16);
            if(m_GetGradientStopCollectionFunc==null) m_GetGradientStopCollectionFunc = (GetGradientStopCollectionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetGradientStopCollectionFunc));
            gradientStopCollection = new ID2D1GradientStopCollection();
            m_GetGradientStopCollectionFunc(m_ptr, out gradientStopCollection.PtrForNew);
        }
        delegate void GetGradientStopCollectionFunc(IntPtr self, out IntPtr gradientStopCollection);
        GetGradientStopCollectionFunc m_GetGradientStopCollectionFunc;

    }
}
