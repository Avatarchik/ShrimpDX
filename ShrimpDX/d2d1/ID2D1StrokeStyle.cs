// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID2D1StrokeStyle: ID2D1Resource
    {
        static Guid s_uuid = new Guid("2cd9069d-12e2-11dc-9fed-001143a055f9");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual D2D1_CAP_STYLE GetStartCap(
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetStartCapFunc==null) m_GetStartCapFunc = (GetStartCapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetStartCapFunc));
            
            return m_GetStartCapFunc(m_ptr);
        }
        delegate D2D1_CAP_STYLE GetStartCapFunc(IntPtr self);
        GetStartCapFunc m_GetStartCapFunc;

        public virtual D2D1_CAP_STYLE GetEndCap(
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetEndCapFunc==null) m_GetEndCapFunc = (GetEndCapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetEndCapFunc));
            
            return m_GetEndCapFunc(m_ptr);
        }
        delegate D2D1_CAP_STYLE GetEndCapFunc(IntPtr self);
        GetEndCapFunc m_GetEndCapFunc;

        public virtual D2D1_CAP_STYLE GetDashCap(
        ){
            var fp = GetFunctionPointer(6);
            if(m_GetDashCapFunc==null) m_GetDashCapFunc = (GetDashCapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDashCapFunc));
            
            return m_GetDashCapFunc(m_ptr);
        }
        delegate D2D1_CAP_STYLE GetDashCapFunc(IntPtr self);
        GetDashCapFunc m_GetDashCapFunc;

        public virtual float GetMiterLimit(
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetMiterLimitFunc==null) m_GetMiterLimitFunc = (GetMiterLimitFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMiterLimitFunc));
            
            return m_GetMiterLimitFunc(m_ptr);
        }
        delegate float GetMiterLimitFunc(IntPtr self);
        GetMiterLimitFunc m_GetMiterLimitFunc;

        public virtual D2D1_LINE_JOIN GetLineJoin(
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetLineJoinFunc==null) m_GetLineJoinFunc = (GetLineJoinFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetLineJoinFunc));
            
            return m_GetLineJoinFunc(m_ptr);
        }
        delegate D2D1_LINE_JOIN GetLineJoinFunc(IntPtr self);
        GetLineJoinFunc m_GetLineJoinFunc;

        public virtual float GetDashOffset(
        ){
            var fp = GetFunctionPointer(9);
            if(m_GetDashOffsetFunc==null) m_GetDashOffsetFunc = (GetDashOffsetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDashOffsetFunc));
            
            return m_GetDashOffsetFunc(m_ptr);
        }
        delegate float GetDashOffsetFunc(IntPtr self);
        GetDashOffsetFunc m_GetDashOffsetFunc;

        public virtual D2D1_DASH_STYLE GetDashStyle(
        ){
            var fp = GetFunctionPointer(10);
            if(m_GetDashStyleFunc==null) m_GetDashStyleFunc = (GetDashStyleFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDashStyleFunc));
            
            return m_GetDashStyleFunc(m_ptr);
        }
        delegate D2D1_DASH_STYLE GetDashStyleFunc(IntPtr self);
        GetDashStyleFunc m_GetDashStyleFunc;

        public virtual uint GetDashesCount(
        ){
            var fp = GetFunctionPointer(11);
            if(m_GetDashesCountFunc==null) m_GetDashesCountFunc = (GetDashesCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDashesCountFunc));
            
            return m_GetDashesCountFunc(m_ptr);
        }
        delegate uint GetDashesCountFunc(IntPtr self);
        GetDashesCountFunc m_GetDashesCountFunc;

        public virtual void GetDashes(
            out float dashes,
            uint dashesCount
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetDashesFunc==null) m_GetDashesFunc = (GetDashesFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDashesFunc));
            
            m_GetDashesFunc(m_ptr, out dashes, dashesCount);
        }
        delegate void GetDashesFunc(IntPtr self, out float dashes, uint dashesCount);
        GetDashesFunc m_GetDashesFunc;

    }
}
