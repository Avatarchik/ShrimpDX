// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID2D1BitmapBrush: ID2D1Brush
    {
        static Guid s_uuid = new Guid("2cd906aa-12e2-11dc-9fed-001143a055f9");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual void SetExtendModeX(
            D2D1_EXTEND_MODE extendModeX
        ){
            var fp = GetFunctionPointer(8);
            if(m_SetExtendModeXFunc==null) m_SetExtendModeXFunc = (SetExtendModeXFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetExtendModeXFunc));
            
            m_SetExtendModeXFunc(m_ptr, extendModeX);
        }
        delegate void SetExtendModeXFunc(IntPtr self, D2D1_EXTEND_MODE extendModeX);
        SetExtendModeXFunc m_SetExtendModeXFunc;

        public virtual void SetExtendModeY(
            D2D1_EXTEND_MODE extendModeY
        ){
            var fp = GetFunctionPointer(9);
            if(m_SetExtendModeYFunc==null) m_SetExtendModeYFunc = (SetExtendModeYFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetExtendModeYFunc));
            
            m_SetExtendModeYFunc(m_ptr, extendModeY);
        }
        delegate void SetExtendModeYFunc(IntPtr self, D2D1_EXTEND_MODE extendModeY);
        SetExtendModeYFunc m_SetExtendModeYFunc;

        public virtual void SetInterpolationMode(
            D2D1_BITMAP_INTERPOLATION_MODE interpolationMode
        ){
            var fp = GetFunctionPointer(10);
            if(m_SetInterpolationModeFunc==null) m_SetInterpolationModeFunc = (SetInterpolationModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetInterpolationModeFunc));
            
            m_SetInterpolationModeFunc(m_ptr, interpolationMode);
        }
        delegate void SetInterpolationModeFunc(IntPtr self, D2D1_BITMAP_INTERPOLATION_MODE interpolationMode);
        SetInterpolationModeFunc m_SetInterpolationModeFunc;

        public virtual void SetBitmap(
            ID2D1Bitmap bitmap
        ){
            var fp = GetFunctionPointer(11);
            if(m_SetBitmapFunc==null) m_SetBitmapFunc = (SetBitmapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetBitmapFunc));
            
            m_SetBitmapFunc(m_ptr, bitmap!=null ? bitmap.Ptr : IntPtr.Zero);
        }
        delegate void SetBitmapFunc(IntPtr self, IntPtr bitmap);
        SetBitmapFunc m_SetBitmapFunc;

        public virtual D2D1_EXTEND_MODE GetExtendModeX(
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetExtendModeXFunc==null) m_GetExtendModeXFunc = (GetExtendModeXFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetExtendModeXFunc));
            
            return m_GetExtendModeXFunc(m_ptr);
        }
        delegate D2D1_EXTEND_MODE GetExtendModeXFunc(IntPtr self);
        GetExtendModeXFunc m_GetExtendModeXFunc;

        public virtual D2D1_EXTEND_MODE GetExtendModeY(
        ){
            var fp = GetFunctionPointer(13);
            if(m_GetExtendModeYFunc==null) m_GetExtendModeYFunc = (GetExtendModeYFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetExtendModeYFunc));
            
            return m_GetExtendModeYFunc(m_ptr);
        }
        delegate D2D1_EXTEND_MODE GetExtendModeYFunc(IntPtr self);
        GetExtendModeYFunc m_GetExtendModeYFunc;

        public virtual D2D1_BITMAP_INTERPOLATION_MODE GetInterpolationMode(
        ){
            var fp = GetFunctionPointer(14);
            if(m_GetInterpolationModeFunc==null) m_GetInterpolationModeFunc = (GetInterpolationModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetInterpolationModeFunc));
            
            return m_GetInterpolationModeFunc(m_ptr);
        }
        delegate D2D1_BITMAP_INTERPOLATION_MODE GetInterpolationModeFunc(IntPtr self);
        GetInterpolationModeFunc m_GetInterpolationModeFunc;

        public virtual void GetBitmap(
            out ID2D1Bitmap bitmap
        ){
            var fp = GetFunctionPointer(15);
            if(m_GetBitmapFunc==null) m_GetBitmapFunc = (GetBitmapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBitmapFunc));
            bitmap = new ID2D1Bitmap();
            m_GetBitmapFunc(m_ptr, out bitmap.PtrForNew);
        }
        delegate void GetBitmapFunc(IntPtr self, out IntPtr bitmap);
        GetBitmapFunc m_GetBitmapFunc;

    }
}
