// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ITypeComp: IUnknown
    {
        static Guid s_uuid = new Guid("00020403-0000-0000-c000-000000000046");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int Bind(
            out ushort szName,
            uint lHashVal,
            ushort wFlags,
            out ITypeInfo ppTInfo,
            out tagDESCKIND pDescKind,
            out tagBINDPTR pBindPtr
        ){
            var fp = GetFunctionPointer(3);
            if(m_BindFunc==null) m_BindFunc = (BindFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(BindFunc));
            ppTInfo = new ITypeInfo();
            return m_BindFunc(m_ptr, out szName, lHashVal, wFlags, out ppTInfo.PtrForNew, out pDescKind, out pBindPtr);
        }
        delegate int BindFunc(IntPtr self, out ushort szName, uint lHashVal, ushort wFlags, out IntPtr ppTInfo, out tagDESCKIND pDescKind, out tagBINDPTR pBindPtr);
        BindFunc m_BindFunc;

        public virtual int BindType(
            out ushort szName,
            uint lHashVal,
            out ITypeInfo ppTInfo,
            out ITypeComp ppTComp
        ){
            var fp = GetFunctionPointer(4);
            if(m_BindTypeFunc==null) m_BindTypeFunc = (BindTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(BindTypeFunc));
            ppTInfo = new ITypeInfo();ppTComp = new ITypeComp();
            return m_BindTypeFunc(m_ptr, out szName, lHashVal, out ppTInfo.PtrForNew, out ppTComp.PtrForNew);
        }
        delegate int BindTypeFunc(IntPtr self, out ushort szName, uint lHashVal, out IntPtr ppTInfo, out IntPtr ppTComp);
        BindTypeFunc m_BindTypeFunc;

    }
}
