// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDXGIOutput4: IDXGIOutput3
    {
        static Guid s_uuid = new Guid("dc7dca35-2196-414d-9f53-617884032a60");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int CheckOverlayColorSpaceSupport(
            DXGI_FORMAT Format,
            DXGI_COLOR_SPACE_TYPE ColorSpace,
            IUnknown pConcernedDevice,
            out uint pFlags
        ){
            var fp = GetFunctionPointer(25);
            if(m_CheckOverlayColorSpaceSupportFunc==null) m_CheckOverlayColorSpaceSupportFunc = (CheckOverlayColorSpaceSupportFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckOverlayColorSpaceSupportFunc));
            
            return m_CheckOverlayColorSpaceSupportFunc(m_ptr, Format, ColorSpace, pConcernedDevice!=null ? pConcernedDevice.Ptr : IntPtr.Zero, out pFlags);
        }
        delegate int CheckOverlayColorSpaceSupportFunc(IntPtr self, DXGI_FORMAT Format, DXGI_COLOR_SPACE_TYPE ColorSpace, IntPtr pConcernedDevice, out uint pFlags);
        CheckOverlayColorSpaceSupportFunc m_CheckOverlayColorSpaceSupportFunc;

    }
}
