// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICPixelFormatInfo: IWICComponentInfo
    {
        static Guid s_uuid = new Guid("e8eda601-3d48-431a-ab44-69059be88bbe");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int GetFormatGUID(
            out Guid pFormat
        ){
            var fp = GetFunctionPointer(11);
            if(m_GetFormatGUIDFunc==null) m_GetFormatGUIDFunc = (GetFormatGUIDFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFormatGUIDFunc));
            
            return m_GetFormatGUIDFunc(m_ptr, out pFormat);
        }
        delegate int GetFormatGUIDFunc(IntPtr self, out Guid pFormat);
        GetFormatGUIDFunc m_GetFormatGUIDFunc;

        public virtual int GetColorContext(
            out IWICColorContext ppIColorContext
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetColorContextFunc==null) m_GetColorContextFunc = (GetColorContextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetColorContextFunc));
            ppIColorContext = new IWICColorContext();
            return m_GetColorContextFunc(m_ptr, out ppIColorContext.PtrForNew);
        }
        delegate int GetColorContextFunc(IntPtr self, out IntPtr ppIColorContext);
        GetColorContextFunc m_GetColorContextFunc;

        public virtual int GetBitsPerPixel(
            out uint puiBitsPerPixel
        ){
            var fp = GetFunctionPointer(13);
            if(m_GetBitsPerPixelFunc==null) m_GetBitsPerPixelFunc = (GetBitsPerPixelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBitsPerPixelFunc));
            
            return m_GetBitsPerPixelFunc(m_ptr, out puiBitsPerPixel);
        }
        delegate int GetBitsPerPixelFunc(IntPtr self, out uint puiBitsPerPixel);
        GetBitsPerPixelFunc m_GetBitsPerPixelFunc;

        public virtual int GetChannelCount(
            out uint puiChannelCount
        ){
            var fp = GetFunctionPointer(14);
            if(m_GetChannelCountFunc==null) m_GetChannelCountFunc = (GetChannelCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetChannelCountFunc));
            
            return m_GetChannelCountFunc(m_ptr, out puiChannelCount);
        }
        delegate int GetChannelCountFunc(IntPtr self, out uint puiChannelCount);
        GetChannelCountFunc m_GetChannelCountFunc;

        public virtual int GetChannelMask(
            uint uiChannelIndex,
            uint cbMaskBuffer,
            out byte pbMaskBuffer,
            out uint pcbActual
        ){
            var fp = GetFunctionPointer(15);
            if(m_GetChannelMaskFunc==null) m_GetChannelMaskFunc = (GetChannelMaskFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetChannelMaskFunc));
            
            return m_GetChannelMaskFunc(m_ptr, uiChannelIndex, cbMaskBuffer, out pbMaskBuffer, out pcbActual);
        }
        delegate int GetChannelMaskFunc(IntPtr self, uint uiChannelIndex, uint cbMaskBuffer, out byte pbMaskBuffer, out uint pcbActual);
        GetChannelMaskFunc m_GetChannelMaskFunc;

    }
}
