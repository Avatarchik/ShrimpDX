// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICBitmapDecoderInfo: IWICBitmapCodecInfo
    {
        static Guid s_uuid = new Guid("d8cd007f-d08f-4191-9bfc-236ea7f0e4b5");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetPatterns(
            uint cbSizePatterns,
            out WICBitmapPattern pPatterns,
            out uint pcPatterns,
            out uint pcbPatternsActual
        ){
            var fp = GetFunctionPointer(23);
            if(m_GetPatternsFunc==null) m_GetPatternsFunc = (GetPatternsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPatternsFunc));
            
            return m_GetPatternsFunc(m_ptr, cbSizePatterns, out pPatterns, out pcPatterns, out pcbPatternsActual);
        }
        delegate int GetPatternsFunc(IntPtr self, uint cbSizePatterns, out WICBitmapPattern pPatterns, out uint pcPatterns, out uint pcbPatternsActual);
        GetPatternsFunc m_GetPatternsFunc;

        public virtual int MatchesPattern(
            IStream pIStream,
            out int pfMatches
        ){
            var fp = GetFunctionPointer(24);
            if(m_MatchesPatternFunc==null) m_MatchesPatternFunc = (MatchesPatternFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MatchesPatternFunc));
            
            return m_MatchesPatternFunc(m_ptr, pIStream!=null ? pIStream.Ptr : IntPtr.Zero, out pfMatches);
        }
        delegate int MatchesPatternFunc(IntPtr self, IntPtr pIStream, out int pfMatches);
        MatchesPatternFunc m_MatchesPatternFunc;

        public virtual int CreateInstance(
            out IWICBitmapDecoder ppIBitmapDecoder
        ){
            var fp = GetFunctionPointer(25);
            if(m_CreateInstanceFunc==null) m_CreateInstanceFunc = (CreateInstanceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateInstanceFunc));
            ppIBitmapDecoder = new IWICBitmapDecoder();
            return m_CreateInstanceFunc(m_ptr, out ppIBitmapDecoder.PtrForNew);
        }
        delegate int CreateInstanceFunc(IntPtr self, out IntPtr ppIBitmapDecoder);
        CreateInstanceFunc m_CreateInstanceFunc;

    }
}
