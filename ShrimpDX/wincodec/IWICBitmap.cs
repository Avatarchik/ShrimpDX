// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICBitmap: IWICBitmapSource
    {
        static Guid s_uuid = new Guid("00000121-a8f2-4877-ba0a-fd2b6645fb94");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int Lock(
            ref WICRect prcLock,
            uint flags,
            out IWICBitmapLock ppILock
        ){
            var fp = GetFunctionPointer(8);
            if(m_LockFunc==null) m_LockFunc = (LockFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(LockFunc));
            ppILock = new IWICBitmapLock();
            return m_LockFunc(m_ptr, ref prcLock, flags, out ppILock.PtrForNew);
        }
        delegate int LockFunc(IntPtr self, ref WICRect prcLock, uint flags, out IntPtr ppILock);
        LockFunc m_LockFunc;

        public virtual int SetPalette(
            IWICPalette pIPalette
        ){
            var fp = GetFunctionPointer(9);
            if(m_SetPaletteFunc==null) m_SetPaletteFunc = (SetPaletteFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPaletteFunc));
            
            return m_SetPaletteFunc(m_ptr, pIPalette!=null ? pIPalette.Ptr : IntPtr.Zero);
        }
        delegate int SetPaletteFunc(IntPtr self, IntPtr pIPalette);
        SetPaletteFunc m_SetPaletteFunc;

        public virtual int SetResolution(
            double dpiX,
            double dpiY
        ){
            var fp = GetFunctionPointer(10);
            if(m_SetResolutionFunc==null) m_SetResolutionFunc = (SetResolutionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetResolutionFunc));
            
            return m_SetResolutionFunc(m_ptr, dpiX, dpiY);
        }
        delegate int SetResolutionFunc(IntPtr self, double dpiX, double dpiY);
        SetResolutionFunc m_SetResolutionFunc;

    }
}
