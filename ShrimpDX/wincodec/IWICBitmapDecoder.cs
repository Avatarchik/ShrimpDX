// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICBitmapDecoder: IUnknown
    {
        static Guid s_uuid = new Guid("9edde9e7-8dee-47ea-99df-e6faf2ed44bf");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int QueryCapability(
            IStream pIStream,
            out uint pdwCapability
        ){
            var fp = GetFunctionPointer(3);
            if(m_QueryCapabilityFunc==null) m_QueryCapabilityFunc = (QueryCapabilityFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryCapabilityFunc));
            
            return m_QueryCapabilityFunc(m_ptr, pIStream!=null ? pIStream.Ptr : IntPtr.Zero, out pdwCapability);
        }
        delegate int QueryCapabilityFunc(IntPtr self, IntPtr pIStream, out uint pdwCapability);
        QueryCapabilityFunc m_QueryCapabilityFunc;

        public virtual int Initialize(
            IStream pIStream,
            WICDecodeOptions cacheOptions
        ){
            var fp = GetFunctionPointer(4);
            if(m_InitializeFunc==null) m_InitializeFunc = (InitializeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(InitializeFunc));
            
            return m_InitializeFunc(m_ptr, pIStream!=null ? pIStream.Ptr : IntPtr.Zero, cacheOptions);
        }
        delegate int InitializeFunc(IntPtr self, IntPtr pIStream, WICDecodeOptions cacheOptions);
        InitializeFunc m_InitializeFunc;

        public virtual int GetContainerFormat(
            out Guid pguidContainerFormat
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetContainerFormatFunc==null) m_GetContainerFormatFunc = (GetContainerFormatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetContainerFormatFunc));
            
            return m_GetContainerFormatFunc(m_ptr, out pguidContainerFormat);
        }
        delegate int GetContainerFormatFunc(IntPtr self, out Guid pguidContainerFormat);
        GetContainerFormatFunc m_GetContainerFormatFunc;

        public virtual int GetDecoderInfo(
            out IWICBitmapDecoderInfo ppIDecoderInfo
        ){
            var fp = GetFunctionPointer(6);
            if(m_GetDecoderInfoFunc==null) m_GetDecoderInfoFunc = (GetDecoderInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDecoderInfoFunc));
            ppIDecoderInfo = new IWICBitmapDecoderInfo();
            return m_GetDecoderInfoFunc(m_ptr, out ppIDecoderInfo.PtrForNew);
        }
        delegate int GetDecoderInfoFunc(IntPtr self, out IntPtr ppIDecoderInfo);
        GetDecoderInfoFunc m_GetDecoderInfoFunc;

        public virtual int CopyPalette(
            IWICPalette pIPalette
        ){
            var fp = GetFunctionPointer(7);
            if(m_CopyPaletteFunc==null) m_CopyPaletteFunc = (CopyPaletteFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CopyPaletteFunc));
            
            return m_CopyPaletteFunc(m_ptr, pIPalette!=null ? pIPalette.Ptr : IntPtr.Zero);
        }
        delegate int CopyPaletteFunc(IntPtr self, IntPtr pIPalette);
        CopyPaletteFunc m_CopyPaletteFunc;

        public virtual int GetMetadataQueryReader(
            out IWICMetadataQueryReader ppIMetadataQueryReader
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetMetadataQueryReaderFunc==null) m_GetMetadataQueryReaderFunc = (GetMetadataQueryReaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMetadataQueryReaderFunc));
            ppIMetadataQueryReader = new IWICMetadataQueryReader();
            return m_GetMetadataQueryReaderFunc(m_ptr, out ppIMetadataQueryReader.PtrForNew);
        }
        delegate int GetMetadataQueryReaderFunc(IntPtr self, out IntPtr ppIMetadataQueryReader);
        GetMetadataQueryReaderFunc m_GetMetadataQueryReaderFunc;

        public virtual int GetPreview(
            out IWICBitmapSource ppIBitmapSource
        ){
            var fp = GetFunctionPointer(9);
            if(m_GetPreviewFunc==null) m_GetPreviewFunc = (GetPreviewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPreviewFunc));
            ppIBitmapSource = new IWICBitmapSource();
            return m_GetPreviewFunc(m_ptr, out ppIBitmapSource.PtrForNew);
        }
        delegate int GetPreviewFunc(IntPtr self, out IntPtr ppIBitmapSource);
        GetPreviewFunc m_GetPreviewFunc;

        public virtual int GetColorContexts(
            uint cCount,
            out IWICColorContext ppIColorContexts,
            out uint pcActualCount
        ){
            var fp = GetFunctionPointer(10);
            if(m_GetColorContextsFunc==null) m_GetColorContextsFunc = (GetColorContextsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetColorContextsFunc));
            ppIColorContexts = new IWICColorContext();
            return m_GetColorContextsFunc(m_ptr, cCount, out ppIColorContexts.PtrForNew, out pcActualCount);
        }
        delegate int GetColorContextsFunc(IntPtr self, uint cCount, out IntPtr ppIColorContexts, out uint pcActualCount);
        GetColorContextsFunc m_GetColorContextsFunc;

        public virtual int GetThumbnail(
            out IWICBitmapSource ppIThumbnail
        ){
            var fp = GetFunctionPointer(11);
            if(m_GetThumbnailFunc==null) m_GetThumbnailFunc = (GetThumbnailFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetThumbnailFunc));
            ppIThumbnail = new IWICBitmapSource();
            return m_GetThumbnailFunc(m_ptr, out ppIThumbnail.PtrForNew);
        }
        delegate int GetThumbnailFunc(IntPtr self, out IntPtr ppIThumbnail);
        GetThumbnailFunc m_GetThumbnailFunc;

        public virtual int GetFrameCount(
            out uint pCount
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetFrameCountFunc==null) m_GetFrameCountFunc = (GetFrameCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFrameCountFunc));
            
            return m_GetFrameCountFunc(m_ptr, out pCount);
        }
        delegate int GetFrameCountFunc(IntPtr self, out uint pCount);
        GetFrameCountFunc m_GetFrameCountFunc;

        public virtual int GetFrame(
            uint index,
            out IWICBitmapFrameDecode ppIBitmapFrame
        ){
            var fp = GetFunctionPointer(13);
            if(m_GetFrameFunc==null) m_GetFrameFunc = (GetFrameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFrameFunc));
            ppIBitmapFrame = new IWICBitmapFrameDecode();
            return m_GetFrameFunc(m_ptr, index, out ppIBitmapFrame.PtrForNew);
        }
        delegate int GetFrameFunc(IntPtr self, uint index, out IntPtr ppIBitmapFrame);
        GetFrameFunc m_GetFrameFunc;

    }
}
