// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICFormatConverter: IWICBitmapSource
    {
        static Guid s_uuid = new Guid("00000301-a8f2-4877-ba0a-fd2b6645fb94");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int Initialize(
            IWICBitmapSource pISource,
            ref Guid dstFormat,
            WICBitmapDitherType dither,
            IWICPalette pIPalette,
            double alphaThresholdPercent,
            WICBitmapPaletteType paletteTranslate
        ){
            var fp = GetFunctionPointer(8);
            if(m_InitializeFunc==null) m_InitializeFunc = (InitializeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(InitializeFunc));
            
            return m_InitializeFunc(m_ptr, pISource!=null ? pISource.Ptr : IntPtr.Zero, ref dstFormat, dither, pIPalette!=null ? pIPalette.Ptr : IntPtr.Zero, alphaThresholdPercent, paletteTranslate);
        }
        delegate int InitializeFunc(IntPtr self, IntPtr pISource, ref Guid dstFormat, WICBitmapDitherType dither, IntPtr pIPalette, double alphaThresholdPercent, WICBitmapPaletteType paletteTranslate);
        InitializeFunc m_InitializeFunc;

        public virtual int CanConvert(
            ref Guid srcPixelFormat,
            ref Guid dstPixelFormat,
            out int pfCanConvert
        ){
            var fp = GetFunctionPointer(9);
            if(m_CanConvertFunc==null) m_CanConvertFunc = (CanConvertFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CanConvertFunc));
            
            return m_CanConvertFunc(m_ptr, ref srcPixelFormat, ref dstPixelFormat, out pfCanConvert);
        }
        delegate int CanConvertFunc(IntPtr self, ref Guid srcPixelFormat, ref Guid dstPixelFormat, out int pfCanConvert);
        CanConvertFunc m_CanConvertFunc;

    }
}
