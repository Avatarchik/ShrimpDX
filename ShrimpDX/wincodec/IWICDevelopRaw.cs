// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICDevelopRaw: IWICBitmapFrameDecode
    {
        static Guid s_uuid = new Guid("fbec5e44-f7be-4b65-b7f8-c0c81fef026d");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int QueryRawCapabilitiesInfo(
            out WICRawCapabilitiesInfo pInfo
        ){
            var fp = GetFunctionPointer(11);
            if(m_QueryRawCapabilitiesInfoFunc==null) m_QueryRawCapabilitiesInfoFunc = (QueryRawCapabilitiesInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryRawCapabilitiesInfoFunc));
            
            return m_QueryRawCapabilitiesInfoFunc(m_ptr, out pInfo);
        }
        delegate int QueryRawCapabilitiesInfoFunc(IntPtr self, out WICRawCapabilitiesInfo pInfo);
        QueryRawCapabilitiesInfoFunc m_QueryRawCapabilitiesInfoFunc;

        public virtual int LoadParameterSet(
            WICRawParameterSet ParameterSet
        ){
            var fp = GetFunctionPointer(12);
            if(m_LoadParameterSetFunc==null) m_LoadParameterSetFunc = (LoadParameterSetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(LoadParameterSetFunc));
            
            return m_LoadParameterSetFunc(m_ptr, ParameterSet);
        }
        delegate int LoadParameterSetFunc(IntPtr self, WICRawParameterSet ParameterSet);
        LoadParameterSetFunc m_LoadParameterSetFunc;

        public virtual int GetCurrentParameterSet(
            out IPropertyBag2 ppCurrentParameterSet
        ){
            var fp = GetFunctionPointer(13);
            if(m_GetCurrentParameterSetFunc==null) m_GetCurrentParameterSetFunc = (GetCurrentParameterSetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCurrentParameterSetFunc));
            ppCurrentParameterSet = new IPropertyBag2();
            return m_GetCurrentParameterSetFunc(m_ptr, out ppCurrentParameterSet.PtrForNew);
        }
        delegate int GetCurrentParameterSetFunc(IntPtr self, out IntPtr ppCurrentParameterSet);
        GetCurrentParameterSetFunc m_GetCurrentParameterSetFunc;

        public virtual int SetExposureCompensation(
            double ev
        ){
            var fp = GetFunctionPointer(14);
            if(m_SetExposureCompensationFunc==null) m_SetExposureCompensationFunc = (SetExposureCompensationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetExposureCompensationFunc));
            
            return m_SetExposureCompensationFunc(m_ptr, ev);
        }
        delegate int SetExposureCompensationFunc(IntPtr self, double ev);
        SetExposureCompensationFunc m_SetExposureCompensationFunc;

        public virtual int GetExposureCompensation(
            out double pEV
        ){
            var fp = GetFunctionPointer(15);
            if(m_GetExposureCompensationFunc==null) m_GetExposureCompensationFunc = (GetExposureCompensationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetExposureCompensationFunc));
            
            return m_GetExposureCompensationFunc(m_ptr, out pEV);
        }
        delegate int GetExposureCompensationFunc(IntPtr self, out double pEV);
        GetExposureCompensationFunc m_GetExposureCompensationFunc;

        public virtual int SetWhitePointRGB(
            uint Red,
            uint Green,
            uint Blue
        ){
            var fp = GetFunctionPointer(16);
            if(m_SetWhitePointRGBFunc==null) m_SetWhitePointRGBFunc = (SetWhitePointRGBFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetWhitePointRGBFunc));
            
            return m_SetWhitePointRGBFunc(m_ptr, Red, Green, Blue);
        }
        delegate int SetWhitePointRGBFunc(IntPtr self, uint Red, uint Green, uint Blue);
        SetWhitePointRGBFunc m_SetWhitePointRGBFunc;

        public virtual int GetWhitePointRGB(
            out uint pRed,
            out uint pGreen,
            out uint pBlue
        ){
            var fp = GetFunctionPointer(17);
            if(m_GetWhitePointRGBFunc==null) m_GetWhitePointRGBFunc = (GetWhitePointRGBFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetWhitePointRGBFunc));
            
            return m_GetWhitePointRGBFunc(m_ptr, out pRed, out pGreen, out pBlue);
        }
        delegate int GetWhitePointRGBFunc(IntPtr self, out uint pRed, out uint pGreen, out uint pBlue);
        GetWhitePointRGBFunc m_GetWhitePointRGBFunc;

        public virtual int SetNamedWhitePoint(
            WICNamedWhitePoint WhitePoint
        ){
            var fp = GetFunctionPointer(18);
            if(m_SetNamedWhitePointFunc==null) m_SetNamedWhitePointFunc = (SetNamedWhitePointFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetNamedWhitePointFunc));
            
            return m_SetNamedWhitePointFunc(m_ptr, WhitePoint);
        }
        delegate int SetNamedWhitePointFunc(IntPtr self, WICNamedWhitePoint WhitePoint);
        SetNamedWhitePointFunc m_SetNamedWhitePointFunc;

        public virtual int GetNamedWhitePoint(
            out WICNamedWhitePoint pWhitePoint
        ){
            var fp = GetFunctionPointer(19);
            if(m_GetNamedWhitePointFunc==null) m_GetNamedWhitePointFunc = (GetNamedWhitePointFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetNamedWhitePointFunc));
            
            return m_GetNamedWhitePointFunc(m_ptr, out pWhitePoint);
        }
        delegate int GetNamedWhitePointFunc(IntPtr self, out WICNamedWhitePoint pWhitePoint);
        GetNamedWhitePointFunc m_GetNamedWhitePointFunc;

        public virtual int SetWhitePointKelvin(
            uint WhitePointKelvin
        ){
            var fp = GetFunctionPointer(20);
            if(m_SetWhitePointKelvinFunc==null) m_SetWhitePointKelvinFunc = (SetWhitePointKelvinFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetWhitePointKelvinFunc));
            
            return m_SetWhitePointKelvinFunc(m_ptr, WhitePointKelvin);
        }
        delegate int SetWhitePointKelvinFunc(IntPtr self, uint WhitePointKelvin);
        SetWhitePointKelvinFunc m_SetWhitePointKelvinFunc;

        public virtual int GetWhitePointKelvin(
            out uint pWhitePointKelvin
        ){
            var fp = GetFunctionPointer(21);
            if(m_GetWhitePointKelvinFunc==null) m_GetWhitePointKelvinFunc = (GetWhitePointKelvinFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetWhitePointKelvinFunc));
            
            return m_GetWhitePointKelvinFunc(m_ptr, out pWhitePointKelvin);
        }
        delegate int GetWhitePointKelvinFunc(IntPtr self, out uint pWhitePointKelvin);
        GetWhitePointKelvinFunc m_GetWhitePointKelvinFunc;

        public virtual int GetKelvinRangeInfo(
            out uint pMinKelvinTemp,
            out uint pMaxKelvinTemp,
            out uint pKelvinTempStepValue
        ){
            var fp = GetFunctionPointer(22);
            if(m_GetKelvinRangeInfoFunc==null) m_GetKelvinRangeInfoFunc = (GetKelvinRangeInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetKelvinRangeInfoFunc));
            
            return m_GetKelvinRangeInfoFunc(m_ptr, out pMinKelvinTemp, out pMaxKelvinTemp, out pKelvinTempStepValue);
        }
        delegate int GetKelvinRangeInfoFunc(IntPtr self, out uint pMinKelvinTemp, out uint pMaxKelvinTemp, out uint pKelvinTempStepValue);
        GetKelvinRangeInfoFunc m_GetKelvinRangeInfoFunc;

        public virtual int SetContrast(
            double Contrast
        ){
            var fp = GetFunctionPointer(23);
            if(m_SetContrastFunc==null) m_SetContrastFunc = (SetContrastFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetContrastFunc));
            
            return m_SetContrastFunc(m_ptr, Contrast);
        }
        delegate int SetContrastFunc(IntPtr self, double Contrast);
        SetContrastFunc m_SetContrastFunc;

        public virtual int GetContrast(
            out double pContrast
        ){
            var fp = GetFunctionPointer(24);
            if(m_GetContrastFunc==null) m_GetContrastFunc = (GetContrastFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetContrastFunc));
            
            return m_GetContrastFunc(m_ptr, out pContrast);
        }
        delegate int GetContrastFunc(IntPtr self, out double pContrast);
        GetContrastFunc m_GetContrastFunc;

        public virtual int SetGamma(
            double Gamma
        ){
            var fp = GetFunctionPointer(25);
            if(m_SetGammaFunc==null) m_SetGammaFunc = (SetGammaFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetGammaFunc));
            
            return m_SetGammaFunc(m_ptr, Gamma);
        }
        delegate int SetGammaFunc(IntPtr self, double Gamma);
        SetGammaFunc m_SetGammaFunc;

        public virtual int GetGamma(
            out double pGamma
        ){
            var fp = GetFunctionPointer(26);
            if(m_GetGammaFunc==null) m_GetGammaFunc = (GetGammaFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetGammaFunc));
            
            return m_GetGammaFunc(m_ptr, out pGamma);
        }
        delegate int GetGammaFunc(IntPtr self, out double pGamma);
        GetGammaFunc m_GetGammaFunc;

        public virtual int SetSharpness(
            double Sharpness
        ){
            var fp = GetFunctionPointer(27);
            if(m_SetSharpnessFunc==null) m_SetSharpnessFunc = (SetSharpnessFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetSharpnessFunc));
            
            return m_SetSharpnessFunc(m_ptr, Sharpness);
        }
        delegate int SetSharpnessFunc(IntPtr self, double Sharpness);
        SetSharpnessFunc m_SetSharpnessFunc;

        public virtual int GetSharpness(
            out double pSharpness
        ){
            var fp = GetFunctionPointer(28);
            if(m_GetSharpnessFunc==null) m_GetSharpnessFunc = (GetSharpnessFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSharpnessFunc));
            
            return m_GetSharpnessFunc(m_ptr, out pSharpness);
        }
        delegate int GetSharpnessFunc(IntPtr self, out double pSharpness);
        GetSharpnessFunc m_GetSharpnessFunc;

        public virtual int SetSaturation(
            double Saturation
        ){
            var fp = GetFunctionPointer(29);
            if(m_SetSaturationFunc==null) m_SetSaturationFunc = (SetSaturationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetSaturationFunc));
            
            return m_SetSaturationFunc(m_ptr, Saturation);
        }
        delegate int SetSaturationFunc(IntPtr self, double Saturation);
        SetSaturationFunc m_SetSaturationFunc;

        public virtual int GetSaturation(
            out double pSaturation
        ){
            var fp = GetFunctionPointer(30);
            if(m_GetSaturationFunc==null) m_GetSaturationFunc = (GetSaturationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSaturationFunc));
            
            return m_GetSaturationFunc(m_ptr, out pSaturation);
        }
        delegate int GetSaturationFunc(IntPtr self, out double pSaturation);
        GetSaturationFunc m_GetSaturationFunc;

        public virtual int SetTint(
            double Tint
        ){
            var fp = GetFunctionPointer(31);
            if(m_SetTintFunc==null) m_SetTintFunc = (SetTintFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetTintFunc));
            
            return m_SetTintFunc(m_ptr, Tint);
        }
        delegate int SetTintFunc(IntPtr self, double Tint);
        SetTintFunc m_SetTintFunc;

        public virtual int GetTint(
            out double pTint
        ){
            var fp = GetFunctionPointer(32);
            if(m_GetTintFunc==null) m_GetTintFunc = (GetTintFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTintFunc));
            
            return m_GetTintFunc(m_ptr, out pTint);
        }
        delegate int GetTintFunc(IntPtr self, out double pTint);
        GetTintFunc m_GetTintFunc;

        public virtual int SetNoiseReduction(
            double NoiseReduction
        ){
            var fp = GetFunctionPointer(33);
            if(m_SetNoiseReductionFunc==null) m_SetNoiseReductionFunc = (SetNoiseReductionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetNoiseReductionFunc));
            
            return m_SetNoiseReductionFunc(m_ptr, NoiseReduction);
        }
        delegate int SetNoiseReductionFunc(IntPtr self, double NoiseReduction);
        SetNoiseReductionFunc m_SetNoiseReductionFunc;

        public virtual int GetNoiseReduction(
            out double pNoiseReduction
        ){
            var fp = GetFunctionPointer(34);
            if(m_GetNoiseReductionFunc==null) m_GetNoiseReductionFunc = (GetNoiseReductionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetNoiseReductionFunc));
            
            return m_GetNoiseReductionFunc(m_ptr, out pNoiseReduction);
        }
        delegate int GetNoiseReductionFunc(IntPtr self, out double pNoiseReduction);
        GetNoiseReductionFunc m_GetNoiseReductionFunc;

        public virtual int SetDestinationColorContext(
            IWICColorContext pColorContext
        ){
            var fp = GetFunctionPointer(35);
            if(m_SetDestinationColorContextFunc==null) m_SetDestinationColorContextFunc = (SetDestinationColorContextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetDestinationColorContextFunc));
            
            return m_SetDestinationColorContextFunc(m_ptr, pColorContext!=null ? pColorContext.Ptr : IntPtr.Zero);
        }
        delegate int SetDestinationColorContextFunc(IntPtr self, IntPtr pColorContext);
        SetDestinationColorContextFunc m_SetDestinationColorContextFunc;

        public virtual int SetToneCurve(
            uint cbToneCurveSize,
            ref WICRawToneCurve pToneCurve
        ){
            var fp = GetFunctionPointer(36);
            if(m_SetToneCurveFunc==null) m_SetToneCurveFunc = (SetToneCurveFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetToneCurveFunc));
            
            return m_SetToneCurveFunc(m_ptr, cbToneCurveSize, ref pToneCurve);
        }
        delegate int SetToneCurveFunc(IntPtr self, uint cbToneCurveSize, ref WICRawToneCurve pToneCurve);
        SetToneCurveFunc m_SetToneCurveFunc;

        public virtual int GetToneCurve(
            uint cbToneCurveBufferSize,
            out WICRawToneCurve pToneCurve,
            out uint pcbActualToneCurveBufferSize
        ){
            var fp = GetFunctionPointer(37);
            if(m_GetToneCurveFunc==null) m_GetToneCurveFunc = (GetToneCurveFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetToneCurveFunc));
            
            return m_GetToneCurveFunc(m_ptr, cbToneCurveBufferSize, out pToneCurve, out pcbActualToneCurveBufferSize);
        }
        delegate int GetToneCurveFunc(IntPtr self, uint cbToneCurveBufferSize, out WICRawToneCurve pToneCurve, out uint pcbActualToneCurveBufferSize);
        GetToneCurveFunc m_GetToneCurveFunc;

        public virtual int SetRotation(
            double Rotation
        ){
            var fp = GetFunctionPointer(38);
            if(m_SetRotationFunc==null) m_SetRotationFunc = (SetRotationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRotationFunc));
            
            return m_SetRotationFunc(m_ptr, Rotation);
        }
        delegate int SetRotationFunc(IntPtr self, double Rotation);
        SetRotationFunc m_SetRotationFunc;

        public virtual int GetRotation(
            out double pRotation
        ){
            var fp = GetFunctionPointer(39);
            if(m_GetRotationFunc==null) m_GetRotationFunc = (GetRotationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRotationFunc));
            
            return m_GetRotationFunc(m_ptr, out pRotation);
        }
        delegate int GetRotationFunc(IntPtr self, out double pRotation);
        GetRotationFunc m_GetRotationFunc;

        public virtual int SetRenderMode(
            WICRawRenderMode RenderMode
        ){
            var fp = GetFunctionPointer(40);
            if(m_SetRenderModeFunc==null) m_SetRenderModeFunc = (SetRenderModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRenderModeFunc));
            
            return m_SetRenderModeFunc(m_ptr, RenderMode);
        }
        delegate int SetRenderModeFunc(IntPtr self, WICRawRenderMode RenderMode);
        SetRenderModeFunc m_SetRenderModeFunc;

        public virtual int GetRenderMode(
            out WICRawRenderMode pRenderMode
        ){
            var fp = GetFunctionPointer(41);
            if(m_GetRenderModeFunc==null) m_GetRenderModeFunc = (GetRenderModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRenderModeFunc));
            
            return m_GetRenderModeFunc(m_ptr, out pRenderMode);
        }
        delegate int GetRenderModeFunc(IntPtr self, out WICRawRenderMode pRenderMode);
        GetRenderModeFunc m_GetRenderModeFunc;

        public virtual int SetNotificationCallback(
            IWICDevelopRawNotificationCallback pCallback
        ){
            var fp = GetFunctionPointer(42);
            if(m_SetNotificationCallbackFunc==null) m_SetNotificationCallbackFunc = (SetNotificationCallbackFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetNotificationCallbackFunc));
            
            return m_SetNotificationCallbackFunc(m_ptr, pCallback!=null ? pCallback.Ptr : IntPtr.Zero);
        }
        delegate int SetNotificationCallbackFunc(IntPtr self, IntPtr pCallback);
        SetNotificationCallbackFunc m_SetNotificationCallbackFunc;

    }
}
