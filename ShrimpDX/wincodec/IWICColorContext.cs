// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICColorContext: IUnknown
    {
        static Guid s_uuid = new Guid("3c613a02-34b2-44ea-9a7c-45aea9c6fd6d");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int InitializeFromFilename(
            ref ushort wzFilename
        ){
            var fp = GetFunctionPointer(3);
            if(m_InitializeFromFilenameFunc==null) m_InitializeFromFilenameFunc = (InitializeFromFilenameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(InitializeFromFilenameFunc));
            
            return m_InitializeFromFilenameFunc(m_ptr, ref wzFilename);
        }
        delegate int InitializeFromFilenameFunc(IntPtr self, ref ushort wzFilename);
        InitializeFromFilenameFunc m_InitializeFromFilenameFunc;

        public virtual int InitializeFromMemory(
            ref byte pbBuffer,
            uint cbBufferSize
        ){
            var fp = GetFunctionPointer(4);
            if(m_InitializeFromMemoryFunc==null) m_InitializeFromMemoryFunc = (InitializeFromMemoryFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(InitializeFromMemoryFunc));
            
            return m_InitializeFromMemoryFunc(m_ptr, ref pbBuffer, cbBufferSize);
        }
        delegate int InitializeFromMemoryFunc(IntPtr self, ref byte pbBuffer, uint cbBufferSize);
        InitializeFromMemoryFunc m_InitializeFromMemoryFunc;

        public virtual int InitializeFromExifColorSpace(
            uint value
        ){
            var fp = GetFunctionPointer(5);
            if(m_InitializeFromExifColorSpaceFunc==null) m_InitializeFromExifColorSpaceFunc = (InitializeFromExifColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(InitializeFromExifColorSpaceFunc));
            
            return m_InitializeFromExifColorSpaceFunc(m_ptr, value);
        }
        delegate int InitializeFromExifColorSpaceFunc(IntPtr self, uint value);
        InitializeFromExifColorSpaceFunc m_InitializeFromExifColorSpaceFunc;

        public virtual int GetComType(
            out WICColorContextType pType
        ){
            var fp = GetFunctionPointer(6);
            if(m_GetTypeFunc==null) m_GetTypeFunc = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return m_GetTypeFunc(m_ptr, out pType);
        }
        delegate int GetTypeFunc(IntPtr self, out WICColorContextType pType);
        GetTypeFunc m_GetTypeFunc;

        public virtual int GetProfileBytes(
            uint cbBuffer,
            out byte pbBuffer,
            out uint pcbActual
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetProfileBytesFunc==null) m_GetProfileBytesFunc = (GetProfileBytesFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetProfileBytesFunc));
            
            return m_GetProfileBytesFunc(m_ptr, cbBuffer, out pbBuffer, out pcbActual);
        }
        delegate int GetProfileBytesFunc(IntPtr self, uint cbBuffer, out byte pbBuffer, out uint pcbActual);
        GetProfileBytesFunc m_GetProfileBytesFunc;

        public virtual int GetExifColorSpace(
            out uint pValue
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetExifColorSpaceFunc==null) m_GetExifColorSpaceFunc = (GetExifColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetExifColorSpaceFunc));
            
            return m_GetExifColorSpaceFunc(m_ptr, out pValue);
        }
        delegate int GetExifColorSpaceFunc(IntPtr self, out uint pValue);
        GetExifColorSpaceFunc m_GetExifColorSpaceFunc;

    }
}
