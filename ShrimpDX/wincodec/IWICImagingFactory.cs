// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICImagingFactory: IUnknown
    {
        static Guid s_uuid = new Guid("ec5ec8a9-c395-4314-9c77-54d7a935ff70");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int CreateDecoderFromFilename(
            ref ushort wzFilename,
            ref Guid pguidVendor,
            uint dwDesiredAccess,
            WICDecodeOptions metadataOptions,
            out IWICBitmapDecoder ppIDecoder
        ){
            var fp = GetFunctionPointer(3);
            if(m_CreateDecoderFromFilenameFunc==null) m_CreateDecoderFromFilenameFunc = (CreateDecoderFromFilenameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDecoderFromFilenameFunc));
            ppIDecoder = new IWICBitmapDecoder();
            return m_CreateDecoderFromFilenameFunc(m_ptr, ref wzFilename, ref pguidVendor, dwDesiredAccess, metadataOptions, out ppIDecoder.PtrForNew);
        }
        delegate int CreateDecoderFromFilenameFunc(IntPtr self, ref ushort wzFilename, ref Guid pguidVendor, uint dwDesiredAccess, WICDecodeOptions metadataOptions, out IntPtr ppIDecoder);
        CreateDecoderFromFilenameFunc m_CreateDecoderFromFilenameFunc;

        public virtual int CreateDecoderFromStream(
            IStream pIStream,
            ref Guid pguidVendor,
            WICDecodeOptions metadataOptions,
            out IWICBitmapDecoder ppIDecoder
        ){
            var fp = GetFunctionPointer(4);
            if(m_CreateDecoderFromStreamFunc==null) m_CreateDecoderFromStreamFunc = (CreateDecoderFromStreamFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDecoderFromStreamFunc));
            ppIDecoder = new IWICBitmapDecoder();
            return m_CreateDecoderFromStreamFunc(m_ptr, pIStream!=null ? pIStream.Ptr : IntPtr.Zero, ref pguidVendor, metadataOptions, out ppIDecoder.PtrForNew);
        }
        delegate int CreateDecoderFromStreamFunc(IntPtr self, IntPtr pIStream, ref Guid pguidVendor, WICDecodeOptions metadataOptions, out IntPtr ppIDecoder);
        CreateDecoderFromStreamFunc m_CreateDecoderFromStreamFunc;

        public virtual int CreateDecoderFromFileHandle(
            ulong hFile,
            ref Guid pguidVendor,
            WICDecodeOptions metadataOptions,
            out IWICBitmapDecoder ppIDecoder
        ){
            var fp = GetFunctionPointer(5);
            if(m_CreateDecoderFromFileHandleFunc==null) m_CreateDecoderFromFileHandleFunc = (CreateDecoderFromFileHandleFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDecoderFromFileHandleFunc));
            ppIDecoder = new IWICBitmapDecoder();
            return m_CreateDecoderFromFileHandleFunc(m_ptr, hFile, ref pguidVendor, metadataOptions, out ppIDecoder.PtrForNew);
        }
        delegate int CreateDecoderFromFileHandleFunc(IntPtr self, ulong hFile, ref Guid pguidVendor, WICDecodeOptions metadataOptions, out IntPtr ppIDecoder);
        CreateDecoderFromFileHandleFunc m_CreateDecoderFromFileHandleFunc;

        public virtual int CreateComponentInfo(
            ref Guid clsidComponent,
            out IWICComponentInfo ppIInfo
        ){
            var fp = GetFunctionPointer(6);
            if(m_CreateComponentInfoFunc==null) m_CreateComponentInfoFunc = (CreateComponentInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateComponentInfoFunc));
            ppIInfo = new IWICComponentInfo();
            return m_CreateComponentInfoFunc(m_ptr, ref clsidComponent, out ppIInfo.PtrForNew);
        }
        delegate int CreateComponentInfoFunc(IntPtr self, ref Guid clsidComponent, out IntPtr ppIInfo);
        CreateComponentInfoFunc m_CreateComponentInfoFunc;

        public virtual int CreateDecoder(
            ref Guid guidContainerFormat,
            ref Guid pguidVendor,
            out IWICBitmapDecoder ppIDecoder
        ){
            var fp = GetFunctionPointer(7);
            if(m_CreateDecoderFunc==null) m_CreateDecoderFunc = (CreateDecoderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDecoderFunc));
            ppIDecoder = new IWICBitmapDecoder();
            return m_CreateDecoderFunc(m_ptr, ref guidContainerFormat, ref pguidVendor, out ppIDecoder.PtrForNew);
        }
        delegate int CreateDecoderFunc(IntPtr self, ref Guid guidContainerFormat, ref Guid pguidVendor, out IntPtr ppIDecoder);
        CreateDecoderFunc m_CreateDecoderFunc;

        public virtual int CreateEncoder(
            ref Guid guidContainerFormat,
            ref Guid pguidVendor,
            out IWICBitmapEncoder ppIEncoder
        ){
            var fp = GetFunctionPointer(8);
            if(m_CreateEncoderFunc==null) m_CreateEncoderFunc = (CreateEncoderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateEncoderFunc));
            ppIEncoder = new IWICBitmapEncoder();
            return m_CreateEncoderFunc(m_ptr, ref guidContainerFormat, ref pguidVendor, out ppIEncoder.PtrForNew);
        }
        delegate int CreateEncoderFunc(IntPtr self, ref Guid guidContainerFormat, ref Guid pguidVendor, out IntPtr ppIEncoder);
        CreateEncoderFunc m_CreateEncoderFunc;

        public virtual int CreatePalette(
            out IWICPalette ppIPalette
        ){
            var fp = GetFunctionPointer(9);
            if(m_CreatePaletteFunc==null) m_CreatePaletteFunc = (CreatePaletteFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreatePaletteFunc));
            ppIPalette = new IWICPalette();
            return m_CreatePaletteFunc(m_ptr, out ppIPalette.PtrForNew);
        }
        delegate int CreatePaletteFunc(IntPtr self, out IntPtr ppIPalette);
        CreatePaletteFunc m_CreatePaletteFunc;

        public virtual int CreateFormatConverter(
            out IWICFormatConverter ppIFormatConverter
        ){
            var fp = GetFunctionPointer(10);
            if(m_CreateFormatConverterFunc==null) m_CreateFormatConverterFunc = (CreateFormatConverterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateFormatConverterFunc));
            ppIFormatConverter = new IWICFormatConverter();
            return m_CreateFormatConverterFunc(m_ptr, out ppIFormatConverter.PtrForNew);
        }
        delegate int CreateFormatConverterFunc(IntPtr self, out IntPtr ppIFormatConverter);
        CreateFormatConverterFunc m_CreateFormatConverterFunc;

        public virtual int CreateBitmapScaler(
            out IWICBitmapScaler ppIBitmapScaler
        ){
            var fp = GetFunctionPointer(11);
            if(m_CreateBitmapScalerFunc==null) m_CreateBitmapScalerFunc = (CreateBitmapScalerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapScalerFunc));
            ppIBitmapScaler = new IWICBitmapScaler();
            return m_CreateBitmapScalerFunc(m_ptr, out ppIBitmapScaler.PtrForNew);
        }
        delegate int CreateBitmapScalerFunc(IntPtr self, out IntPtr ppIBitmapScaler);
        CreateBitmapScalerFunc m_CreateBitmapScalerFunc;

        public virtual int CreateBitmapClipper(
            out IWICBitmapClipper ppIBitmapClipper
        ){
            var fp = GetFunctionPointer(12);
            if(m_CreateBitmapClipperFunc==null) m_CreateBitmapClipperFunc = (CreateBitmapClipperFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapClipperFunc));
            ppIBitmapClipper = new IWICBitmapClipper();
            return m_CreateBitmapClipperFunc(m_ptr, out ppIBitmapClipper.PtrForNew);
        }
        delegate int CreateBitmapClipperFunc(IntPtr self, out IntPtr ppIBitmapClipper);
        CreateBitmapClipperFunc m_CreateBitmapClipperFunc;

        public virtual int CreateBitmapFlipRotator(
            out IWICBitmapFlipRotator ppIBitmapFlipRotator
        ){
            var fp = GetFunctionPointer(13);
            if(m_CreateBitmapFlipRotatorFunc==null) m_CreateBitmapFlipRotatorFunc = (CreateBitmapFlipRotatorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapFlipRotatorFunc));
            ppIBitmapFlipRotator = new IWICBitmapFlipRotator();
            return m_CreateBitmapFlipRotatorFunc(m_ptr, out ppIBitmapFlipRotator.PtrForNew);
        }
        delegate int CreateBitmapFlipRotatorFunc(IntPtr self, out IntPtr ppIBitmapFlipRotator);
        CreateBitmapFlipRotatorFunc m_CreateBitmapFlipRotatorFunc;

        public virtual int CreateStream(
            out IWICStream ppIWICStream
        ){
            var fp = GetFunctionPointer(14);
            if(m_CreateStreamFunc==null) m_CreateStreamFunc = (CreateStreamFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateStreamFunc));
            ppIWICStream = new IWICStream();
            return m_CreateStreamFunc(m_ptr, out ppIWICStream.PtrForNew);
        }
        delegate int CreateStreamFunc(IntPtr self, out IntPtr ppIWICStream);
        CreateStreamFunc m_CreateStreamFunc;

        public virtual int CreateColorContext(
            out IWICColorContext ppIWICColorContext
        ){
            var fp = GetFunctionPointer(15);
            if(m_CreateColorContextFunc==null) m_CreateColorContextFunc = (CreateColorContextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateColorContextFunc));
            ppIWICColorContext = new IWICColorContext();
            return m_CreateColorContextFunc(m_ptr, out ppIWICColorContext.PtrForNew);
        }
        delegate int CreateColorContextFunc(IntPtr self, out IntPtr ppIWICColorContext);
        CreateColorContextFunc m_CreateColorContextFunc;

        public virtual int CreateColorTransformer(
            out IWICColorTransform ppIWICColorTransform
        ){
            var fp = GetFunctionPointer(16);
            if(m_CreateColorTransformerFunc==null) m_CreateColorTransformerFunc = (CreateColorTransformerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateColorTransformerFunc));
            ppIWICColorTransform = new IWICColorTransform();
            return m_CreateColorTransformerFunc(m_ptr, out ppIWICColorTransform.PtrForNew);
        }
        delegate int CreateColorTransformerFunc(IntPtr self, out IntPtr ppIWICColorTransform);
        CreateColorTransformerFunc m_CreateColorTransformerFunc;

        public virtual int CreateBitmap(
            uint uiWidth,
            uint uiHeight,
            ref Guid pixelFormat,
            WICBitmapCreateCacheOption option,
            out IWICBitmap ppIBitmap
        ){
            var fp = GetFunctionPointer(17);
            if(m_CreateBitmapFunc==null) m_CreateBitmapFunc = (CreateBitmapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapFunc));
            ppIBitmap = new IWICBitmap();
            return m_CreateBitmapFunc(m_ptr, uiWidth, uiHeight, ref pixelFormat, option, out ppIBitmap.PtrForNew);
        }
        delegate int CreateBitmapFunc(IntPtr self, uint uiWidth, uint uiHeight, ref Guid pixelFormat, WICBitmapCreateCacheOption option, out IntPtr ppIBitmap);
        CreateBitmapFunc m_CreateBitmapFunc;

        public virtual int CreateBitmapFromSource(
            IWICBitmapSource pIBitmapSource,
            WICBitmapCreateCacheOption option,
            out IWICBitmap ppIBitmap
        ){
            var fp = GetFunctionPointer(18);
            if(m_CreateBitmapFromSourceFunc==null) m_CreateBitmapFromSourceFunc = (CreateBitmapFromSourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapFromSourceFunc));
            ppIBitmap = new IWICBitmap();
            return m_CreateBitmapFromSourceFunc(m_ptr, pIBitmapSource!=null ? pIBitmapSource.Ptr : IntPtr.Zero, option, out ppIBitmap.PtrForNew);
        }
        delegate int CreateBitmapFromSourceFunc(IntPtr self, IntPtr pIBitmapSource, WICBitmapCreateCacheOption option, out IntPtr ppIBitmap);
        CreateBitmapFromSourceFunc m_CreateBitmapFromSourceFunc;

        public virtual int CreateBitmapFromSourceRect(
            IWICBitmapSource pIBitmapSource,
            uint x,
            uint y,
            uint width,
            uint height,
            out IWICBitmap ppIBitmap
        ){
            var fp = GetFunctionPointer(19);
            if(m_CreateBitmapFromSourceRectFunc==null) m_CreateBitmapFromSourceRectFunc = (CreateBitmapFromSourceRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapFromSourceRectFunc));
            ppIBitmap = new IWICBitmap();
            return m_CreateBitmapFromSourceRectFunc(m_ptr, pIBitmapSource!=null ? pIBitmapSource.Ptr : IntPtr.Zero, x, y, width, height, out ppIBitmap.PtrForNew);
        }
        delegate int CreateBitmapFromSourceRectFunc(IntPtr self, IntPtr pIBitmapSource, uint x, uint y, uint width, uint height, out IntPtr ppIBitmap);
        CreateBitmapFromSourceRectFunc m_CreateBitmapFromSourceRectFunc;

        public virtual int CreateBitmapFromMemory(
            uint uiWidth,
            uint uiHeight,
            ref Guid pixelFormat,
            uint cbStride,
            uint cbBufferSize,
            out byte pbBuffer,
            out IWICBitmap ppIBitmap
        ){
            var fp = GetFunctionPointer(20);
            if(m_CreateBitmapFromMemoryFunc==null) m_CreateBitmapFromMemoryFunc = (CreateBitmapFromMemoryFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapFromMemoryFunc));
            ppIBitmap = new IWICBitmap();
            return m_CreateBitmapFromMemoryFunc(m_ptr, uiWidth, uiHeight, ref pixelFormat, cbStride, cbBufferSize, out pbBuffer, out ppIBitmap.PtrForNew);
        }
        delegate int CreateBitmapFromMemoryFunc(IntPtr self, uint uiWidth, uint uiHeight, ref Guid pixelFormat, uint cbStride, uint cbBufferSize, out byte pbBuffer, out IntPtr ppIBitmap);
        CreateBitmapFromMemoryFunc m_CreateBitmapFromMemoryFunc;

        public virtual int CreateBitmapFromHBITMAP(
            out HBITMAP__ hBitmap,
            out HPALETTE__ hPalette,
            WICBitmapAlphaChannelOption options,
            out IWICBitmap ppIBitmap
        ){
            var fp = GetFunctionPointer(21);
            if(m_CreateBitmapFromHBITMAPFunc==null) m_CreateBitmapFromHBITMAPFunc = (CreateBitmapFromHBITMAPFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapFromHBITMAPFunc));
            ppIBitmap = new IWICBitmap();
            return m_CreateBitmapFromHBITMAPFunc(m_ptr, out hBitmap, out hPalette, options, out ppIBitmap.PtrForNew);
        }
        delegate int CreateBitmapFromHBITMAPFunc(IntPtr self, out HBITMAP__ hBitmap, out HPALETTE__ hPalette, WICBitmapAlphaChannelOption options, out IntPtr ppIBitmap);
        CreateBitmapFromHBITMAPFunc m_CreateBitmapFromHBITMAPFunc;

        public virtual int CreateBitmapFromHICON(
            IntPtr hIcon,
            out IWICBitmap ppIBitmap
        ){
            var fp = GetFunctionPointer(22);
            if(m_CreateBitmapFromHICONFunc==null) m_CreateBitmapFromHICONFunc = (CreateBitmapFromHICONFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBitmapFromHICONFunc));
            ppIBitmap = new IWICBitmap();
            return m_CreateBitmapFromHICONFunc(m_ptr, hIcon, out ppIBitmap.PtrForNew);
        }
        delegate int CreateBitmapFromHICONFunc(IntPtr self, IntPtr hIcon, out IntPtr ppIBitmap);
        CreateBitmapFromHICONFunc m_CreateBitmapFromHICONFunc;

        public virtual int CreateComponentEnumerator(
            uint componentTypes,
            uint options,
            out IEnumUnknown ppIEnumUnknown
        ){
            var fp = GetFunctionPointer(23);
            if(m_CreateComponentEnumeratorFunc==null) m_CreateComponentEnumeratorFunc = (CreateComponentEnumeratorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateComponentEnumeratorFunc));
            ppIEnumUnknown = new IEnumUnknown();
            return m_CreateComponentEnumeratorFunc(m_ptr, componentTypes, options, out ppIEnumUnknown.PtrForNew);
        }
        delegate int CreateComponentEnumeratorFunc(IntPtr self, uint componentTypes, uint options, out IntPtr ppIEnumUnknown);
        CreateComponentEnumeratorFunc m_CreateComponentEnumeratorFunc;

        public virtual int CreateFastMetadataEncoderFromDecoder(
            IWICBitmapDecoder pIDecoder,
            out IWICFastMetadataEncoder ppIFastEncoder
        ){
            var fp = GetFunctionPointer(24);
            if(m_CreateFastMetadataEncoderFromDecoderFunc==null) m_CreateFastMetadataEncoderFromDecoderFunc = (CreateFastMetadataEncoderFromDecoderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateFastMetadataEncoderFromDecoderFunc));
            ppIFastEncoder = new IWICFastMetadataEncoder();
            return m_CreateFastMetadataEncoderFromDecoderFunc(m_ptr, pIDecoder!=null ? pIDecoder.Ptr : IntPtr.Zero, out ppIFastEncoder.PtrForNew);
        }
        delegate int CreateFastMetadataEncoderFromDecoderFunc(IntPtr self, IntPtr pIDecoder, out IntPtr ppIFastEncoder);
        CreateFastMetadataEncoderFromDecoderFunc m_CreateFastMetadataEncoderFromDecoderFunc;

        public virtual int CreateFastMetadataEncoderFromFrameDecode(
            IWICBitmapFrameDecode pIFrameDecoder,
            out IWICFastMetadataEncoder ppIFastEncoder
        ){
            var fp = GetFunctionPointer(25);
            if(m_CreateFastMetadataEncoderFromFrameDecodeFunc==null) m_CreateFastMetadataEncoderFromFrameDecodeFunc = (CreateFastMetadataEncoderFromFrameDecodeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateFastMetadataEncoderFromFrameDecodeFunc));
            ppIFastEncoder = new IWICFastMetadataEncoder();
            return m_CreateFastMetadataEncoderFromFrameDecodeFunc(m_ptr, pIFrameDecoder!=null ? pIFrameDecoder.Ptr : IntPtr.Zero, out ppIFastEncoder.PtrForNew);
        }
        delegate int CreateFastMetadataEncoderFromFrameDecodeFunc(IntPtr self, IntPtr pIFrameDecoder, out IntPtr ppIFastEncoder);
        CreateFastMetadataEncoderFromFrameDecodeFunc m_CreateFastMetadataEncoderFromFrameDecodeFunc;

        public virtual int CreateQueryWriter(
            ref Guid guidMetadataFormat,
            ref Guid pguidVendor,
            out IWICMetadataQueryWriter ppIQueryWriter
        ){
            var fp = GetFunctionPointer(26);
            if(m_CreateQueryWriterFunc==null) m_CreateQueryWriterFunc = (CreateQueryWriterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateQueryWriterFunc));
            ppIQueryWriter = new IWICMetadataQueryWriter();
            return m_CreateQueryWriterFunc(m_ptr, ref guidMetadataFormat, ref pguidVendor, out ppIQueryWriter.PtrForNew);
        }
        delegate int CreateQueryWriterFunc(IntPtr self, ref Guid guidMetadataFormat, ref Guid pguidVendor, out IntPtr ppIQueryWriter);
        CreateQueryWriterFunc m_CreateQueryWriterFunc;

        public virtual int CreateQueryWriterFromReader(
            IWICMetadataQueryReader pIQueryReader,
            ref Guid pguidVendor,
            out IWICMetadataQueryWriter ppIQueryWriter
        ){
            var fp = GetFunctionPointer(27);
            if(m_CreateQueryWriterFromReaderFunc==null) m_CreateQueryWriterFromReaderFunc = (CreateQueryWriterFromReaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateQueryWriterFromReaderFunc));
            ppIQueryWriter = new IWICMetadataQueryWriter();
            return m_CreateQueryWriterFromReaderFunc(m_ptr, pIQueryReader!=null ? pIQueryReader.Ptr : IntPtr.Zero, ref pguidVendor, out ppIQueryWriter.PtrForNew);
        }
        delegate int CreateQueryWriterFromReaderFunc(IntPtr self, IntPtr pIQueryReader, ref Guid pguidVendor, out IntPtr ppIQueryWriter);
        CreateQueryWriterFromReaderFunc m_CreateQueryWriterFromReaderFunc;

    }
}
