// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IWICComponentInfo: IUnknown
    {
        static Guid s_uuid = new Guid("23bc3f0a-698b-4357-886b-f24d50671334");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetComponentType(
            out WICComponentType pType
        ){
            var fp = GetFunctionPointer(3);
            if(m_GetComponentTypeFunc==null) m_GetComponentTypeFunc = (GetComponentTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetComponentTypeFunc));
            
            return m_GetComponentTypeFunc(m_ptr, out pType);
        }
        delegate int GetComponentTypeFunc(IntPtr self, out WICComponentType pType);
        GetComponentTypeFunc m_GetComponentTypeFunc;

        public virtual int GetCLSID(
            out Guid pclsid
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetCLSIDFunc==null) m_GetCLSIDFunc = (GetCLSIDFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCLSIDFunc));
            
            return m_GetCLSIDFunc(m_ptr, out pclsid);
        }
        delegate int GetCLSIDFunc(IntPtr self, out Guid pclsid);
        GetCLSIDFunc m_GetCLSIDFunc;

        public virtual int GetSigningStatus(
            out uint pStatus
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetSigningStatusFunc==null) m_GetSigningStatusFunc = (GetSigningStatusFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSigningStatusFunc));
            
            return m_GetSigningStatusFunc(m_ptr, out pStatus);
        }
        delegate int GetSigningStatusFunc(IntPtr self, out uint pStatus);
        GetSigningStatusFunc m_GetSigningStatusFunc;

        public virtual int GetAuthor(
            uint cchAuthor,
            out ushort wzAuthor,
            out uint pcchActual
        ){
            var fp = GetFunctionPointer(6);
            if(m_GetAuthorFunc==null) m_GetAuthorFunc = (GetAuthorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAuthorFunc));
            
            return m_GetAuthorFunc(m_ptr, cchAuthor, out wzAuthor, out pcchActual);
        }
        delegate int GetAuthorFunc(IntPtr self, uint cchAuthor, out ushort wzAuthor, out uint pcchActual);
        GetAuthorFunc m_GetAuthorFunc;

        public virtual int GetVendorGUID(
            out Guid pguidVendor
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetVendorGUIDFunc==null) m_GetVendorGUIDFunc = (GetVendorGUIDFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVendorGUIDFunc));
            
            return m_GetVendorGUIDFunc(m_ptr, out pguidVendor);
        }
        delegate int GetVendorGUIDFunc(IntPtr self, out Guid pguidVendor);
        GetVendorGUIDFunc m_GetVendorGUIDFunc;

        public virtual int GetVersion(
            uint cchVersion,
            out ushort wzVersion,
            out uint pcchActual
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetVersionFunc==null) m_GetVersionFunc = (GetVersionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVersionFunc));
            
            return m_GetVersionFunc(m_ptr, cchVersion, out wzVersion, out pcchActual);
        }
        delegate int GetVersionFunc(IntPtr self, uint cchVersion, out ushort wzVersion, out uint pcchActual);
        GetVersionFunc m_GetVersionFunc;

        public virtual int GetSpecVersion(
            uint cchSpecVersion,
            out ushort wzSpecVersion,
            out uint pcchActual
        ){
            var fp = GetFunctionPointer(9);
            if(m_GetSpecVersionFunc==null) m_GetSpecVersionFunc = (GetSpecVersionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSpecVersionFunc));
            
            return m_GetSpecVersionFunc(m_ptr, cchSpecVersion, out wzSpecVersion, out pcchActual);
        }
        delegate int GetSpecVersionFunc(IntPtr self, uint cchSpecVersion, out ushort wzSpecVersion, out uint pcchActual);
        GetSpecVersionFunc m_GetSpecVersionFunc;

        public virtual int GetFriendlyName(
            uint cchFriendlyName,
            out ushort wzFriendlyName,
            out uint pcchActual
        ){
            var fp = GetFunctionPointer(10);
            if(m_GetFriendlyNameFunc==null) m_GetFriendlyNameFunc = (GetFriendlyNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFriendlyNameFunc));
            
            return m_GetFriendlyNameFunc(m_ptr, cchFriendlyName, out wzFriendlyName, out pcchActual);
        }
        delegate int GetFriendlyNameFunc(IntPtr self, uint cchFriendlyName, out ushort wzFriendlyName, out uint pcchActual);
        GetFriendlyNameFunc m_GetFriendlyNameFunc;

    }
}
