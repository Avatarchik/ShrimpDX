// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public static partial class Constants {
        public const int WINCODEC_SDK_VERSION1 = unchecked((int)0x0236);
        public const int WINCODEC_SDK_VERSION2 = unchecked((int)0x0237);
        // unknown type: WINCODEC_SDK_VERSION WINCODEC_SDK_VERSION2
        // unknown type: CLSID_WICImagingFactory CLSID_WICImagingFactory2
        // unknown type: CLSID_WICPngDecoder CLSID_WICPngDecoder2
        public const int WIC_JPEG_MAX_COMPONENT_COUNT = ( 4 );
        public const int WIC_JPEG_MAX_TABLE_INDEX = ( 3 );
        public const int WIC_JPEG_SAMPLE_FACTORS_ONE = unchecked((int)0x11);
        public const int WIC_JPEG_SAMPLE_FACTORS_THREE_420 = unchecked((int)0x111122);
        public const int WIC_JPEG_SAMPLE_FACTORS_THREE_422 = unchecked((int)0x111121);
        public const int WIC_JPEG_SAMPLE_FACTORS_THREE_440 = unchecked((int)0x111112);
        public const int WIC_JPEG_SAMPLE_FACTORS_THREE_444 = unchecked((int)0x111111);
        public const int WIC_JPEG_QUANTIZATION_BASELINE_ONE = ( 0 );
        public const int WIC_JPEG_QUANTIZATION_BASELINE_THREE = unchecked((int)0x10100);
        public const int WIC_JPEG_HUFFMAN_BASELINE_ONE = ( 0 );
        public const int WIC_JPEG_HUFFMAN_BASELINE_THREE = unchecked((int)0x111100);
        // unknown type: GUID_WICPixelFormatUndefined GUID_WICPixelFormatDontCare
        public const int FACILITY_WINCODEC_ERR = unchecked((int)0x898);
        public const int WINCODEC_ERR_BASE = unchecked((int)0x2000);
        // macro function: MAKE_WINCODECHR ( sev , code ) MAKE_HRESULT ( sev , FACILITY_WINCODEC_ERR , ( WINCODEC_ERR_BASE + code ) )
        // macro function: MAKE_WINCODECHR_ERR ( code ) MAKE_WINCODECHR ( 1 , code )
        // unknown type: WINCODEC_ERR_GENERIC_ERROR E_FAIL
        // unknown type: WINCODEC_ERR_INVALIDPARAMETER E_INVALIDARG
        // unknown type: WINCODEC_ERR_OUTOFMEMORY E_OUTOFMEMORY
        // unknown type: WINCODEC_ERR_NOTIMPLEMENTED E_NOTIMPL
        // unknown type: WINCODEC_ERR_ABORTED E_ABORT
        // unknown type: WINCODEC_ERR_ACCESSDENIED E_ACCESSDENIED
        // unknown type: WINCODEC_ERR_VALUEOVERFLOW INTSAFE_E_ARITHMETIC_OVERFLOW
        public const int WICRawChangeNotification_ExposureCompensation = unchecked((int)0x00000001);
        public const int WICRawChangeNotification_NamedWhitePoint = unchecked((int)0x00000002);
        public const int WICRawChangeNotification_KelvinWhitePoint = unchecked((int)0x00000004);
        public const int WICRawChangeNotification_RGBWhitePoint = unchecked((int)0x00000008);
        public const int WICRawChangeNotification_Contrast = unchecked((int)0x00000010);
        public const int WICRawChangeNotification_Gamma = unchecked((int)0x00000020);
        public const int WICRawChangeNotification_Sharpness = unchecked((int)0x00000040);
        public const int WICRawChangeNotification_Saturation = unchecked((int)0x00000080);
        public const int WICRawChangeNotification_Tint = unchecked((int)0x00000100);
        public const int WICRawChangeNotification_NoiseReduction = unchecked((int)0x00000200);
        public const int WICRawChangeNotification_DestinationColorContext = unchecked((int)0x00000400);
        public const int WICRawChangeNotification_ToneCurve = unchecked((int)0x00000800);
        public const int WICRawChangeNotification_Rotation = unchecked((int)0x00001000);
        public const int WICRawChangeNotification_RenderMode = unchecked((int)0x00002000);
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICRect // 1
    {
        public int X;
        public int Y;
        public int Width;
        public int Height;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICBitmapPlane // 1
    {
        public Guid Format;
        public IntPtr pbBuffer;
        public uint cbStride;
        public uint cbBufferSize;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICImageParameters // 1
    {
        public D2D1_PIXEL_FORMAT PixelFormat;
        public float DpiX;
        public float DpiY;
        public float Top;
        public float Left;
        public uint PixelWidth;
        public uint PixelHeight;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICBitmapPattern // 1
    {
        public _ULARGE_INTEGER Position;
        public uint Length;
        public IntPtr Pattern;
        public IntPtr Mask;
        public int EndOfStream;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICBitmapPlaneDescription // 1
    {
        public Guid Format;
        public uint Width;
        public uint Height;
    }
    public delegate int PFNProgressNotification(IntPtr pvData, uint uFrameNum, WICProgressOperation operation, double dblProgress);
    [StructLayout(LayoutKind.Sequential)]
    public struct WICRawCapabilitiesInfo // 1
    {
        public uint cbSize;
        public uint CodecMajorVersion;
        public uint CodecMinorVersion;
        public WICRawCapabilities ExposureCompensationSupport;
        public WICRawCapabilities ContrastSupport;
        public WICRawCapabilities RGBWhitePointSupport;
        public WICRawCapabilities NamedWhitePointSupport;
        public uint NamedWhitePointSupportMask;
        public WICRawCapabilities KelvinWhitePointSupport;
        public WICRawCapabilities GammaSupport;
        public WICRawCapabilities TintSupport;
        public WICRawCapabilities SaturationSupport;
        public WICRawCapabilities SharpnessSupport;
        public WICRawCapabilities NoiseReductionSupport;
        public WICRawCapabilities DestinationColorProfileSupport;
        public WICRawCapabilities ToneCurveSupport;
        public WICRawRotationCapabilities RotationSupport;
        public WICRawCapabilities RenderModeSupport;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICRawToneCurve // 1
    {
        public uint cPoints;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=1)]public WICRawToneCurvePoint[] aPoints;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICRawToneCurvePoint // 1
    {
        public double Input;
        public double Output;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICDdsParameters // 1
    {
        public uint Width;
        public uint Height;
        public uint Depth;
        public uint MipLevels;
        public uint ArraySize;
        public DXGI_FORMAT DxgiFormat;
        public WICDdsDimension Dimension;
        public WICDdsAlphaMode AlphaMode;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICDdsFormatInfo // 1
    {
        public DXGI_FORMAT DxgiFormat;
        public uint BytesPerBlock;
        public uint BlockWidth;
        public uint BlockHeight;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICJpegFrameHeader // 1
    {
        public uint Width;
        public uint Height;
        public WICJpegTransferMatrix TransferMatrix;
        public WICJpegScanType ScanType;
        public uint cComponents;
        public uint ComponentIdentifiers;
        public uint SampleFactors;
        public uint QuantizationTableIndices;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct WICJpegScanHeader // 1
    {
        public uint cComponents;
        public uint RestartInterval;
        public uint ComponentSelectors;
        public uint HuffmanTableIndices;
        public byte StartSpectralSelection;
        public byte EndSpectralSelection;
        public byte SuccessiveApproximationHigh;
        public byte SuccessiveApproximationLow;
    }
    public static class wincodec {
        [DllImport("wincodec.dll")]
        public static extern int IWICBitmapCodecProgressNotification_Remote_RegisterProgressNotification_Proxy(
            IWICBitmapCodecProgressNotification This,
            IWICProgressCallback pICallback,
            uint dwProgressFlags
        );
        [DllImport("wincodec.dll")]
        public static extern void IWICBitmapCodecProgressNotification_Remote_RegisterProgressNotification_Stub(
            IRpcStubBuffer This,
            IRpcChannelBuffer _pRpcChannelBuffer,
            out _RPC_MESSAGE _pRpcMessage,
            out uint _pdwStubPhase
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICBitmapDecoderInfo_Remote_GetPatterns_Proxy(
            IWICBitmapDecoderInfo This,
            out IntPtr ppPatterns,
            out uint pcPatterns
        );
        [DllImport("wincodec.dll")]
        public static extern void IWICBitmapDecoderInfo_Remote_GetPatterns_Stub(
            IRpcStubBuffer This,
            IRpcChannelBuffer _pRpcChannelBuffer,
            out _RPC_MESSAGE _pRpcMessage,
            out uint _pdwStubPhase
        );
        [DllImport("wincodec.dll")]
        public static extern int WICConvertBitmapSource(
            ref Guid dstFormat,
            IWICBitmapSource pISrc,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<IWICBitmapSource>))]out IWICBitmapSource ppIDst
        );
        [DllImport("wincodec.dll")]
        public static extern int WICCreateBitmapFromSection(
            uint width,
            uint height,
            ref Guid pixelFormat,
            IntPtr hSection,
            uint stride,
            uint offset,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<IWICBitmap>))]out IWICBitmap ppIBitmap
        );
        [DllImport("wincodec.dll")]
        public static extern int WICCreateBitmapFromSectionEx(
            uint width,
            uint height,
            ref Guid pixelFormat,
            IntPtr hSection,
            uint stride,
            uint offset,
            WICSectionAccessLevel desiredAccessLevel,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<IWICBitmap>))]out IWICBitmap ppIBitmap
        );
        [DllImport("wincodec.dll")]
        public static extern int WICMapGuidToShortName(
            ref Guid guid,
            uint cchName,
            out ushort wzName,
            out uint pcchActual
        );
        [DllImport("wincodec.dll")]
        public static extern int WICMapShortNameToGuid(
            ref ushort wzName,
            out Guid pguid
        );
        [DllImport("wincodec.dll")]
        public static extern int WICMapSchemaToName(
            ref Guid guidMetadataFormat,
            out ushort pwzSchema,
            uint cchName,
            out ushort wzName,
            out uint pcchActual
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_Remote_QueryRawCapabilitiesInfo_Proxy(
            IWICDevelopRaw This,
            out WICRawCapabilitiesInfo pInfo
        );
        [DllImport("wincodec.dll")]
        public static extern void IWICDevelopRaw_Remote_QueryRawCapabilitiesInfo_Stub(
            IRpcStubBuffer This,
            IRpcChannelBuffer _pRpcChannelBuffer,
            out _RPC_MESSAGE _pRpcMessage,
            out uint _pdwStubPhase
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_Remote_SetToneCurve_Proxy(
            IWICDevelopRaw This,
            uint cPoints,
            ref WICRawToneCurvePoint aPoints
        );
        [DllImport("wincodec.dll")]
        public static extern void IWICDevelopRaw_Remote_SetToneCurve_Stub(
            IRpcStubBuffer This,
            IRpcChannelBuffer _pRpcChannelBuffer,
            out _RPC_MESSAGE _pRpcMessage,
            out uint _pdwStubPhase
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_Remote_GetToneCurve_Proxy(
            IWICDevelopRaw This,
            out uint pcPoints,
            out IntPtr paPoints
        );
        [DllImport("wincodec.dll")]
        public static extern void IWICDevelopRaw_Remote_GetToneCurve_Stub(
            IRpcStubBuffer This,
            IRpcChannelBuffer _pRpcChannelBuffer,
            out _RPC_MESSAGE _pRpcMessage,
            out uint _pdwStubPhase
        );
        [DllImport("wincodec.dll")]
        public static extern uint BSTR_UserSize(
            out uint __param__1,
            uint __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr BSTR_UserMarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr BSTR_UserUnmarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern void BSTR_UserFree(
            out uint __param__1,
            out IntPtr __param__2
        );
        [DllImport("wincodec.dll")]
        public static extern uint HBITMAP_UserSize(
            out uint __param__1,
            uint __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr HBITMAP_UserMarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr HBITMAP_UserUnmarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern void HBITMAP_UserFree(
            out uint __param__1,
            out IntPtr __param__2
        );
        [DllImport("wincodec.dll")]
        public static extern uint HICON_UserSize(
            out uint __param__1,
            uint __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr HICON_UserMarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr HICON_UserUnmarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern void HICON_UserFree(
            out uint __param__1,
            out IntPtr __param__2
        );
        [DllImport("wincodec.dll")]
        public static extern uint HPALETTE_UserSize(
            out uint __param__1,
            uint __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr HPALETTE_UserMarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr HPALETTE_UserUnmarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern void HPALETTE_UserFree(
            out uint __param__1,
            out IntPtr __param__2
        );
        [DllImport("wincodec.dll")]
        public static extern uint LPSAFEARRAY_UserSize(
            out uint __param__1,
            uint __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr LPSAFEARRAY_UserMarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr LPSAFEARRAY_UserUnmarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern void LPSAFEARRAY_UserFree(
            out uint __param__1,
            out IntPtr __param__2
        );
        [DllImport("wincodec.dll")]
        public static extern uint WICInProcPointer_UserSize(
            out uint __param__1,
            uint __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr WICInProcPointer_UserMarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern IntPtr WICInProcPointer_UserUnmarshal(
            out uint __param__1,
            out byte __param__2,
            out IntPtr __param__3
        );
        [DllImport("wincodec.dll")]
        public static extern void WICInProcPointer_UserFree(
            out uint __param__1,
            out IntPtr __param__2
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICBitmapCodecProgressNotification_RegisterProgressNotification_Proxy(
            IWICBitmapCodecProgressNotification This,
            PFNProgressNotification pfnProgressNotification,
            IntPtr pvData,
            uint dwProgressFlags
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICBitmapCodecProgressNotification_RegisterProgressNotification_Stub(
            IWICBitmapCodecProgressNotification This,
            IWICProgressCallback pICallback,
            uint dwProgressFlags
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICBitmapDecoderInfo_GetPatterns_Proxy(
            IWICBitmapDecoderInfo This,
            uint cbSizePatterns,
            out WICBitmapPattern pPatterns,
            out uint pcPatterns,
            out uint pcbPatternsActual
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICBitmapDecoderInfo_GetPatterns_Stub(
            IWICBitmapDecoderInfo This,
            out IntPtr ppPatterns,
            out uint pcPatterns
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_QueryRawCapabilitiesInfo_Proxy(
            IWICDevelopRaw This,
            out WICRawCapabilitiesInfo pInfo
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_QueryRawCapabilitiesInfo_Stub(
            IWICDevelopRaw This,
            out WICRawCapabilitiesInfo pInfo
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_SetToneCurve_Proxy(
            IWICDevelopRaw This,
            uint cbToneCurveSize,
            ref WICRawToneCurve pToneCurve
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_SetToneCurve_Stub(
            IWICDevelopRaw This,
            uint cPoints,
            ref WICRawToneCurvePoint aPoints
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_GetToneCurve_Proxy(
            IWICDevelopRaw This,
            uint cbToneCurveBufferSize,
            out WICRawToneCurve pToneCurve,
            out uint pcbActualToneCurveBufferSize
        );
        [DllImport("wincodec.dll")]
        public static extern int IWICDevelopRaw_GetToneCurve_Stub(
            IWICDevelopRaw This,
            out uint pcPoints,
            out IntPtr paPoints
        );
    }
}
