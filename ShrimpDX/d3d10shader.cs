// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public static partial class Constants {
        // macro function: D3D10_TX_VERSION ( _Major , _Minor ) ( ( 'T' << 24 ) | ( 'X' << 16 ) | ( ( _Major ) << 8 ) | ( _Minor ) )
        public const int D3D10_SHADER_DEBUG = ( 1 << 0 );
        public const int D3D10_SHADER_SKIP_VALIDATION = ( 1 << 1 );
        public const int D3D10_SHADER_SKIP_OPTIMIZATION = ( 1 << 2 );
        public const int D3D10_SHADER_PACK_MATRIX_ROW_MAJOR = ( 1 << 3 );
        public const int D3D10_SHADER_PACK_MATRIX_COLUMN_MAJOR = ( 1 << 4 );
        public const int D3D10_SHADER_PARTIAL_PRECISION = ( 1 << 5 );
        public const int D3D10_SHADER_FORCE_VS_SOFTWARE_NO_OPT = ( 1 << 6 );
        public const int D3D10_SHADER_FORCE_PS_SOFTWARE_NO_OPT = ( 1 << 7 );
        public const int D3D10_SHADER_NO_PRESHADER = ( 1 << 8 );
        public const int D3D10_SHADER_AVOID_FLOW_CONTROL = ( 1 << 9 );
        public const int D3D10_SHADER_PREFER_FLOW_CONTROL = ( 1 << 10 );
        public const int D3D10_SHADER_ENABLE_STRICTNESS = ( 1 << 11 );
        public const int D3D10_SHADER_ENABLE_BACKWARDS_COMPATIBILITY = ( 1 << 12 );
        public const int D3D10_SHADER_IEEE_STRICTNESS = ( 1 << 13 );
        public const int D3D10_SHADER_WARNINGS_ARE_ERRORS = ( 1 << 18 );
        public const int D3D10_SHADER_RESOURCES_MAY_ALIAS = ( 1 << 19 );
        public const int D3D10_ENABLE_UNBOUNDED_DESCRIPTOR_TABLES = ( 1 << 20 );
        public const int D3D10_ALL_RESOURCES_BOUND = ( 1 << 21 );
        public const int D3D10_SHADER_DEBUG_NAME_FOR_SOURCE = ( 1 << 22 );
        public const int D3D10_SHADER_DEBUG_NAME_FOR_BINARY = ( 1 << 23 );
        public const int D3D10_SHADER_OPTIMIZATION_LEVEL0 = ( 1 << 14 );
        public const int D3D10_SHADER_OPTIMIZATION_LEVEL1 = 0;
        public const int D3D10_SHADER_OPTIMIZATION_LEVEL2 = ( ( 1 << 14 ) | ( 1 << 15 ) );
        public const int D3D10_SHADER_OPTIMIZATION_LEVEL3 = ( 1 << 15 );
        public const int D3D10_SHADER_FLAGS2_FORCE_ROOT_SIGNATURE_LATEST = 0;
        public const int D3D10_SHADER_FLAGS2_FORCE_ROOT_SIGNATURE_1_0 = ( 1 << 4 );
        public const int D3D10_SHADER_FLAGS2_FORCE_ROOT_SIGNATURE_1_1 = ( 1 << 5 );
        // unknown type: IID_ID3D10Include IID_ID3DInclude
        // unknown type: INTERFACE ID3D10ShaderReflectionType
// duplicate: INTERFACE = INTERFACE ID3D10ShaderReflectionVariable
// duplicate: INTERFACE = INTERFACE ID3D10ShaderReflectionConstantBuffer
// duplicate: INTERFACE = INTERFACE ID3D10ShaderReflection
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_SIGNATURE_PARAMETER_DESC // 1
    {
        [MarshalAs(UnmanagedType.LPStr)]public string SemanticName;
        public uint SemanticIndex;
        public uint Register;
        public D3D_NAME SystemValueType;
        public D3D_REGISTER_COMPONENT_TYPE ComponentType;
        public byte Mask;
        public byte ReadWriteMask;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_SHADER_DESC // 1
    {
        public uint Version;
        [MarshalAs(UnmanagedType.LPStr)]public string Creator;
        public uint Flags;
        public uint ConstantBuffers;
        public uint BoundResources;
        public uint InputParameters;
        public uint OutputParameters;
        public uint InstructionCount;
        public uint TempRegisterCount;
        public uint TempArrayCount;
        public uint DefCount;
        public uint DclCount;
        public uint TextureNormalInstructions;
        public uint TextureLoadInstructions;
        public uint TextureCompInstructions;
        public uint TextureBiasInstructions;
        public uint TextureGradientInstructions;
        public uint FloatInstructionCount;
        public uint IntInstructionCount;
        public uint UintInstructionCount;
        public uint StaticFlowControlCount;
        public uint DynamicFlowControlCount;
        public uint MacroInstructionCount;
        public uint ArrayInstructionCount;
        public uint CutInstructionCount;
        public uint EmitInstructionCount;
        public D3D_PRIMITIVE_TOPOLOGY GSOutputTopology;
        public uint GSMaxOutputVertexCount;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_SHADER_BUFFER_DESC // 1
    {
        [MarshalAs(UnmanagedType.LPStr)]public string Name;
        public _D3D_CBUFFER_TYPE Type;
        public uint Variables;
        public uint Size;
        public uint uFlags;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_SHADER_VARIABLE_DESC // 1
    {
        [MarshalAs(UnmanagedType.LPStr)]public string Name;
        public uint StartOffset;
        public uint Size;
        public uint uFlags;
        public IntPtr DefaultValue;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_SHADER_TYPE_DESC // 1
    {
        public _D3D_SHADER_VARIABLE_CLASS Class;
        public _D3D_SHADER_VARIABLE_TYPE Type;
        public uint Rows;
        public uint Columns;
        public uint Elements;
        public uint Members;
        public uint Offset;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_SHADER_INPUT_BIND_DESC // 1
    {
        [MarshalAs(UnmanagedType.LPStr)]public string Name;
        public _D3D_SHADER_INPUT_TYPE Type;
        public uint BindPoint;
        public uint BindCount;
        public uint uFlags;
        public D3D_RESOURCE_RETURN_TYPE ReturnType;
        public D3D_SRV_DIMENSION Dimension;
        public uint NumSamples;
    }
    public class ID3D10ShaderReflectionType: ComPtr
    {
        static Guid s_uuid = new Guid("c530ad7d-9b16-4395-a979-ba2ecff83add");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetDesc(
            out _D3D10_SHADER_TYPE_DESC pDesc
        ){
            var fp = GetFunctionPointer(0);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_SHADER_TYPE_DESC pDesc);

        public virtual ID3D10ShaderReflectionType GetMemberTypeByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(1);
            var callback = (GetMemberTypeByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10ShaderReflectionType GetMemberTypeByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10ShaderReflectionType GetMemberTypeByName(
            string Name
        ){
            var fp = GetFunctionPointer(2);
            var callback = (GetMemberTypeByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10ShaderReflectionType GetMemberTypeByNameFunc(IntPtr self, string Name);

        public virtual string GetMemberTypeName(
            uint Index
        ){
            var fp = GetFunctionPointer(3);
            var callback = (GetMemberTypeNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeNameFunc));
            
            return callback(m_ptr, Index);
        }
        delegate string GetMemberTypeNameFunc(IntPtr self, uint Index);

    }
    public class ID3D10ShaderReflectionVariable: ComPtr
    {
        static Guid s_uuid = new Guid("1bf63c95-2650-405d-99c1-3636bd1da0a1");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetDesc(
            out _D3D10_SHADER_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(0);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_SHADER_VARIABLE_DESC pDesc);

        public virtual ID3D10ShaderReflectionType GetComType(
        ){
            var fp = GetFunctionPointer(1);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10ShaderReflectionType GetTypeFunc(IntPtr self);

    }
    public class ID3D10ShaderReflectionConstantBuffer: ComPtr
    {
        static Guid s_uuid = new Guid("66c66a94-dddd-4b62-a66a-f0da33c2b4d0");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetDesc(
            out _D3D10_SHADER_BUFFER_DESC pDesc
        ){
            var fp = GetFunctionPointer(0);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_SHADER_BUFFER_DESC pDesc);

        public virtual ID3D10ShaderReflectionVariable GetVariableByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(1);
            var callback = (GetVariableByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVariableByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10ShaderReflectionVariable GetVariableByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10ShaderReflectionVariable GetVariableByName(
            string Name
        ){
            var fp = GetFunctionPointer(2);
            var callback = (GetVariableByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVariableByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10ShaderReflectionVariable GetVariableByNameFunc(IntPtr self, string Name);

    }
    public class ID3D10ShaderReflection: IUnknown
    {
        static Guid s_uuid = new Guid("d40e20b6-f8f7-42ad-ab20-4baf8f15dfaa");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetDesc(
            out _D3D10_SHADER_DESC pDesc
        ){
            var fp = GetFunctionPointer(3);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_SHADER_DESC pDesc);

        public virtual ID3D10ShaderReflectionConstantBuffer GetConstantBufferByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(4);
            var callback = (GetConstantBufferByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetConstantBufferByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10ShaderReflectionConstantBuffer GetConstantBufferByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10ShaderReflectionConstantBuffer GetConstantBufferByName(
            string Name
        ){
            var fp = GetFunctionPointer(5);
            var callback = (GetConstantBufferByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetConstantBufferByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10ShaderReflectionConstantBuffer GetConstantBufferByNameFunc(IntPtr self, string Name);

        public virtual int GetResourceBindingDesc(
            uint ResourceIndex,
            out _D3D10_SHADER_INPUT_BIND_DESC pDesc
        ){
            var fp = GetFunctionPointer(6);
            var callback = (GetResourceBindingDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetResourceBindingDescFunc));
            
            return callback(m_ptr, ResourceIndex, out pDesc);
        }
        delegate int GetResourceBindingDescFunc(IntPtr self, uint ResourceIndex, out _D3D10_SHADER_INPUT_BIND_DESC pDesc);

        public virtual int GetInputParameterDesc(
            uint ParameterIndex,
            out _D3D10_SIGNATURE_PARAMETER_DESC pDesc
        ){
            var fp = GetFunctionPointer(7);
            var callback = (GetInputParameterDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetInputParameterDescFunc));
            
            return callback(m_ptr, ParameterIndex, out pDesc);
        }
        delegate int GetInputParameterDescFunc(IntPtr self, uint ParameterIndex, out _D3D10_SIGNATURE_PARAMETER_DESC pDesc);

        public virtual int GetOutputParameterDesc(
            uint ParameterIndex,
            out _D3D10_SIGNATURE_PARAMETER_DESC pDesc
        ){
            var fp = GetFunctionPointer(8);
            var callback = (GetOutputParameterDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetOutputParameterDescFunc));
            
            return callback(m_ptr, ParameterIndex, out pDesc);
        }
        delegate int GetOutputParameterDescFunc(IntPtr self, uint ParameterIndex, out _D3D10_SIGNATURE_PARAMETER_DESC pDesc);

    }
    public static class d3d10shader {
        [DllImport("d3d10shader.dll")]
        public static extern int D3D10CompileShader(
            [MarshalAs(UnmanagedType.LPStr)]string pSrcData,
            ulong SrcDataSize,
            [MarshalAs(UnmanagedType.LPStr)]string pFileName,
            ref _D3D_SHADER_MACRO pDefines,
            IntPtr pInclude,
            [MarshalAs(UnmanagedType.LPStr)]string pFunctionName,
            [MarshalAs(UnmanagedType.LPStr)]string pProfile,
            uint Flags,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppShader,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppErrorMsgs
        );
        [DllImport("d3d10shader.dll")]
        public static extern int D3D10DisassembleShader(
            IntPtr pShader,
            ulong BytecodeLength,
            int EnableColorCode,
            [MarshalAs(UnmanagedType.LPStr)]string pComments,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppDisassembly
        );
        [DllImport("d3d10shader.dll")]
        public static extern string D3D10GetPixelShaderProfile(
            ID3D10Device pDevice
        );
        [DllImport("d3d10shader.dll")]
        public static extern string D3D10GetVertexShaderProfile(
            ID3D10Device pDevice
        );
        [DllImport("d3d10shader.dll")]
        public static extern string D3D10GetGeometryShaderProfile(
            ID3D10Device pDevice
        );
        [DllImport("d3d10shader.dll")]
        public static extern int D3D10ReflectShader(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10ShaderReflection>))]out ID3D10ShaderReflection ppReflector
        );
        [DllImport("d3d10shader.dll")]
        public static extern int D3D10PreprocessShader(
            [MarshalAs(UnmanagedType.LPStr)]string pSrcData,
            ulong SrcDataSize,
            [MarshalAs(UnmanagedType.LPStr)]string pFileName,
            ref _D3D_SHADER_MACRO pDefines,
            IntPtr pInclude,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppShaderText,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppErrorMsgs
        );
        [DllImport("d3d10shader.dll")]
        public static extern int D3D10GetInputSignatureBlob(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppSignatureBlob
        );
        [DllImport("d3d10shader.dll")]
        public static extern int D3D10GetOutputSignatureBlob(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppSignatureBlob
        );
        [DllImport("d3d10shader.dll")]
        public static extern int D3D10GetInputAndOutputSignatureBlob(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppSignatureBlob
        );
        [DllImport("d3d10shader.dll")]
        public static extern int D3D10GetShaderDebugInfo(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CustomMarshaler<ID3D10Blob>))]out ID3D10Blob ppDebugInfo
        );
    }
}
