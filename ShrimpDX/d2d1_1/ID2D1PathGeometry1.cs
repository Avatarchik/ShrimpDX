// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID2D1PathGeometry1: ID2D1PathGeometry
    {
        static Guid s_uuid = new Guid("62baa2d2-ab54-41b7-b872-787e0106a421");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int ComputePointAndSegmentAtLength(
            float length,
            uint startSegment,
            ref System.Numerics.Matrix3x2 worldTransform,
            float flatteningTolerance,
            out D2D1_POINT_DESCRIPTION pointDescription
        ){
            var fp = GetFunctionPointer(21);
            if(m_ComputePointAndSegmentAtLengthFunc==null) m_ComputePointAndSegmentAtLengthFunc = (ComputePointAndSegmentAtLengthFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ComputePointAndSegmentAtLengthFunc));
            
            return m_ComputePointAndSegmentAtLengthFunc(m_ptr, length, startSegment, ref worldTransform, flatteningTolerance, out pointDescription);
        }
        delegate int ComputePointAndSegmentAtLengthFunc(IntPtr self, float length, uint startSegment, ref System.Numerics.Matrix3x2 worldTransform, float flatteningTolerance, out D2D1_POINT_DESCRIPTION pointDescription);
        ComputePointAndSegmentAtLengthFunc m_ComputePointAndSegmentAtLengthFunc;

    }
}
