// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID2D1Properties: IUnknown
    {
        static Guid s_uuid = new Guid("483473d7-cd46-4f9d-9d3a-3112aa80159d");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual uint GetPropertyCount(
        ){
            var fp = GetFunctionPointer(3);
            if(m_GetPropertyCountFunc==null) m_GetPropertyCountFunc = (GetPropertyCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPropertyCountFunc));
            
            return m_GetPropertyCountFunc(m_ptr);
        }
        delegate uint GetPropertyCountFunc(IntPtr self);
        GetPropertyCountFunc m_GetPropertyCountFunc;

        public virtual int GetPropertyName(
            uint index,
            out ushort name,
            uint nameCount
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetPropertyNameFunc==null) m_GetPropertyNameFunc = (GetPropertyNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPropertyNameFunc));
            
            return m_GetPropertyNameFunc(m_ptr, index, out name, nameCount);
        }
        delegate int GetPropertyNameFunc(IntPtr self, uint index, out ushort name, uint nameCount);
        GetPropertyNameFunc m_GetPropertyNameFunc;

        public virtual uint GetPropertyNameLength(
            uint index
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetPropertyNameLengthFunc==null) m_GetPropertyNameLengthFunc = (GetPropertyNameLengthFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPropertyNameLengthFunc));
            
            return m_GetPropertyNameLengthFunc(m_ptr, index);
        }
        delegate uint GetPropertyNameLengthFunc(IntPtr self, uint index);
        GetPropertyNameLengthFunc m_GetPropertyNameLengthFunc;

        public virtual D2D1_PROPERTY_TYPE GetComType(
            uint index
        ){
            var fp = GetFunctionPointer(6);
            if(m_GetTypeFunc==null) m_GetTypeFunc = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return m_GetTypeFunc(m_ptr, index);
        }
        delegate D2D1_PROPERTY_TYPE GetTypeFunc(IntPtr self, uint index);
        GetTypeFunc m_GetTypeFunc;

        public virtual uint GetPropertyIndex(
            ref ushort name
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetPropertyIndexFunc==null) m_GetPropertyIndexFunc = (GetPropertyIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPropertyIndexFunc));
            
            return m_GetPropertyIndexFunc(m_ptr, ref name);
        }
        delegate uint GetPropertyIndexFunc(IntPtr self, ref ushort name);
        GetPropertyIndexFunc m_GetPropertyIndexFunc;

        public virtual int SetValueByName(
            ref ushort name,
            D2D1_PROPERTY_TYPE type,
            ref byte data,
            uint dataSize
        ){
            var fp = GetFunctionPointer(8);
            if(m_SetValueByNameFunc==null) m_SetValueByNameFunc = (SetValueByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetValueByNameFunc));
            
            return m_SetValueByNameFunc(m_ptr, ref name, type, ref data, dataSize);
        }
        delegate int SetValueByNameFunc(IntPtr self, ref ushort name, D2D1_PROPERTY_TYPE type, ref byte data, uint dataSize);
        SetValueByNameFunc m_SetValueByNameFunc;

        public virtual int SetValue(
            uint index,
            D2D1_PROPERTY_TYPE type,
            ref byte data,
            uint dataSize
        ){
            var fp = GetFunctionPointer(9);
            if(m_SetValueFunc==null) m_SetValueFunc = (SetValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetValueFunc));
            
            return m_SetValueFunc(m_ptr, index, type, ref data, dataSize);
        }
        delegate int SetValueFunc(IntPtr self, uint index, D2D1_PROPERTY_TYPE type, ref byte data, uint dataSize);
        SetValueFunc m_SetValueFunc;

        public virtual int GetValueByName(
            ref ushort name,
            D2D1_PROPERTY_TYPE type,
            out byte data,
            uint dataSize
        ){
            var fp = GetFunctionPointer(10);
            if(m_GetValueByNameFunc==null) m_GetValueByNameFunc = (GetValueByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetValueByNameFunc));
            
            return m_GetValueByNameFunc(m_ptr, ref name, type, out data, dataSize);
        }
        delegate int GetValueByNameFunc(IntPtr self, ref ushort name, D2D1_PROPERTY_TYPE type, out byte data, uint dataSize);
        GetValueByNameFunc m_GetValueByNameFunc;

        public virtual int GetValue(
            uint index,
            D2D1_PROPERTY_TYPE type,
            out byte data,
            uint dataSize
        ){
            var fp = GetFunctionPointer(11);
            if(m_GetValueFunc==null) m_GetValueFunc = (GetValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetValueFunc));
            
            return m_GetValueFunc(m_ptr, index, type, out data, dataSize);
        }
        delegate int GetValueFunc(IntPtr self, uint index, D2D1_PROPERTY_TYPE type, out byte data, uint dataSize);
        GetValueFunc m_GetValueFunc;

        public virtual uint GetValueSize(
            uint index
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetValueSizeFunc==null) m_GetValueSizeFunc = (GetValueSizeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetValueSizeFunc));
            
            return m_GetValueSizeFunc(m_ptr, index);
        }
        delegate uint GetValueSizeFunc(IntPtr self, uint index);
        GetValueSizeFunc m_GetValueSizeFunc;

        public virtual int GetSubProperties(
            uint index,
            out ID2D1Properties subProperties
        ){
            var fp = GetFunctionPointer(13);
            if(m_GetSubPropertiesFunc==null) m_GetSubPropertiesFunc = (GetSubPropertiesFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSubPropertiesFunc));
            subProperties = new ID2D1Properties();
            return m_GetSubPropertiesFunc(m_ptr, index, out subProperties.PtrForNew);
        }
        delegate int GetSubPropertiesFunc(IntPtr self, uint index, out IntPtr subProperties);
        GetSubPropertiesFunc m_GetSubPropertiesFunc;

    }
}
