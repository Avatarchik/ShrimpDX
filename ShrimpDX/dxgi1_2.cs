// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public static partial class Constants {
        public const int DXGI_SHARED_RESOURCE_READ = unchecked((int)0x80000000L);
        public const int DXGI_SHARED_RESOURCE_WRITE = ( 1 );
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_OUTDUPL_DESC // 1
    {
        public DXGI_MODE_DESC ModeDesc;
        public DXGI_MODE_ROTATION Rotation;
        public int DesktopImageInSystemMemory;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_OUTDUPL_FRAME_INFO // 1
    {
        public _LARGE_INTEGER LastPresentTime;
        public _LARGE_INTEGER LastMouseUpdateTime;
        public uint AccumulatedFrames;
        public int RectsCoalesced;
        public int ProtectedContentMaskedOut;
        public DXGI_OUTDUPL_POINTER_POSITION PointerPosition;
        public uint TotalMetadataBufferSize;
        public uint PointerShapeBufferSize;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_OUTDUPL_POINTER_POSITION // 1
    {
        public tagPOINT Position;
        public int Visible;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_OUTDUPL_MOVE_RECT // 1
    {
        public tagPOINT SourcePoint;
        public tagRECT DestinationRect;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_OUTDUPL_POINTER_SHAPE_INFO // 1
    {
        public uint Type;
        public uint Width;
        public uint Height;
        public uint Pitch;
        public tagPOINT HotSpot;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_SWAP_CHAIN_DESC1 // 1
    {
        public uint Width;
        public uint Height;
        public DXGI_FORMAT Format;
        public int Stereo;
        public DXGI_SAMPLE_DESC SampleDesc;
        public uint BufferUsage;
        public uint BufferCount;
        public DXGI_SCALING Scaling;
        public DXGI_SWAP_EFFECT SwapEffect;
        public DXGI_ALPHA_MODE AlphaMode;
        public uint Flags;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_SWAP_CHAIN_FULLSCREEN_DESC // 1
    {
        public DXGI_RATIONAL RefreshRate;
        public DXGI_MODE_SCANLINE_ORDER ScanlineOrdering;
        public DXGI_MODE_SCALING Scaling;
        public int Windowed;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_PRESENT_PARAMETERS // 1
    {
        public uint DirtyRectsCount;
        public IntPtr pDirtyRects;
        public IntPtr pScrollRect;
        public IntPtr pScrollOffset;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_ADAPTER_DESC2 // 1
    {
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=128)]public ushort[] Description;
        public uint VendorId;
        public uint DeviceId;
        public uint SubSysId;
        public uint Revision;
        public ulong DedicatedVideoMemory;
        public ulong DedicatedSystemMemory;
        public ulong SharedSystemMemory;
        public _LUID AdapterLuid;
        public uint Flags;
        public DXGI_GRAPHICS_PREEMPTION_GRANULARITY GraphicsPreemptionGranularity;
        public DXGI_COMPUTE_PREEMPTION_GRANULARITY ComputePreemptionGranularity;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_MODE_DESC1 // 1
    {
        public uint Width;
        public uint Height;
        public DXGI_RATIONAL RefreshRate;
        public DXGI_FORMAT Format;
        public DXGI_MODE_SCANLINE_ORDER ScanlineOrdering;
        public DXGI_MODE_SCALING Scaling;
        public int Stereo;
    }
}
