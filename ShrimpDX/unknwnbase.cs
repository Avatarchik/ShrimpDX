// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IUnknown: ComPtr
    {
        static Guid s_uuid = new Guid("00000000-0000-0000-c000-000000000046");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int QueryInterface(
            ref Guid riid,
            out IntPtr ppvObject
        ){
            var fp = GetFunctionPointer(0);
            var callback = (QueryInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryInterfaceFunc));
            
            return callback(m_ptr, ref riid, out ppvObject);
        }
        delegate int QueryInterfaceFunc(IntPtr self, ref Guid riid, out IntPtr ppvObject);

        public virtual uint AddRef(
        ){
            var fp = GetFunctionPointer(1);
            var callback = (AddRefFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AddRefFunc));
            
            return callback(m_ptr);
        }
        delegate uint AddRefFunc(IntPtr self);

        public virtual uint Release(
        ){
            var fp = GetFunctionPointer(2);
            var callback = (ReleaseFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ReleaseFunc));
            
            return callback(m_ptr);
        }
        delegate uint ReleaseFunc(IntPtr self);

    }
}
