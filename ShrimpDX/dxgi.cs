// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public static partial class Constants {
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_OUTPUT_DESC // 1
    {
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=32)]public ushort[] DeviceName;
        public tagRECT DesktopCoordinates;
        public int AttachedToDesktop;
        public DXGI_MODE_ROTATION Rotation;
        public IntPtr Monitor;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_SURFACE_DESC // 1
    {
        public uint Width;
        public uint Height;
        public DXGI_FORMAT Format;
        public DXGI_SAMPLE_DESC SampleDesc;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_MAPPED_RECT // 1
    {
        public int Pitch;
        public IntPtr pBits;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_FRAME_STATISTICS // 1
    {
        public uint PresentCount;
        public uint PresentRefreshCount;
        public uint SyncRefreshCount;
        public _LARGE_INTEGER SyncQPCTime;
        public _LARGE_INTEGER SyncGPUTime;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_ADAPTER_DESC // 1
    {
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=128)]public ushort[] Description;
        public uint VendorId;
        public uint DeviceId;
        public uint SubSysId;
        public uint Revision;
        public ulong DedicatedVideoMemory;
        public ulong DedicatedSystemMemory;
        public ulong SharedSystemMemory;
        public _LUID AdapterLuid;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_SWAP_CHAIN_DESC // 1
    {
        public DXGI_MODE_DESC BufferDesc;
        public DXGI_SAMPLE_DESC SampleDesc;
        public uint BufferUsage;
        public uint BufferCount;
        public IntPtr OutputWindow;
        public int Windowed;
        public DXGI_SWAP_EFFECT SwapEffect;
        public uint Flags;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_SHARED_RESOURCE // 1
    {
        public IntPtr Handle;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_ADAPTER_DESC1 // 1
    {
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=128)]public ushort[] Description;
        public uint VendorId;
        public uint DeviceId;
        public uint SubSysId;
        public uint Revision;
        public ulong DedicatedVideoMemory;
        public ulong DedicatedSystemMemory;
        public ulong SharedSystemMemory;
        public _LUID AdapterLuid;
        public uint Flags;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct DXGI_DISPLAY_COLOR_SPACE // 1
    {
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=8)]public float[][] PrimaryCoordinates;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]public float[][] WhitePoints;
    }
    public static class dxgi {
        [DllImport("dxgi.dll")]
        public static extern int CreateDXGIFactory(
            ref Guid riid,
            out IntPtr ppFactory
        );
        [DllImport("dxgi.dll")]
        public static extern int CreateDXGIFactory1(
            ref Guid riid,
            out IntPtr ppFactory
        );
    }
}
