// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDXGIFactory2: IDXGIFactory1
    {
        static Guid s_uuid = new Guid("50c83a1c-e072-4c48-87b0-3630fa36a6d0");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int IsWindowedStereoEnabled(
        ){
            var fp = GetFunctionPointer(14);
            if(m_IsWindowedStereoEnabledFunc==null) m_IsWindowedStereoEnabledFunc = (IsWindowedStereoEnabledFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsWindowedStereoEnabledFunc));
            
            return m_IsWindowedStereoEnabledFunc(m_ptr);
        }
        delegate int IsWindowedStereoEnabledFunc(IntPtr self);
        IsWindowedStereoEnabledFunc m_IsWindowedStereoEnabledFunc;

        public virtual int CreateSwapChainForHwnd(
            IUnknown pDevice,
            IntPtr hWnd,
            ref DXGI_SWAP_CHAIN_DESC1 pDesc,
            ref DXGI_SWAP_CHAIN_FULLSCREEN_DESC pFullscreenDesc,
            IDXGIOutput pRestrictToOutput,
            out IDXGISwapChain1 ppSwapChain
        ){
            var fp = GetFunctionPointer(15);
            if(m_CreateSwapChainForHwndFunc==null) m_CreateSwapChainForHwndFunc = (CreateSwapChainForHwndFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateSwapChainForHwndFunc));
            ppSwapChain = new IDXGISwapChain1();
            return m_CreateSwapChainForHwndFunc(m_ptr, pDevice!=null ? pDevice.Ptr : IntPtr.Zero, hWnd, ref pDesc, ref pFullscreenDesc, pRestrictToOutput!=null ? pRestrictToOutput.Ptr : IntPtr.Zero, out ppSwapChain.PtrForNew);
        }
        delegate int CreateSwapChainForHwndFunc(IntPtr self, IntPtr pDevice, IntPtr hWnd, ref DXGI_SWAP_CHAIN_DESC1 pDesc, ref DXGI_SWAP_CHAIN_FULLSCREEN_DESC pFullscreenDesc, IntPtr pRestrictToOutput, out IntPtr ppSwapChain);
        CreateSwapChainForHwndFunc m_CreateSwapChainForHwndFunc;

        public virtual int CreateSwapChainForCoreWindow(
            IUnknown pDevice,
            IUnknown pWindow,
            ref DXGI_SWAP_CHAIN_DESC1 pDesc,
            IDXGIOutput pRestrictToOutput,
            out IDXGISwapChain1 ppSwapChain
        ){
            var fp = GetFunctionPointer(16);
            if(m_CreateSwapChainForCoreWindowFunc==null) m_CreateSwapChainForCoreWindowFunc = (CreateSwapChainForCoreWindowFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateSwapChainForCoreWindowFunc));
            ppSwapChain = new IDXGISwapChain1();
            return m_CreateSwapChainForCoreWindowFunc(m_ptr, pDevice!=null ? pDevice.Ptr : IntPtr.Zero, pWindow!=null ? pWindow.Ptr : IntPtr.Zero, ref pDesc, pRestrictToOutput!=null ? pRestrictToOutput.Ptr : IntPtr.Zero, out ppSwapChain.PtrForNew);
        }
        delegate int CreateSwapChainForCoreWindowFunc(IntPtr self, IntPtr pDevice, IntPtr pWindow, ref DXGI_SWAP_CHAIN_DESC1 pDesc, IntPtr pRestrictToOutput, out IntPtr ppSwapChain);
        CreateSwapChainForCoreWindowFunc m_CreateSwapChainForCoreWindowFunc;

        public virtual int GetSharedResourceAdapterLuid(
            IntPtr hResource,
            out _LUID pLuid
        ){
            var fp = GetFunctionPointer(17);
            if(m_GetSharedResourceAdapterLuidFunc==null) m_GetSharedResourceAdapterLuidFunc = (GetSharedResourceAdapterLuidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSharedResourceAdapterLuidFunc));
            
            return m_GetSharedResourceAdapterLuidFunc(m_ptr, hResource, out pLuid);
        }
        delegate int GetSharedResourceAdapterLuidFunc(IntPtr self, IntPtr hResource, out _LUID pLuid);
        GetSharedResourceAdapterLuidFunc m_GetSharedResourceAdapterLuidFunc;

        public virtual int RegisterStereoStatusWindow(
            IntPtr WindowHandle,
            uint wMsg,
            out uint pdwCookie
        ){
            var fp = GetFunctionPointer(18);
            if(m_RegisterStereoStatusWindowFunc==null) m_RegisterStereoStatusWindowFunc = (RegisterStereoStatusWindowFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RegisterStereoStatusWindowFunc));
            
            return m_RegisterStereoStatusWindowFunc(m_ptr, WindowHandle, wMsg, out pdwCookie);
        }
        delegate int RegisterStereoStatusWindowFunc(IntPtr self, IntPtr WindowHandle, uint wMsg, out uint pdwCookie);
        RegisterStereoStatusWindowFunc m_RegisterStereoStatusWindowFunc;

        public virtual int RegisterStereoStatusEvent(
            IntPtr hEvent,
            out uint pdwCookie
        ){
            var fp = GetFunctionPointer(19);
            if(m_RegisterStereoStatusEventFunc==null) m_RegisterStereoStatusEventFunc = (RegisterStereoStatusEventFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RegisterStereoStatusEventFunc));
            
            return m_RegisterStereoStatusEventFunc(m_ptr, hEvent, out pdwCookie);
        }
        delegate int RegisterStereoStatusEventFunc(IntPtr self, IntPtr hEvent, out uint pdwCookie);
        RegisterStereoStatusEventFunc m_RegisterStereoStatusEventFunc;

        public virtual void UnregisterStereoStatus(
            uint dwCookie
        ){
            var fp = GetFunctionPointer(20);
            if(m_UnregisterStereoStatusFunc==null) m_UnregisterStereoStatusFunc = (UnregisterStereoStatusFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnregisterStereoStatusFunc));
            
            m_UnregisterStereoStatusFunc(m_ptr, dwCookie);
        }
        delegate void UnregisterStereoStatusFunc(IntPtr self, uint dwCookie);
        UnregisterStereoStatusFunc m_UnregisterStereoStatusFunc;

        public virtual int RegisterOcclusionStatusWindow(
            IntPtr WindowHandle,
            uint wMsg,
            out uint pdwCookie
        ){
            var fp = GetFunctionPointer(21);
            if(m_RegisterOcclusionStatusWindowFunc==null) m_RegisterOcclusionStatusWindowFunc = (RegisterOcclusionStatusWindowFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RegisterOcclusionStatusWindowFunc));
            
            return m_RegisterOcclusionStatusWindowFunc(m_ptr, WindowHandle, wMsg, out pdwCookie);
        }
        delegate int RegisterOcclusionStatusWindowFunc(IntPtr self, IntPtr WindowHandle, uint wMsg, out uint pdwCookie);
        RegisterOcclusionStatusWindowFunc m_RegisterOcclusionStatusWindowFunc;

        public virtual int RegisterOcclusionStatusEvent(
            IntPtr hEvent,
            out uint pdwCookie
        ){
            var fp = GetFunctionPointer(22);
            if(m_RegisterOcclusionStatusEventFunc==null) m_RegisterOcclusionStatusEventFunc = (RegisterOcclusionStatusEventFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RegisterOcclusionStatusEventFunc));
            
            return m_RegisterOcclusionStatusEventFunc(m_ptr, hEvent, out pdwCookie);
        }
        delegate int RegisterOcclusionStatusEventFunc(IntPtr self, IntPtr hEvent, out uint pdwCookie);
        RegisterOcclusionStatusEventFunc m_RegisterOcclusionStatusEventFunc;

        public virtual void UnregisterOcclusionStatus(
            uint dwCookie
        ){
            var fp = GetFunctionPointer(23);
            if(m_UnregisterOcclusionStatusFunc==null) m_UnregisterOcclusionStatusFunc = (UnregisterOcclusionStatusFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnregisterOcclusionStatusFunc));
            
            m_UnregisterOcclusionStatusFunc(m_ptr, dwCookie);
        }
        delegate void UnregisterOcclusionStatusFunc(IntPtr self, uint dwCookie);
        UnregisterOcclusionStatusFunc m_UnregisterOcclusionStatusFunc;

        public virtual int CreateSwapChainForComposition(
            IUnknown pDevice,
            ref DXGI_SWAP_CHAIN_DESC1 pDesc,
            IDXGIOutput pRestrictToOutput,
            out IDXGISwapChain1 ppSwapChain
        ){
            var fp = GetFunctionPointer(24);
            if(m_CreateSwapChainForCompositionFunc==null) m_CreateSwapChainForCompositionFunc = (CreateSwapChainForCompositionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateSwapChainForCompositionFunc));
            ppSwapChain = new IDXGISwapChain1();
            return m_CreateSwapChainForCompositionFunc(m_ptr, pDevice!=null ? pDevice.Ptr : IntPtr.Zero, ref pDesc, pRestrictToOutput!=null ? pRestrictToOutput.Ptr : IntPtr.Zero, out ppSwapChain.PtrForNew);
        }
        delegate int CreateSwapChainForCompositionFunc(IntPtr self, IntPtr pDevice, ref DXGI_SWAP_CHAIN_DESC1 pDesc, IntPtr pRestrictToOutput, out IntPtr ppSwapChain);
        CreateSwapChainForCompositionFunc m_CreateSwapChainForCompositionFunc;

    }
}
