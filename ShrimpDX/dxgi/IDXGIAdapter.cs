// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDXGIAdapter: IDXGIObject
    {
        static Guid s_uuid = new Guid("2411e7e1-12ac-4ccf-bd14-9798e8534dc0");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int EnumOutputs(
            uint Output,
            out IDXGIOutput ppOutput
        ){
            var fp = GetFunctionPointer(7);
            if(m_EnumOutputsFunc==null) m_EnumOutputsFunc = (EnumOutputsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(EnumOutputsFunc));
            ppOutput = new IDXGIOutput();
            return m_EnumOutputsFunc(m_ptr, Output, out ppOutput.PtrForNew);
        }
        delegate int EnumOutputsFunc(IntPtr self, uint Output, out IntPtr ppOutput);
        EnumOutputsFunc m_EnumOutputsFunc;

        public virtual int GetDesc(
            out DXGI_ADAPTER_DESC pDesc
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetDescFunc==null) m_GetDescFunc = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return m_GetDescFunc(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out DXGI_ADAPTER_DESC pDesc);
        GetDescFunc m_GetDescFunc;

        public virtual int CheckInterfaceSupport(
            ref Guid InterfaceName,
            out _LARGE_INTEGER pUMDVersion
        ){
            var fp = GetFunctionPointer(9);
            if(m_CheckInterfaceSupportFunc==null) m_CheckInterfaceSupportFunc = (CheckInterfaceSupportFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckInterfaceSupportFunc));
            
            return m_CheckInterfaceSupportFunc(m_ptr, ref InterfaceName, out pUMDVersion);
        }
        delegate int CheckInterfaceSupportFunc(IntPtr self, ref Guid InterfaceName, out _LARGE_INTEGER pUMDVersion);
        CheckInterfaceSupportFunc m_CheckInterfaceSupportFunc;

    }
}
