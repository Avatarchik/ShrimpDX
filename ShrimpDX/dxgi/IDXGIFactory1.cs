// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDXGIFactory1: IDXGIFactory
    {
        static Guid s_uuid = new Guid("770aae78-f26f-4dba-a829-253c83d1b387");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int EnumAdapters1(
            uint Adapter,
            out IDXGIAdapter1 ppAdapter
        ){
            var fp = GetFunctionPointer(12);
            if(m_EnumAdapters1Func==null) m_EnumAdapters1Func = (EnumAdapters1Func)Marshal.GetDelegateForFunctionPointer(fp, typeof(EnumAdapters1Func));
            ppAdapter = new IDXGIAdapter1();
            return m_EnumAdapters1Func(m_ptr, Adapter, out ppAdapter.PtrForNew);
        }
        delegate int EnumAdapters1Func(IntPtr self, uint Adapter, out IntPtr ppAdapter);
        EnumAdapters1Func m_EnumAdapters1Func;

        public virtual int IsCurrent(
        ){
            var fp = GetFunctionPointer(13);
            if(m_IsCurrentFunc==null) m_IsCurrentFunc = (IsCurrentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsCurrentFunc));
            
            return m_IsCurrentFunc(m_ptr);
        }
        delegate int IsCurrentFunc(IntPtr self);
        IsCurrentFunc m_IsCurrentFunc;

    }
}
