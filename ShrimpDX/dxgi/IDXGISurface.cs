// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDXGISurface: IDXGIDeviceSubObject
    {
        static Guid s_uuid = new Guid("cafcb56c-6ac3-4889-bf47-9e23bbd260ec");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetDesc(
            out DXGI_SURFACE_DESC pDesc
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetDescFunc==null) m_GetDescFunc = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return m_GetDescFunc(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out DXGI_SURFACE_DESC pDesc);
        GetDescFunc m_GetDescFunc;

        public virtual int Map(
            out DXGI_MAPPED_RECT pLockedRect,
            uint MapFlags
        ){
            var fp = GetFunctionPointer(9);
            if(m_MapFunc==null) m_MapFunc = (MapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapFunc));
            
            return m_MapFunc(m_ptr, out pLockedRect, MapFlags);
        }
        delegate int MapFunc(IntPtr self, out DXGI_MAPPED_RECT pLockedRect, uint MapFlags);
        MapFunc m_MapFunc;

        public virtual int Unmap(
        ){
            var fp = GetFunctionPointer(10);
            if(m_UnmapFunc==null) m_UnmapFunc = (UnmapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnmapFunc));
            
            return m_UnmapFunc(m_ptr);
        }
        delegate int UnmapFunc(IntPtr self);
        UnmapFunc m_UnmapFunc;

    }
}
