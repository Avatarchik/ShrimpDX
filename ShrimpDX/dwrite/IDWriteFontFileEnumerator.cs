// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDWriteFontFileEnumerator: IUnknown
    {
        static Guid s_uuid = new Guid("72755049-5ff7-435d-8348-4be97cfa6c7c");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int MoveNext(
            out int hasCurrentFile
        ){
            var fp = GetFunctionPointer(3);
            if(m_MoveNextFunc==null) m_MoveNextFunc = (MoveNextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MoveNextFunc));
            
            return m_MoveNextFunc(m_ptr, out hasCurrentFile);
        }
        delegate int MoveNextFunc(IntPtr self, out int hasCurrentFile);
        MoveNextFunc m_MoveNextFunc;

        public virtual int GetCurrentFontFile(
            out IDWriteFontFile fontFile
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetCurrentFontFileFunc==null) m_GetCurrentFontFileFunc = (GetCurrentFontFileFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCurrentFontFileFunc));
            fontFile = new IDWriteFontFile();
            return m_GetCurrentFontFileFunc(m_ptr, out fontFile.PtrForNew);
        }
        delegate int GetCurrentFontFileFunc(IntPtr self, out IntPtr fontFile);
        GetCurrentFontFileFunc m_GetCurrentFontFileFunc;

    }
}
