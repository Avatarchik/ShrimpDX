// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDWriteFontFile: IUnknown
    {
        static Guid s_uuid = new Guid("739d886a-cef5-47dc-8769-1a8b41bebbb0");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int GetReferenceKey(
            ref IntPtr fontFileReferenceKey,
            out uint fontFileReferenceKeySize
        ){
            var fp = GetFunctionPointer(3);
            if(m_GetReferenceKeyFunc==null) m_GetReferenceKeyFunc = (GetReferenceKeyFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetReferenceKeyFunc));
            
            return m_GetReferenceKeyFunc(m_ptr, ref fontFileReferenceKey, out fontFileReferenceKeySize);
        }
        delegate int GetReferenceKeyFunc(IntPtr self, ref IntPtr fontFileReferenceKey, out uint fontFileReferenceKeySize);
        GetReferenceKeyFunc m_GetReferenceKeyFunc;

        public virtual int GetLoader(
            out IDWriteFontFileLoader fontFileLoader
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetLoaderFunc==null) m_GetLoaderFunc = (GetLoaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetLoaderFunc));
            fontFileLoader = new IDWriteFontFileLoader();
            return m_GetLoaderFunc(m_ptr, out fontFileLoader.PtrForNew);
        }
        delegate int GetLoaderFunc(IntPtr self, out IntPtr fontFileLoader);
        GetLoaderFunc m_GetLoaderFunc;

        public virtual int Analyze(
            out int isSupportedFontType,
            out DWRITE_FONT_FILE_TYPE fontFileType,
            out DWRITE_FONT_FACE_TYPE fontFaceType,
            out uint numberOfFaces
        ){
            var fp = GetFunctionPointer(5);
            if(m_AnalyzeFunc==null) m_AnalyzeFunc = (AnalyzeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AnalyzeFunc));
            
            return m_AnalyzeFunc(m_ptr, out isSupportedFontType, out fontFileType, out fontFaceType, out numberOfFaces);
        }
        delegate int AnalyzeFunc(IntPtr self, out int isSupportedFontType, out DWRITE_FONT_FILE_TYPE fontFileType, out DWRITE_FONT_FACE_TYPE fontFaceType, out uint numberOfFaces);
        AnalyzeFunc m_AnalyzeFunc;

    }
}
