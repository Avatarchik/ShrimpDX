// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDWriteTextFormat: IUnknown
    {
        static Guid s_uuid = new Guid("9c906818-31d7-4fd3-a151-7c5e225db55a");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int SetTextAlignment(
            DWRITE_TEXT_ALIGNMENT textAlignment
        ){
            var fp = GetFunctionPointer(3);
            if(m_SetTextAlignmentFunc==null) m_SetTextAlignmentFunc = (SetTextAlignmentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetTextAlignmentFunc));
            
            return m_SetTextAlignmentFunc(m_ptr, textAlignment);
        }
        delegate int SetTextAlignmentFunc(IntPtr self, DWRITE_TEXT_ALIGNMENT textAlignment);
        SetTextAlignmentFunc m_SetTextAlignmentFunc;

        public virtual int SetParagraphAlignment(
            DWRITE_PARAGRAPH_ALIGNMENT paragraphAlignment
        ){
            var fp = GetFunctionPointer(4);
            if(m_SetParagraphAlignmentFunc==null) m_SetParagraphAlignmentFunc = (SetParagraphAlignmentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetParagraphAlignmentFunc));
            
            return m_SetParagraphAlignmentFunc(m_ptr, paragraphAlignment);
        }
        delegate int SetParagraphAlignmentFunc(IntPtr self, DWRITE_PARAGRAPH_ALIGNMENT paragraphAlignment);
        SetParagraphAlignmentFunc m_SetParagraphAlignmentFunc;

        public virtual int SetWordWrapping(
            DWRITE_WORD_WRAPPING wordWrapping
        ){
            var fp = GetFunctionPointer(5);
            if(m_SetWordWrappingFunc==null) m_SetWordWrappingFunc = (SetWordWrappingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetWordWrappingFunc));
            
            return m_SetWordWrappingFunc(m_ptr, wordWrapping);
        }
        delegate int SetWordWrappingFunc(IntPtr self, DWRITE_WORD_WRAPPING wordWrapping);
        SetWordWrappingFunc m_SetWordWrappingFunc;

        public virtual int SetReadingDirection(
            DWRITE_READING_DIRECTION readingDirection
        ){
            var fp = GetFunctionPointer(6);
            if(m_SetReadingDirectionFunc==null) m_SetReadingDirectionFunc = (SetReadingDirectionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetReadingDirectionFunc));
            
            return m_SetReadingDirectionFunc(m_ptr, readingDirection);
        }
        delegate int SetReadingDirectionFunc(IntPtr self, DWRITE_READING_DIRECTION readingDirection);
        SetReadingDirectionFunc m_SetReadingDirectionFunc;

        public virtual int SetFlowDirection(
            DWRITE_FLOW_DIRECTION flowDirection
        ){
            var fp = GetFunctionPointer(7);
            if(m_SetFlowDirectionFunc==null) m_SetFlowDirectionFunc = (SetFlowDirectionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetFlowDirectionFunc));
            
            return m_SetFlowDirectionFunc(m_ptr, flowDirection);
        }
        delegate int SetFlowDirectionFunc(IntPtr self, DWRITE_FLOW_DIRECTION flowDirection);
        SetFlowDirectionFunc m_SetFlowDirectionFunc;

        public virtual int SetIncrementalTabStop(
            float incrementalTabStop
        ){
            var fp = GetFunctionPointer(8);
            if(m_SetIncrementalTabStopFunc==null) m_SetIncrementalTabStopFunc = (SetIncrementalTabStopFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetIncrementalTabStopFunc));
            
            return m_SetIncrementalTabStopFunc(m_ptr, incrementalTabStop);
        }
        delegate int SetIncrementalTabStopFunc(IntPtr self, float incrementalTabStop);
        SetIncrementalTabStopFunc m_SetIncrementalTabStopFunc;

        public virtual int SetTrimming(
            ref DWRITE_TRIMMING trimmingOptions,
            IDWriteInlineObject trimmingSign
        ){
            var fp = GetFunctionPointer(9);
            if(m_SetTrimmingFunc==null) m_SetTrimmingFunc = (SetTrimmingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetTrimmingFunc));
            
            return m_SetTrimmingFunc(m_ptr, ref trimmingOptions, trimmingSign!=null ? trimmingSign.Ptr : IntPtr.Zero);
        }
        delegate int SetTrimmingFunc(IntPtr self, ref DWRITE_TRIMMING trimmingOptions, IntPtr trimmingSign);
        SetTrimmingFunc m_SetTrimmingFunc;

        public virtual int SetLineSpacing(
            DWRITE_LINE_SPACING_METHOD lineSpacingMethod,
            float lineSpacing,
            float baseline
        ){
            var fp = GetFunctionPointer(10);
            if(m_SetLineSpacingFunc==null) m_SetLineSpacingFunc = (SetLineSpacingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetLineSpacingFunc));
            
            return m_SetLineSpacingFunc(m_ptr, lineSpacingMethod, lineSpacing, baseline);
        }
        delegate int SetLineSpacingFunc(IntPtr self, DWRITE_LINE_SPACING_METHOD lineSpacingMethod, float lineSpacing, float baseline);
        SetLineSpacingFunc m_SetLineSpacingFunc;

        public virtual DWRITE_TEXT_ALIGNMENT GetTextAlignment(
        ){
            var fp = GetFunctionPointer(11);
            if(m_GetTextAlignmentFunc==null) m_GetTextAlignmentFunc = (GetTextAlignmentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTextAlignmentFunc));
            
            return m_GetTextAlignmentFunc(m_ptr);
        }
        delegate DWRITE_TEXT_ALIGNMENT GetTextAlignmentFunc(IntPtr self);
        GetTextAlignmentFunc m_GetTextAlignmentFunc;

        public virtual DWRITE_PARAGRAPH_ALIGNMENT GetParagraphAlignment(
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetParagraphAlignmentFunc==null) m_GetParagraphAlignmentFunc = (GetParagraphAlignmentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParagraphAlignmentFunc));
            
            return m_GetParagraphAlignmentFunc(m_ptr);
        }
        delegate DWRITE_PARAGRAPH_ALIGNMENT GetParagraphAlignmentFunc(IntPtr self);
        GetParagraphAlignmentFunc m_GetParagraphAlignmentFunc;

        public virtual DWRITE_WORD_WRAPPING GetWordWrapping(
        ){
            var fp = GetFunctionPointer(13);
            if(m_GetWordWrappingFunc==null) m_GetWordWrappingFunc = (GetWordWrappingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetWordWrappingFunc));
            
            return m_GetWordWrappingFunc(m_ptr);
        }
        delegate DWRITE_WORD_WRAPPING GetWordWrappingFunc(IntPtr self);
        GetWordWrappingFunc m_GetWordWrappingFunc;

        public virtual DWRITE_READING_DIRECTION GetReadingDirection(
        ){
            var fp = GetFunctionPointer(14);
            if(m_GetReadingDirectionFunc==null) m_GetReadingDirectionFunc = (GetReadingDirectionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetReadingDirectionFunc));
            
            return m_GetReadingDirectionFunc(m_ptr);
        }
        delegate DWRITE_READING_DIRECTION GetReadingDirectionFunc(IntPtr self);
        GetReadingDirectionFunc m_GetReadingDirectionFunc;

        public virtual DWRITE_FLOW_DIRECTION GetFlowDirection(
        ){
            var fp = GetFunctionPointer(15);
            if(m_GetFlowDirectionFunc==null) m_GetFlowDirectionFunc = (GetFlowDirectionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFlowDirectionFunc));
            
            return m_GetFlowDirectionFunc(m_ptr);
        }
        delegate DWRITE_FLOW_DIRECTION GetFlowDirectionFunc(IntPtr self);
        GetFlowDirectionFunc m_GetFlowDirectionFunc;

        public virtual float GetIncrementalTabStop(
        ){
            var fp = GetFunctionPointer(16);
            if(m_GetIncrementalTabStopFunc==null) m_GetIncrementalTabStopFunc = (GetIncrementalTabStopFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetIncrementalTabStopFunc));
            
            return m_GetIncrementalTabStopFunc(m_ptr);
        }
        delegate float GetIncrementalTabStopFunc(IntPtr self);
        GetIncrementalTabStopFunc m_GetIncrementalTabStopFunc;

        public virtual int GetTrimming(
            out DWRITE_TRIMMING trimmingOptions,
            out IDWriteInlineObject trimmingSign
        ){
            var fp = GetFunctionPointer(17);
            if(m_GetTrimmingFunc==null) m_GetTrimmingFunc = (GetTrimmingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTrimmingFunc));
            trimmingSign = new IDWriteInlineObject();
            return m_GetTrimmingFunc(m_ptr, out trimmingOptions, out trimmingSign.PtrForNew);
        }
        delegate int GetTrimmingFunc(IntPtr self, out DWRITE_TRIMMING trimmingOptions, out IntPtr trimmingSign);
        GetTrimmingFunc m_GetTrimmingFunc;

        public virtual int GetLineSpacing(
            out DWRITE_LINE_SPACING_METHOD lineSpacingMethod,
            out float lineSpacing,
            out float baseline
        ){
            var fp = GetFunctionPointer(18);
            if(m_GetLineSpacingFunc==null) m_GetLineSpacingFunc = (GetLineSpacingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetLineSpacingFunc));
            
            return m_GetLineSpacingFunc(m_ptr, out lineSpacingMethod, out lineSpacing, out baseline);
        }
        delegate int GetLineSpacingFunc(IntPtr self, out DWRITE_LINE_SPACING_METHOD lineSpacingMethod, out float lineSpacing, out float baseline);
        GetLineSpacingFunc m_GetLineSpacingFunc;

        public virtual int GetFontCollection(
            out IDWriteFontCollection fontCollection
        ){
            var fp = GetFunctionPointer(19);
            if(m_GetFontCollectionFunc==null) m_GetFontCollectionFunc = (GetFontCollectionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontCollectionFunc));
            fontCollection = new IDWriteFontCollection();
            return m_GetFontCollectionFunc(m_ptr, out fontCollection.PtrForNew);
        }
        delegate int GetFontCollectionFunc(IntPtr self, out IntPtr fontCollection);
        GetFontCollectionFunc m_GetFontCollectionFunc;

        public virtual uint GetFontFamilyNameLength(
        ){
            var fp = GetFunctionPointer(20);
            if(m_GetFontFamilyNameLengthFunc==null) m_GetFontFamilyNameLengthFunc = (GetFontFamilyNameLengthFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontFamilyNameLengthFunc));
            
            return m_GetFontFamilyNameLengthFunc(m_ptr);
        }
        delegate uint GetFontFamilyNameLengthFunc(IntPtr self);
        GetFontFamilyNameLengthFunc m_GetFontFamilyNameLengthFunc;

        public virtual int GetFontFamilyName(
            out ushort fontFamilyName,
            uint nameSize
        ){
            var fp = GetFunctionPointer(21);
            if(m_GetFontFamilyNameFunc==null) m_GetFontFamilyNameFunc = (GetFontFamilyNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontFamilyNameFunc));
            
            return m_GetFontFamilyNameFunc(m_ptr, out fontFamilyName, nameSize);
        }
        delegate int GetFontFamilyNameFunc(IntPtr self, out ushort fontFamilyName, uint nameSize);
        GetFontFamilyNameFunc m_GetFontFamilyNameFunc;

        public virtual DWRITE_FONT_WEIGHT GetFontWeight(
        ){
            var fp = GetFunctionPointer(22);
            if(m_GetFontWeightFunc==null) m_GetFontWeightFunc = (GetFontWeightFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontWeightFunc));
            
            return m_GetFontWeightFunc(m_ptr);
        }
        delegate DWRITE_FONT_WEIGHT GetFontWeightFunc(IntPtr self);
        GetFontWeightFunc m_GetFontWeightFunc;

        public virtual DWRITE_FONT_STYLE GetFontStyle(
        ){
            var fp = GetFunctionPointer(23);
            if(m_GetFontStyleFunc==null) m_GetFontStyleFunc = (GetFontStyleFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontStyleFunc));
            
            return m_GetFontStyleFunc(m_ptr);
        }
        delegate DWRITE_FONT_STYLE GetFontStyleFunc(IntPtr self);
        GetFontStyleFunc m_GetFontStyleFunc;

        public virtual DWRITE_FONT_STRETCH GetFontStretch(
        ){
            var fp = GetFunctionPointer(24);
            if(m_GetFontStretchFunc==null) m_GetFontStretchFunc = (GetFontStretchFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontStretchFunc));
            
            return m_GetFontStretchFunc(m_ptr);
        }
        delegate DWRITE_FONT_STRETCH GetFontStretchFunc(IntPtr self);
        GetFontStretchFunc m_GetFontStretchFunc;

        public virtual float GetFontSize(
        ){
            var fp = GetFunctionPointer(25);
            if(m_GetFontSizeFunc==null) m_GetFontSizeFunc = (GetFontSizeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontSizeFunc));
            
            return m_GetFontSizeFunc(m_ptr);
        }
        delegate float GetFontSizeFunc(IntPtr self);
        GetFontSizeFunc m_GetFontSizeFunc;

        public virtual uint GetLocaleNameLength(
        ){
            var fp = GetFunctionPointer(26);
            if(m_GetLocaleNameLengthFunc==null) m_GetLocaleNameLengthFunc = (GetLocaleNameLengthFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetLocaleNameLengthFunc));
            
            return m_GetLocaleNameLengthFunc(m_ptr);
        }
        delegate uint GetLocaleNameLengthFunc(IntPtr self);
        GetLocaleNameLengthFunc m_GetLocaleNameLengthFunc;

        public virtual int GetLocaleName(
            out ushort localeName,
            uint nameSize
        ){
            var fp = GetFunctionPointer(27);
            if(m_GetLocaleNameFunc==null) m_GetLocaleNameFunc = (GetLocaleNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetLocaleNameFunc));
            
            return m_GetLocaleNameFunc(m_ptr, out localeName, nameSize);
        }
        delegate int GetLocaleNameFunc(IntPtr self, out ushort localeName, uint nameSize);
        GetLocaleNameFunc m_GetLocaleNameFunc;

    }
}
