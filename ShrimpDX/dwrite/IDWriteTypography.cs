// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDWriteTypography: IUnknown
    {
        static Guid s_uuid = new Guid("55f1112b-1dc2-4b3c-9541-f46894ed85b6");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int AddFontFeature(
            DWRITE_FONT_FEATURE fontFeature
        ){
            var fp = GetFunctionPointer(3);
            if(m_AddFontFeatureFunc==null) m_AddFontFeatureFunc = (AddFontFeatureFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AddFontFeatureFunc));
            
            return m_AddFontFeatureFunc(m_ptr, fontFeature);
        }
        delegate int AddFontFeatureFunc(IntPtr self, DWRITE_FONT_FEATURE fontFeature);
        AddFontFeatureFunc m_AddFontFeatureFunc;

        public virtual uint GetFontFeatureCount(
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetFontFeatureCountFunc==null) m_GetFontFeatureCountFunc = (GetFontFeatureCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontFeatureCountFunc));
            
            return m_GetFontFeatureCountFunc(m_ptr);
        }
        delegate uint GetFontFeatureCountFunc(IntPtr self);
        GetFontFeatureCountFunc m_GetFontFeatureCountFunc;

        public virtual int GetFontFeature(
            uint fontFeatureIndex,
            out DWRITE_FONT_FEATURE fontFeature
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetFontFeatureFunc==null) m_GetFontFeatureFunc = (GetFontFeatureFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontFeatureFunc));
            
            return m_GetFontFeatureFunc(m_ptr, fontFeatureIndex, out fontFeature);
        }
        delegate int GetFontFeatureFunc(IntPtr self, uint fontFeatureIndex, out DWRITE_FONT_FEATURE fontFeature);
        GetFontFeatureFunc m_GetFontFeatureFunc;

    }
}
