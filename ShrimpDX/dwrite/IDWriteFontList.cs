// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDWriteFontList: IUnknown
    {
        static Guid s_uuid = new Guid("1a0d8438-1d97-4ec1-aef9-a2fb86ed6acb");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int GetFontCollection(
            out IDWriteFontCollection fontCollection
        ){
            var fp = GetFunctionPointer(3);
            if(m_GetFontCollectionFunc==null) m_GetFontCollectionFunc = (GetFontCollectionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontCollectionFunc));
            fontCollection = new IDWriteFontCollection();
            return m_GetFontCollectionFunc(m_ptr, out fontCollection.PtrForNew);
        }
        delegate int GetFontCollectionFunc(IntPtr self, out IntPtr fontCollection);
        GetFontCollectionFunc m_GetFontCollectionFunc;

        public virtual uint GetFontCount(
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetFontCountFunc==null) m_GetFontCountFunc = (GetFontCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontCountFunc));
            
            return m_GetFontCountFunc(m_ptr);
        }
        delegate uint GetFontCountFunc(IntPtr self);
        GetFontCountFunc m_GetFontCountFunc;

        public virtual int GetFont(
            uint index,
            out IDWriteFont font
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetFontFunc==null) m_GetFontFunc = (GetFontFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFontFunc));
            font = new IDWriteFont();
            return m_GetFontFunc(m_ptr, index, out font.PtrForNew);
        }
        delegate int GetFontFunc(IntPtr self, uint index, out IntPtr font);
        GetFontFunc m_GetFontFunc;

    }
}
