// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDWriteTextRenderer: IDWritePixelSnapping
    {
        static Guid s_uuid = new Guid("ef8a8135-5cc6-45fe-8825-c5a0724eb819");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int DrawGlyphRun(
            IntPtr clientDrawingContext,
            float baselineOriginX,
            float baselineOriginY,
            DWRITE_MEASURING_MODE measuringMode,
            ref DWRITE_GLYPH_RUN glyphRun,
            ref DWRITE_GLYPH_RUN_DESCRIPTION glyphRunDescription,
            IUnknown clientDrawingEffect
        ){
            var fp = GetFunctionPointer(6);
            if(m_DrawGlyphRunFunc==null) m_DrawGlyphRunFunc = (DrawGlyphRunFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DrawGlyphRunFunc));
            
            return m_DrawGlyphRunFunc(m_ptr, clientDrawingContext, baselineOriginX, baselineOriginY, measuringMode, ref glyphRun, ref glyphRunDescription, clientDrawingEffect!=null ? clientDrawingEffect.Ptr : IntPtr.Zero);
        }
        delegate int DrawGlyphRunFunc(IntPtr self, IntPtr clientDrawingContext, float baselineOriginX, float baselineOriginY, DWRITE_MEASURING_MODE measuringMode, ref DWRITE_GLYPH_RUN glyphRun, ref DWRITE_GLYPH_RUN_DESCRIPTION glyphRunDescription, IntPtr clientDrawingEffect);
        DrawGlyphRunFunc m_DrawGlyphRunFunc;

        public virtual int DrawUnderline(
            IntPtr clientDrawingContext,
            float baselineOriginX,
            float baselineOriginY,
            ref DWRITE_UNDERLINE underline,
            IUnknown clientDrawingEffect
        ){
            var fp = GetFunctionPointer(7);
            if(m_DrawUnderlineFunc==null) m_DrawUnderlineFunc = (DrawUnderlineFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DrawUnderlineFunc));
            
            return m_DrawUnderlineFunc(m_ptr, clientDrawingContext, baselineOriginX, baselineOriginY, ref underline, clientDrawingEffect!=null ? clientDrawingEffect.Ptr : IntPtr.Zero);
        }
        delegate int DrawUnderlineFunc(IntPtr self, IntPtr clientDrawingContext, float baselineOriginX, float baselineOriginY, ref DWRITE_UNDERLINE underline, IntPtr clientDrawingEffect);
        DrawUnderlineFunc m_DrawUnderlineFunc;

        public virtual int DrawStrikethrough(
            IntPtr clientDrawingContext,
            float baselineOriginX,
            float baselineOriginY,
            ref DWRITE_STRIKETHROUGH strikethrough,
            IUnknown clientDrawingEffect
        ){
            var fp = GetFunctionPointer(8);
            if(m_DrawStrikethroughFunc==null) m_DrawStrikethroughFunc = (DrawStrikethroughFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DrawStrikethroughFunc));
            
            return m_DrawStrikethroughFunc(m_ptr, clientDrawingContext, baselineOriginX, baselineOriginY, ref strikethrough, clientDrawingEffect!=null ? clientDrawingEffect.Ptr : IntPtr.Zero);
        }
        delegate int DrawStrikethroughFunc(IntPtr self, IntPtr clientDrawingContext, float baselineOriginX, float baselineOriginY, ref DWRITE_STRIKETHROUGH strikethrough, IntPtr clientDrawingEffect);
        DrawStrikethroughFunc m_DrawStrikethroughFunc;

        public virtual int DrawInlineObject(
            IntPtr clientDrawingContext,
            float originX,
            float originY,
            IDWriteInlineObject inlineObject,
            int isSideways,
            int isRightToLeft,
            IUnknown clientDrawingEffect
        ){
            var fp = GetFunctionPointer(9);
            if(m_DrawInlineObjectFunc==null) m_DrawInlineObjectFunc = (DrawInlineObjectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DrawInlineObjectFunc));
            
            return m_DrawInlineObjectFunc(m_ptr, clientDrawingContext, originX, originY, inlineObject!=null ? inlineObject.Ptr : IntPtr.Zero, isSideways, isRightToLeft, clientDrawingEffect!=null ? clientDrawingEffect.Ptr : IntPtr.Zero);
        }
        delegate int DrawInlineObjectFunc(IntPtr self, IntPtr clientDrawingContext, float originX, float originY, IntPtr inlineObject, int isSideways, int isRightToLeft, IntPtr clientDrawingEffect);
        DrawInlineObjectFunc m_DrawInlineObjectFunc;

    }
}
