// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class IDWriteTextAnalysisSource: IUnknown
    {
        static Guid s_uuid = new Guid("688e1a58-5094-47c8-adc8-fbcea60ae92b");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetTextAtPosition(
            uint textPosition,
            ref IntPtr textString,
            out uint textLength
        ){
            var fp = GetFunctionPointer(3);
            if(m_GetTextAtPositionFunc==null) m_GetTextAtPositionFunc = (GetTextAtPositionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTextAtPositionFunc));
            
            return m_GetTextAtPositionFunc(m_ptr, textPosition, ref textString, out textLength);
        }
        delegate int GetTextAtPositionFunc(IntPtr self, uint textPosition, ref IntPtr textString, out uint textLength);
        GetTextAtPositionFunc m_GetTextAtPositionFunc;

        public virtual int GetTextBeforePosition(
            uint textPosition,
            ref IntPtr textString,
            out uint textLength
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetTextBeforePositionFunc==null) m_GetTextBeforePositionFunc = (GetTextBeforePositionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTextBeforePositionFunc));
            
            return m_GetTextBeforePositionFunc(m_ptr, textPosition, ref textString, out textLength);
        }
        delegate int GetTextBeforePositionFunc(IntPtr self, uint textPosition, ref IntPtr textString, out uint textLength);
        GetTextBeforePositionFunc m_GetTextBeforePositionFunc;

        public virtual DWRITE_READING_DIRECTION GetParagraphReadingDirection(
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetParagraphReadingDirectionFunc==null) m_GetParagraphReadingDirectionFunc = (GetParagraphReadingDirectionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParagraphReadingDirectionFunc));
            
            return m_GetParagraphReadingDirectionFunc(m_ptr);
        }
        delegate DWRITE_READING_DIRECTION GetParagraphReadingDirectionFunc(IntPtr self);
        GetParagraphReadingDirectionFunc m_GetParagraphReadingDirectionFunc;

        public virtual int GetLocaleName(
            uint textPosition,
            out uint textLength,
            ref IntPtr localeName
        ){
            var fp = GetFunctionPointer(6);
            if(m_GetLocaleNameFunc==null) m_GetLocaleNameFunc = (GetLocaleNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetLocaleNameFunc));
            
            return m_GetLocaleNameFunc(m_ptr, textPosition, out textLength, ref localeName);
        }
        delegate int GetLocaleNameFunc(IntPtr self, uint textPosition, out uint textLength, ref IntPtr localeName);
        GetLocaleNameFunc m_GetLocaleNameFunc;

        public virtual int GetNumberSubstitution(
            uint textPosition,
            out uint textLength,
            out IDWriteNumberSubstitution numberSubstitution
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetNumberSubstitutionFunc==null) m_GetNumberSubstitutionFunc = (GetNumberSubstitutionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetNumberSubstitutionFunc));
            numberSubstitution = new IDWriteNumberSubstitution();
            return m_GetNumberSubstitutionFunc(m_ptr, textPosition, out textLength, out numberSubstitution.PtrForNew);
        }
        delegate int GetNumberSubstitutionFunc(IntPtr self, uint textPosition, out uint textLength, out IntPtr numberSubstitution);
        GetNumberSubstitutionFunc m_GetNumberSubstitutionFunc;

    }
}
