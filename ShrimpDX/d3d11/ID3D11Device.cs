// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D11Device: IUnknown
    {
        static Guid s_uuid = new Guid("db6f6ddb-ac77-4e88-8253-819df9bbf140");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int CreateBuffer(
            ref D3D11_BUFFER_DESC pDesc,
            ref D3D11_SUBRESOURCE_DATA pInitialData,
            out ID3D11Buffer ppBuffer
        ){
            var fp = GetFunctionPointer(3);
            if(m_CreateBufferFunc==null) m_CreateBufferFunc = (CreateBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBufferFunc));
            ppBuffer = new ID3D11Buffer();
            return m_CreateBufferFunc(m_ptr, ref pDesc, ref pInitialData, out ppBuffer.PtrForNew);
        }
        delegate int CreateBufferFunc(IntPtr self, ref D3D11_BUFFER_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, out IntPtr ppBuffer);
        CreateBufferFunc m_CreateBufferFunc;

        public virtual int CreateTexture1D(
            ref D3D11_TEXTURE1D_DESC pDesc,
            ref D3D11_SUBRESOURCE_DATA pInitialData,
            out ID3D11Texture1D ppTexture1D
        ){
            var fp = GetFunctionPointer(4);
            if(m_CreateTexture1DFunc==null) m_CreateTexture1DFunc = (CreateTexture1DFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateTexture1DFunc));
            ppTexture1D = new ID3D11Texture1D();
            return m_CreateTexture1DFunc(m_ptr, ref pDesc, ref pInitialData, out ppTexture1D.PtrForNew);
        }
        delegate int CreateTexture1DFunc(IntPtr self, ref D3D11_TEXTURE1D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, out IntPtr ppTexture1D);
        CreateTexture1DFunc m_CreateTexture1DFunc;

        public virtual int CreateTexture2D(
            ref D3D11_TEXTURE2D_DESC pDesc,
            ref D3D11_SUBRESOURCE_DATA pInitialData,
            out ID3D11Texture2D ppTexture2D
        ){
            var fp = GetFunctionPointer(5);
            if(m_CreateTexture2DFunc==null) m_CreateTexture2DFunc = (CreateTexture2DFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateTexture2DFunc));
            ppTexture2D = new ID3D11Texture2D();
            return m_CreateTexture2DFunc(m_ptr, ref pDesc, ref pInitialData, out ppTexture2D.PtrForNew);
        }
        delegate int CreateTexture2DFunc(IntPtr self, ref D3D11_TEXTURE2D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, out IntPtr ppTexture2D);
        CreateTexture2DFunc m_CreateTexture2DFunc;

        public virtual int CreateTexture3D(
            ref D3D11_TEXTURE3D_DESC pDesc,
            ref D3D11_SUBRESOURCE_DATA pInitialData,
            out ID3D11Texture3D ppTexture3D
        ){
            var fp = GetFunctionPointer(6);
            if(m_CreateTexture3DFunc==null) m_CreateTexture3DFunc = (CreateTexture3DFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateTexture3DFunc));
            ppTexture3D = new ID3D11Texture3D();
            return m_CreateTexture3DFunc(m_ptr, ref pDesc, ref pInitialData, out ppTexture3D.PtrForNew);
        }
        delegate int CreateTexture3DFunc(IntPtr self, ref D3D11_TEXTURE3D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, out IntPtr ppTexture3D);
        CreateTexture3DFunc m_CreateTexture3DFunc;

        public virtual int CreateShaderResourceView(
            ID3D11Resource pResource,
            ref D3D11_SHADER_RESOURCE_VIEW_DESC pDesc,
            out ID3D11ShaderResourceView ppSRView
        ){
            var fp = GetFunctionPointer(7);
            if(m_CreateShaderResourceViewFunc==null) m_CreateShaderResourceViewFunc = (CreateShaderResourceViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateShaderResourceViewFunc));
            ppSRView = new ID3D11ShaderResourceView();
            return m_CreateShaderResourceViewFunc(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero, ref pDesc, out ppSRView.PtrForNew);
        }
        delegate int CreateShaderResourceViewFunc(IntPtr self, IntPtr pResource, ref D3D11_SHADER_RESOURCE_VIEW_DESC pDesc, out IntPtr ppSRView);
        CreateShaderResourceViewFunc m_CreateShaderResourceViewFunc;

        public virtual int CreateUnorderedAccessView(
            ID3D11Resource pResource,
            ref D3D11_UNORDERED_ACCESS_VIEW_DESC pDesc,
            out ID3D11UnorderedAccessView ppUAView
        ){
            var fp = GetFunctionPointer(8);
            if(m_CreateUnorderedAccessViewFunc==null) m_CreateUnorderedAccessViewFunc = (CreateUnorderedAccessViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateUnorderedAccessViewFunc));
            ppUAView = new ID3D11UnorderedAccessView();
            return m_CreateUnorderedAccessViewFunc(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero, ref pDesc, out ppUAView.PtrForNew);
        }
        delegate int CreateUnorderedAccessViewFunc(IntPtr self, IntPtr pResource, ref D3D11_UNORDERED_ACCESS_VIEW_DESC pDesc, out IntPtr ppUAView);
        CreateUnorderedAccessViewFunc m_CreateUnorderedAccessViewFunc;

        public virtual int CreateRenderTargetView(
            ID3D11Resource pResource,
            ref D3D11_RENDER_TARGET_VIEW_DESC pDesc,
            out ID3D11RenderTargetView ppRTView
        ){
            var fp = GetFunctionPointer(9);
            if(m_CreateRenderTargetViewFunc==null) m_CreateRenderTargetViewFunc = (CreateRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateRenderTargetViewFunc));
            ppRTView = new ID3D11RenderTargetView();
            return m_CreateRenderTargetViewFunc(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero, ref pDesc, out ppRTView.PtrForNew);
        }
        delegate int CreateRenderTargetViewFunc(IntPtr self, IntPtr pResource, ref D3D11_RENDER_TARGET_VIEW_DESC pDesc, out IntPtr ppRTView);
        CreateRenderTargetViewFunc m_CreateRenderTargetViewFunc;

        public virtual int CreateDepthStencilView(
            ID3D11Resource pResource,
            ref D3D11_DEPTH_STENCIL_VIEW_DESC pDesc,
            out ID3D11DepthStencilView ppDepthStencilView
        ){
            var fp = GetFunctionPointer(10);
            if(m_CreateDepthStencilViewFunc==null) m_CreateDepthStencilViewFunc = (CreateDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDepthStencilViewFunc));
            ppDepthStencilView = new ID3D11DepthStencilView();
            return m_CreateDepthStencilViewFunc(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero, ref pDesc, out ppDepthStencilView.PtrForNew);
        }
        delegate int CreateDepthStencilViewFunc(IntPtr self, IntPtr pResource, ref D3D11_DEPTH_STENCIL_VIEW_DESC pDesc, out IntPtr ppDepthStencilView);
        CreateDepthStencilViewFunc m_CreateDepthStencilViewFunc;

        public virtual int CreateInputLayout(
            ref D3D11_INPUT_ELEMENT_DESC pInputElementDescs,
            uint NumElements,
            IntPtr pShaderBytecodeWithInputSignature,
            ulong BytecodeLength,
            out ID3D11InputLayout ppInputLayout
        ){
            var fp = GetFunctionPointer(11);
            if(m_CreateInputLayoutFunc==null) m_CreateInputLayoutFunc = (CreateInputLayoutFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateInputLayoutFunc));
            ppInputLayout = new ID3D11InputLayout();
            return m_CreateInputLayoutFunc(m_ptr, ref pInputElementDescs, NumElements, pShaderBytecodeWithInputSignature, BytecodeLength, out ppInputLayout.PtrForNew);
        }
        delegate int CreateInputLayoutFunc(IntPtr self, ref D3D11_INPUT_ELEMENT_DESC pInputElementDescs, uint NumElements, IntPtr pShaderBytecodeWithInputSignature, ulong BytecodeLength, out IntPtr ppInputLayout);
        CreateInputLayoutFunc m_CreateInputLayoutFunc;

        public virtual int CreateVertexShader(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            ID3D11ClassLinkage pClassLinkage,
            out ID3D11VertexShader ppVertexShader
        ){
            var fp = GetFunctionPointer(12);
            if(m_CreateVertexShaderFunc==null) m_CreateVertexShaderFunc = (CreateVertexShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVertexShaderFunc));
            ppVertexShader = new ID3D11VertexShader();
            return m_CreateVertexShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage!=null ? pClassLinkage.Ptr : IntPtr.Zero, out ppVertexShader.PtrForNew);
        }
        delegate int CreateVertexShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, out IntPtr ppVertexShader);
        CreateVertexShaderFunc m_CreateVertexShaderFunc;

        public virtual int CreateGeometryShader(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            ID3D11ClassLinkage pClassLinkage,
            out ID3D11GeometryShader ppGeometryShader
        ){
            var fp = GetFunctionPointer(13);
            if(m_CreateGeometryShaderFunc==null) m_CreateGeometryShaderFunc = (CreateGeometryShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateGeometryShaderFunc));
            ppGeometryShader = new ID3D11GeometryShader();
            return m_CreateGeometryShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage!=null ? pClassLinkage.Ptr : IntPtr.Zero, out ppGeometryShader.PtrForNew);
        }
        delegate int CreateGeometryShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, out IntPtr ppGeometryShader);
        CreateGeometryShaderFunc m_CreateGeometryShaderFunc;

        public virtual int CreateGeometryShaderWithStreamOutput(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            ref D3D11_SO_DECLARATION_ENTRY pSODeclaration,
            uint NumEntries,
            ref uint pBufferStrides,
            uint NumStrides,
            uint RasterizedStream,
            ID3D11ClassLinkage pClassLinkage,
            out ID3D11GeometryShader ppGeometryShader
        ){
            var fp = GetFunctionPointer(14);
            if(m_CreateGeometryShaderWithStreamOutputFunc==null) m_CreateGeometryShaderWithStreamOutputFunc = (CreateGeometryShaderWithStreamOutputFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateGeometryShaderWithStreamOutputFunc));
            ppGeometryShader = new ID3D11GeometryShader();
            return m_CreateGeometryShaderWithStreamOutputFunc(m_ptr, pShaderBytecode, BytecodeLength, ref pSODeclaration, NumEntries, ref pBufferStrides, NumStrides, RasterizedStream, pClassLinkage!=null ? pClassLinkage.Ptr : IntPtr.Zero, out ppGeometryShader.PtrForNew);
        }
        delegate int CreateGeometryShaderWithStreamOutputFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, ref D3D11_SO_DECLARATION_ENTRY pSODeclaration, uint NumEntries, ref uint pBufferStrides, uint NumStrides, uint RasterizedStream, IntPtr pClassLinkage, out IntPtr ppGeometryShader);
        CreateGeometryShaderWithStreamOutputFunc m_CreateGeometryShaderWithStreamOutputFunc;

        public virtual int CreatePixelShader(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            ID3D11ClassLinkage pClassLinkage,
            out ID3D11PixelShader ppPixelShader
        ){
            var fp = GetFunctionPointer(15);
            if(m_CreatePixelShaderFunc==null) m_CreatePixelShaderFunc = (CreatePixelShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreatePixelShaderFunc));
            ppPixelShader = new ID3D11PixelShader();
            return m_CreatePixelShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage!=null ? pClassLinkage.Ptr : IntPtr.Zero, out ppPixelShader.PtrForNew);
        }
        delegate int CreatePixelShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, out IntPtr ppPixelShader);
        CreatePixelShaderFunc m_CreatePixelShaderFunc;

        public virtual int CreateHullShader(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            ID3D11ClassLinkage pClassLinkage,
            out ID3D11HullShader ppHullShader
        ){
            var fp = GetFunctionPointer(16);
            if(m_CreateHullShaderFunc==null) m_CreateHullShaderFunc = (CreateHullShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateHullShaderFunc));
            ppHullShader = new ID3D11HullShader();
            return m_CreateHullShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage!=null ? pClassLinkage.Ptr : IntPtr.Zero, out ppHullShader.PtrForNew);
        }
        delegate int CreateHullShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, out IntPtr ppHullShader);
        CreateHullShaderFunc m_CreateHullShaderFunc;

        public virtual int CreateDomainShader(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            ID3D11ClassLinkage pClassLinkage,
            out ID3D11DomainShader ppDomainShader
        ){
            var fp = GetFunctionPointer(17);
            if(m_CreateDomainShaderFunc==null) m_CreateDomainShaderFunc = (CreateDomainShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDomainShaderFunc));
            ppDomainShader = new ID3D11DomainShader();
            return m_CreateDomainShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage!=null ? pClassLinkage.Ptr : IntPtr.Zero, out ppDomainShader.PtrForNew);
        }
        delegate int CreateDomainShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, out IntPtr ppDomainShader);
        CreateDomainShaderFunc m_CreateDomainShaderFunc;

        public virtual int CreateComputeShader(
            IntPtr pShaderBytecode,
            ulong BytecodeLength,
            ID3D11ClassLinkage pClassLinkage,
            out ID3D11ComputeShader ppComputeShader
        ){
            var fp = GetFunctionPointer(18);
            if(m_CreateComputeShaderFunc==null) m_CreateComputeShaderFunc = (CreateComputeShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateComputeShaderFunc));
            ppComputeShader = new ID3D11ComputeShader();
            return m_CreateComputeShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage!=null ? pClassLinkage.Ptr : IntPtr.Zero, out ppComputeShader.PtrForNew);
        }
        delegate int CreateComputeShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, out IntPtr ppComputeShader);
        CreateComputeShaderFunc m_CreateComputeShaderFunc;

        public virtual int CreateClassLinkage(
            out ID3D11ClassLinkage ppLinkage
        ){
            var fp = GetFunctionPointer(19);
            if(m_CreateClassLinkageFunc==null) m_CreateClassLinkageFunc = (CreateClassLinkageFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateClassLinkageFunc));
            ppLinkage = new ID3D11ClassLinkage();
            return m_CreateClassLinkageFunc(m_ptr, out ppLinkage.PtrForNew);
        }
        delegate int CreateClassLinkageFunc(IntPtr self, out IntPtr ppLinkage);
        CreateClassLinkageFunc m_CreateClassLinkageFunc;

        public virtual int CreateBlendState(
            ref D3D11_BLEND_DESC pBlendStateDesc,
            out ID3D11BlendState ppBlendState
        ){
            var fp = GetFunctionPointer(20);
            if(m_CreateBlendStateFunc==null) m_CreateBlendStateFunc = (CreateBlendStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBlendStateFunc));
            ppBlendState = new ID3D11BlendState();
            return m_CreateBlendStateFunc(m_ptr, ref pBlendStateDesc, out ppBlendState.PtrForNew);
        }
        delegate int CreateBlendStateFunc(IntPtr self, ref D3D11_BLEND_DESC pBlendStateDesc, out IntPtr ppBlendState);
        CreateBlendStateFunc m_CreateBlendStateFunc;

        public virtual int CreateDepthStencilState(
            ref D3D11_DEPTH_STENCIL_DESC pDepthStencilDesc,
            out ID3D11DepthStencilState ppDepthStencilState
        ){
            var fp = GetFunctionPointer(21);
            if(m_CreateDepthStencilStateFunc==null) m_CreateDepthStencilStateFunc = (CreateDepthStencilStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDepthStencilStateFunc));
            ppDepthStencilState = new ID3D11DepthStencilState();
            return m_CreateDepthStencilStateFunc(m_ptr, ref pDepthStencilDesc, out ppDepthStencilState.PtrForNew);
        }
        delegate int CreateDepthStencilStateFunc(IntPtr self, ref D3D11_DEPTH_STENCIL_DESC pDepthStencilDesc, out IntPtr ppDepthStencilState);
        CreateDepthStencilStateFunc m_CreateDepthStencilStateFunc;

        public virtual int CreateRasterizerState(
            ref D3D11_RASTERIZER_DESC pRasterizerDesc,
            out ID3D11RasterizerState ppRasterizerState
        ){
            var fp = GetFunctionPointer(22);
            if(m_CreateRasterizerStateFunc==null) m_CreateRasterizerStateFunc = (CreateRasterizerStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateRasterizerStateFunc));
            ppRasterizerState = new ID3D11RasterizerState();
            return m_CreateRasterizerStateFunc(m_ptr, ref pRasterizerDesc, out ppRasterizerState.PtrForNew);
        }
        delegate int CreateRasterizerStateFunc(IntPtr self, ref D3D11_RASTERIZER_DESC pRasterizerDesc, out IntPtr ppRasterizerState);
        CreateRasterizerStateFunc m_CreateRasterizerStateFunc;

        public virtual int CreateSamplerState(
            ref D3D11_SAMPLER_DESC pSamplerDesc,
            out ID3D11SamplerState ppSamplerState
        ){
            var fp = GetFunctionPointer(23);
            if(m_CreateSamplerStateFunc==null) m_CreateSamplerStateFunc = (CreateSamplerStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateSamplerStateFunc));
            ppSamplerState = new ID3D11SamplerState();
            return m_CreateSamplerStateFunc(m_ptr, ref pSamplerDesc, out ppSamplerState.PtrForNew);
        }
        delegate int CreateSamplerStateFunc(IntPtr self, ref D3D11_SAMPLER_DESC pSamplerDesc, out IntPtr ppSamplerState);
        CreateSamplerStateFunc m_CreateSamplerStateFunc;

        public virtual int CreateQuery(
            ref D3D11_QUERY_DESC pQueryDesc,
            out ID3D11Query ppQuery
        ){
            var fp = GetFunctionPointer(24);
            if(m_CreateQueryFunc==null) m_CreateQueryFunc = (CreateQueryFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateQueryFunc));
            ppQuery = new ID3D11Query();
            return m_CreateQueryFunc(m_ptr, ref pQueryDesc, out ppQuery.PtrForNew);
        }
        delegate int CreateQueryFunc(IntPtr self, ref D3D11_QUERY_DESC pQueryDesc, out IntPtr ppQuery);
        CreateQueryFunc m_CreateQueryFunc;

        public virtual int CreatePredicate(
            ref D3D11_QUERY_DESC pPredicateDesc,
            out ID3D11Predicate ppPredicate
        ){
            var fp = GetFunctionPointer(25);
            if(m_CreatePredicateFunc==null) m_CreatePredicateFunc = (CreatePredicateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreatePredicateFunc));
            ppPredicate = new ID3D11Predicate();
            return m_CreatePredicateFunc(m_ptr, ref pPredicateDesc, out ppPredicate.PtrForNew);
        }
        delegate int CreatePredicateFunc(IntPtr self, ref D3D11_QUERY_DESC pPredicateDesc, out IntPtr ppPredicate);
        CreatePredicateFunc m_CreatePredicateFunc;

        public virtual int CreateCounter(
            ref D3D11_COUNTER_DESC pCounterDesc,
            out ID3D11Counter ppCounter
        ){
            var fp = GetFunctionPointer(26);
            if(m_CreateCounterFunc==null) m_CreateCounterFunc = (CreateCounterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateCounterFunc));
            ppCounter = new ID3D11Counter();
            return m_CreateCounterFunc(m_ptr, ref pCounterDesc, out ppCounter.PtrForNew);
        }
        delegate int CreateCounterFunc(IntPtr self, ref D3D11_COUNTER_DESC pCounterDesc, out IntPtr ppCounter);
        CreateCounterFunc m_CreateCounterFunc;

        public virtual int CreateDeferredContext(
            uint ContextFlags,
            out ID3D11DeviceContext ppDeferredContext
        ){
            var fp = GetFunctionPointer(27);
            if(m_CreateDeferredContextFunc==null) m_CreateDeferredContextFunc = (CreateDeferredContextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDeferredContextFunc));
            ppDeferredContext = new ID3D11DeviceContext();
            return m_CreateDeferredContextFunc(m_ptr, ContextFlags, out ppDeferredContext.PtrForNew);
        }
        delegate int CreateDeferredContextFunc(IntPtr self, uint ContextFlags, out IntPtr ppDeferredContext);
        CreateDeferredContextFunc m_CreateDeferredContextFunc;

        public virtual int OpenSharedResource(
            IntPtr hResource,
            ref Guid ReturnedInterface,
            out IntPtr ppResource
        ){
            var fp = GetFunctionPointer(28);
            if(m_OpenSharedResourceFunc==null) m_OpenSharedResourceFunc = (OpenSharedResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OpenSharedResourceFunc));
            
            return m_OpenSharedResourceFunc(m_ptr, hResource, ref ReturnedInterface, out ppResource);
        }
        delegate int OpenSharedResourceFunc(IntPtr self, IntPtr hResource, ref Guid ReturnedInterface, out IntPtr ppResource);
        OpenSharedResourceFunc m_OpenSharedResourceFunc;

        public virtual int CheckFormatSupport(
            DXGI_FORMAT Format,
            out uint pFormatSupport
        ){
            var fp = GetFunctionPointer(29);
            if(m_CheckFormatSupportFunc==null) m_CheckFormatSupportFunc = (CheckFormatSupportFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckFormatSupportFunc));
            
            return m_CheckFormatSupportFunc(m_ptr, Format, out pFormatSupport);
        }
        delegate int CheckFormatSupportFunc(IntPtr self, DXGI_FORMAT Format, out uint pFormatSupport);
        CheckFormatSupportFunc m_CheckFormatSupportFunc;

        public virtual int CheckMultisampleQualityLevels(
            DXGI_FORMAT Format,
            uint SampleCount,
            out uint pNumQualityLevels
        ){
            var fp = GetFunctionPointer(30);
            if(m_CheckMultisampleQualityLevelsFunc==null) m_CheckMultisampleQualityLevelsFunc = (CheckMultisampleQualityLevelsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckMultisampleQualityLevelsFunc));
            
            return m_CheckMultisampleQualityLevelsFunc(m_ptr, Format, SampleCount, out pNumQualityLevels);
        }
        delegate int CheckMultisampleQualityLevelsFunc(IntPtr self, DXGI_FORMAT Format, uint SampleCount, out uint pNumQualityLevels);
        CheckMultisampleQualityLevelsFunc m_CheckMultisampleQualityLevelsFunc;

        public virtual void CheckCounterInfo(
            out D3D11_COUNTER_INFO pCounterInfo
        ){
            var fp = GetFunctionPointer(31);
            if(m_CheckCounterInfoFunc==null) m_CheckCounterInfoFunc = (CheckCounterInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckCounterInfoFunc));
            
            m_CheckCounterInfoFunc(m_ptr, out pCounterInfo);
        }
        delegate void CheckCounterInfoFunc(IntPtr self, out D3D11_COUNTER_INFO pCounterInfo);
        CheckCounterInfoFunc m_CheckCounterInfoFunc;

        public virtual int CheckCounter(
            ref D3D11_COUNTER_DESC pDesc,
            out D3D11_COUNTER_TYPE pType,
            out uint pActiveCounters,
            out sbyte szName,
            out uint pNameLength,
            out sbyte szUnits,
            out uint pUnitsLength,
            out sbyte szDescription,
            out uint pDescriptionLength
        ){
            var fp = GetFunctionPointer(32);
            if(m_CheckCounterFunc==null) m_CheckCounterFunc = (CheckCounterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckCounterFunc));
            
            return m_CheckCounterFunc(m_ptr, ref pDesc, out pType, out pActiveCounters, out szName, out pNameLength, out szUnits, out pUnitsLength, out szDescription, out pDescriptionLength);
        }
        delegate int CheckCounterFunc(IntPtr self, ref D3D11_COUNTER_DESC pDesc, out D3D11_COUNTER_TYPE pType, out uint pActiveCounters, out sbyte szName, out uint pNameLength, out sbyte szUnits, out uint pUnitsLength, out sbyte szDescription, out uint pDescriptionLength);
        CheckCounterFunc m_CheckCounterFunc;

        public virtual int CheckFeatureSupport(
            D3D11_FEATURE Feature,
            IntPtr pFeatureSupportData,
            uint FeatureSupportDataSize
        ){
            var fp = GetFunctionPointer(33);
            if(m_CheckFeatureSupportFunc==null) m_CheckFeatureSupportFunc = (CheckFeatureSupportFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckFeatureSupportFunc));
            
            return m_CheckFeatureSupportFunc(m_ptr, Feature, pFeatureSupportData, FeatureSupportDataSize);
        }
        delegate int CheckFeatureSupportFunc(IntPtr self, D3D11_FEATURE Feature, IntPtr pFeatureSupportData, uint FeatureSupportDataSize);
        CheckFeatureSupportFunc m_CheckFeatureSupportFunc;

        public virtual int GetPrivateData(
            ref Guid guid,
            out uint pDataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(34);
            if(m_GetPrivateDataFunc==null) m_GetPrivateDataFunc = (GetPrivateDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPrivateDataFunc));
            
            return m_GetPrivateDataFunc(m_ptr, ref guid, out pDataSize, pData);
        }
        delegate int GetPrivateDataFunc(IntPtr self, ref Guid guid, out uint pDataSize, IntPtr pData);
        GetPrivateDataFunc m_GetPrivateDataFunc;

        public virtual int SetPrivateData(
            ref Guid guid,
            uint DataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(35);
            if(m_SetPrivateDataFunc==null) m_SetPrivateDataFunc = (SetPrivateDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPrivateDataFunc));
            
            return m_SetPrivateDataFunc(m_ptr, ref guid, DataSize, pData);
        }
        delegate int SetPrivateDataFunc(IntPtr self, ref Guid guid, uint DataSize, IntPtr pData);
        SetPrivateDataFunc m_SetPrivateDataFunc;

        public virtual int SetPrivateDataInterface(
            ref Guid guid,
            IUnknown pData
        ){
            var fp = GetFunctionPointer(36);
            if(m_SetPrivateDataInterfaceFunc==null) m_SetPrivateDataInterfaceFunc = (SetPrivateDataInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPrivateDataInterfaceFunc));
            
            return m_SetPrivateDataInterfaceFunc(m_ptr, ref guid, pData!=null ? pData.Ptr : IntPtr.Zero);
        }
        delegate int SetPrivateDataInterfaceFunc(IntPtr self, ref Guid guid, IntPtr pData);
        SetPrivateDataInterfaceFunc m_SetPrivateDataInterfaceFunc;

        public virtual D3D_FEATURE_LEVEL GetFeatureLevel(
        ){
            var fp = GetFunctionPointer(37);
            if(m_GetFeatureLevelFunc==null) m_GetFeatureLevelFunc = (GetFeatureLevelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFeatureLevelFunc));
            
            return m_GetFeatureLevelFunc(m_ptr);
        }
        delegate D3D_FEATURE_LEVEL GetFeatureLevelFunc(IntPtr self);
        GetFeatureLevelFunc m_GetFeatureLevelFunc;

        public virtual uint GetCreationFlags(
        ){
            var fp = GetFunctionPointer(38);
            if(m_GetCreationFlagsFunc==null) m_GetCreationFlagsFunc = (GetCreationFlagsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCreationFlagsFunc));
            
            return m_GetCreationFlagsFunc(m_ptr);
        }
        delegate uint GetCreationFlagsFunc(IntPtr self);
        GetCreationFlagsFunc m_GetCreationFlagsFunc;

        public virtual int GetDeviceRemovedReason(
        ){
            var fp = GetFunctionPointer(39);
            if(m_GetDeviceRemovedReasonFunc==null) m_GetDeviceRemovedReasonFunc = (GetDeviceRemovedReasonFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDeviceRemovedReasonFunc));
            
            return m_GetDeviceRemovedReasonFunc(m_ptr);
        }
        delegate int GetDeviceRemovedReasonFunc(IntPtr self);
        GetDeviceRemovedReasonFunc m_GetDeviceRemovedReasonFunc;

        public virtual void GetImmediateContext(
            out ID3D11DeviceContext ppImmediateContext
        ){
            var fp = GetFunctionPointer(40);
            if(m_GetImmediateContextFunc==null) m_GetImmediateContextFunc = (GetImmediateContextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetImmediateContextFunc));
            ppImmediateContext = new ID3D11DeviceContext();
            m_GetImmediateContextFunc(m_ptr, out ppImmediateContext.PtrForNew);
        }
        delegate void GetImmediateContextFunc(IntPtr self, out IntPtr ppImmediateContext);
        GetImmediateContextFunc m_GetImmediateContextFunc;

        public virtual int SetExceptionMode(
            uint RaiseFlags
        ){
            var fp = GetFunctionPointer(41);
            if(m_SetExceptionModeFunc==null) m_SetExceptionModeFunc = (SetExceptionModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetExceptionModeFunc));
            
            return m_SetExceptionModeFunc(m_ptr, RaiseFlags);
        }
        delegate int SetExceptionModeFunc(IntPtr self, uint RaiseFlags);
        SetExceptionModeFunc m_SetExceptionModeFunc;

        public virtual uint GetExceptionMode(
        ){
            var fp = GetFunctionPointer(42);
            if(m_GetExceptionModeFunc==null) m_GetExceptionModeFunc = (GetExceptionModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetExceptionModeFunc));
            
            return m_GetExceptionModeFunc(m_ptr);
        }
        delegate uint GetExceptionModeFunc(IntPtr self);
        GetExceptionModeFunc m_GetExceptionModeFunc;

    }
}
