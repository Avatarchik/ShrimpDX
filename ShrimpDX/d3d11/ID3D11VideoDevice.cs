// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D11VideoDevice: IUnknown
    {
        static Guid s_uuid = new Guid("10ec4d5b-975a-4689-b9e4-d0aac30fe333");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int CreateVideoDecoder(
            ref D3D11_VIDEO_DECODER_DESC pVideoDesc,
            ref D3D11_VIDEO_DECODER_CONFIG pConfig,
            out ID3D11VideoDecoder ppDecoder
        ){
            var fp = GetFunctionPointer(3);
            if(m_CreateVideoDecoderFunc==null) m_CreateVideoDecoderFunc = (CreateVideoDecoderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoDecoderFunc));
            ppDecoder = new ID3D11VideoDecoder();
            return m_CreateVideoDecoderFunc(m_ptr, ref pVideoDesc, ref pConfig, out ppDecoder.PtrForNew);
        }
        delegate int CreateVideoDecoderFunc(IntPtr self, ref D3D11_VIDEO_DECODER_DESC pVideoDesc, ref D3D11_VIDEO_DECODER_CONFIG pConfig, out IntPtr ppDecoder);
        CreateVideoDecoderFunc m_CreateVideoDecoderFunc;

        public virtual int CreateVideoProcessor(
            ID3D11VideoProcessorEnumerator pEnum,
            uint RateConversionIndex,
            out ID3D11VideoProcessor ppVideoProcessor
        ){
            var fp = GetFunctionPointer(4);
            if(m_CreateVideoProcessorFunc==null) m_CreateVideoProcessorFunc = (CreateVideoProcessorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoProcessorFunc));
            ppVideoProcessor = new ID3D11VideoProcessor();
            return m_CreateVideoProcessorFunc(m_ptr, pEnum!=null ? pEnum.Ptr : IntPtr.Zero, RateConversionIndex, out ppVideoProcessor.PtrForNew);
        }
        delegate int CreateVideoProcessorFunc(IntPtr self, IntPtr pEnum, uint RateConversionIndex, out IntPtr ppVideoProcessor);
        CreateVideoProcessorFunc m_CreateVideoProcessorFunc;

        public virtual int CreateAuthenticatedChannel(
            D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType,
            out ID3D11AuthenticatedChannel ppAuthenticatedChannel
        ){
            var fp = GetFunctionPointer(5);
            if(m_CreateAuthenticatedChannelFunc==null) m_CreateAuthenticatedChannelFunc = (CreateAuthenticatedChannelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateAuthenticatedChannelFunc));
            ppAuthenticatedChannel = new ID3D11AuthenticatedChannel();
            return m_CreateAuthenticatedChannelFunc(m_ptr, ChannelType, out ppAuthenticatedChannel.PtrForNew);
        }
        delegate int CreateAuthenticatedChannelFunc(IntPtr self, D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType, out IntPtr ppAuthenticatedChannel);
        CreateAuthenticatedChannelFunc m_CreateAuthenticatedChannelFunc;

        public virtual int CreateCryptoSession(
            ref Guid pCryptoType,
            ref Guid pDecoderProfile,
            ref Guid pKeyExchangeType,
            out ID3D11CryptoSession ppCryptoSession
        ){
            var fp = GetFunctionPointer(6);
            if(m_CreateCryptoSessionFunc==null) m_CreateCryptoSessionFunc = (CreateCryptoSessionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateCryptoSessionFunc));
            ppCryptoSession = new ID3D11CryptoSession();
            return m_CreateCryptoSessionFunc(m_ptr, ref pCryptoType, ref pDecoderProfile, ref pKeyExchangeType, out ppCryptoSession.PtrForNew);
        }
        delegate int CreateCryptoSessionFunc(IntPtr self, ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, out IntPtr ppCryptoSession);
        CreateCryptoSessionFunc m_CreateCryptoSessionFunc;

        public virtual int CreateVideoDecoderOutputView(
            ID3D11Resource pResource,
            ref D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC pDesc,
            out ID3D11VideoDecoderOutputView ppVDOVView
        ){
            var fp = GetFunctionPointer(7);
            if(m_CreateVideoDecoderOutputViewFunc==null) m_CreateVideoDecoderOutputViewFunc = (CreateVideoDecoderOutputViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoDecoderOutputViewFunc));
            ppVDOVView = new ID3D11VideoDecoderOutputView();
            return m_CreateVideoDecoderOutputViewFunc(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero, ref pDesc, out ppVDOVView.PtrForNew);
        }
        delegate int CreateVideoDecoderOutputViewFunc(IntPtr self, IntPtr pResource, ref D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC pDesc, out IntPtr ppVDOVView);
        CreateVideoDecoderOutputViewFunc m_CreateVideoDecoderOutputViewFunc;

        public virtual int CreateVideoProcessorInputView(
            ID3D11Resource pResource,
            ID3D11VideoProcessorEnumerator pEnum,
            ref D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC pDesc,
            out ID3D11VideoProcessorInputView ppVPIView
        ){
            var fp = GetFunctionPointer(8);
            if(m_CreateVideoProcessorInputViewFunc==null) m_CreateVideoProcessorInputViewFunc = (CreateVideoProcessorInputViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoProcessorInputViewFunc));
            ppVPIView = new ID3D11VideoProcessorInputView();
            return m_CreateVideoProcessorInputViewFunc(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero, pEnum!=null ? pEnum.Ptr : IntPtr.Zero, ref pDesc, out ppVPIView.PtrForNew);
        }
        delegate int CreateVideoProcessorInputViewFunc(IntPtr self, IntPtr pResource, IntPtr pEnum, ref D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC pDesc, out IntPtr ppVPIView);
        CreateVideoProcessorInputViewFunc m_CreateVideoProcessorInputViewFunc;

        public virtual int CreateVideoProcessorOutputView(
            ID3D11Resource pResource,
            ID3D11VideoProcessorEnumerator pEnum,
            ref D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC pDesc,
            out ID3D11VideoProcessorOutputView ppVPOView
        ){
            var fp = GetFunctionPointer(9);
            if(m_CreateVideoProcessorOutputViewFunc==null) m_CreateVideoProcessorOutputViewFunc = (CreateVideoProcessorOutputViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoProcessorOutputViewFunc));
            ppVPOView = new ID3D11VideoProcessorOutputView();
            return m_CreateVideoProcessorOutputViewFunc(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero, pEnum!=null ? pEnum.Ptr : IntPtr.Zero, ref pDesc, out ppVPOView.PtrForNew);
        }
        delegate int CreateVideoProcessorOutputViewFunc(IntPtr self, IntPtr pResource, IntPtr pEnum, ref D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC pDesc, out IntPtr ppVPOView);
        CreateVideoProcessorOutputViewFunc m_CreateVideoProcessorOutputViewFunc;

        public virtual int CreateVideoProcessorEnumerator(
            ref D3D11_VIDEO_PROCESSOR_CONTENT_DESC pDesc,
            out ID3D11VideoProcessorEnumerator ppEnum
        ){
            var fp = GetFunctionPointer(10);
            if(m_CreateVideoProcessorEnumeratorFunc==null) m_CreateVideoProcessorEnumeratorFunc = (CreateVideoProcessorEnumeratorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoProcessorEnumeratorFunc));
            ppEnum = new ID3D11VideoProcessorEnumerator();
            return m_CreateVideoProcessorEnumeratorFunc(m_ptr, ref pDesc, out ppEnum.PtrForNew);
        }
        delegate int CreateVideoProcessorEnumeratorFunc(IntPtr self, ref D3D11_VIDEO_PROCESSOR_CONTENT_DESC pDesc, out IntPtr ppEnum);
        CreateVideoProcessorEnumeratorFunc m_CreateVideoProcessorEnumeratorFunc;

        public virtual uint GetVideoDecoderProfileCount(
        ){
            var fp = GetFunctionPointer(11);
            if(m_GetVideoDecoderProfileCountFunc==null) m_GetVideoDecoderProfileCountFunc = (GetVideoDecoderProfileCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVideoDecoderProfileCountFunc));
            
            return m_GetVideoDecoderProfileCountFunc(m_ptr);
        }
        delegate uint GetVideoDecoderProfileCountFunc(IntPtr self);
        GetVideoDecoderProfileCountFunc m_GetVideoDecoderProfileCountFunc;

        public virtual int GetVideoDecoderProfile(
            uint Index,
            out Guid pDecoderProfile
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetVideoDecoderProfileFunc==null) m_GetVideoDecoderProfileFunc = (GetVideoDecoderProfileFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVideoDecoderProfileFunc));
            
            return m_GetVideoDecoderProfileFunc(m_ptr, Index, out pDecoderProfile);
        }
        delegate int GetVideoDecoderProfileFunc(IntPtr self, uint Index, out Guid pDecoderProfile);
        GetVideoDecoderProfileFunc m_GetVideoDecoderProfileFunc;

        public virtual int CheckVideoDecoderFormat(
            ref Guid pDecoderProfile,
            DXGI_FORMAT Format,
            out int pSupported
        ){
            var fp = GetFunctionPointer(13);
            if(m_CheckVideoDecoderFormatFunc==null) m_CheckVideoDecoderFormatFunc = (CheckVideoDecoderFormatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckVideoDecoderFormatFunc));
            
            return m_CheckVideoDecoderFormatFunc(m_ptr, ref pDecoderProfile, Format, out pSupported);
        }
        delegate int CheckVideoDecoderFormatFunc(IntPtr self, ref Guid pDecoderProfile, DXGI_FORMAT Format, out int pSupported);
        CheckVideoDecoderFormatFunc m_CheckVideoDecoderFormatFunc;

        public virtual int GetVideoDecoderConfigCount(
            ref D3D11_VIDEO_DECODER_DESC pDesc,
            out uint pCount
        ){
            var fp = GetFunctionPointer(14);
            if(m_GetVideoDecoderConfigCountFunc==null) m_GetVideoDecoderConfigCountFunc = (GetVideoDecoderConfigCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVideoDecoderConfigCountFunc));
            
            return m_GetVideoDecoderConfigCountFunc(m_ptr, ref pDesc, out pCount);
        }
        delegate int GetVideoDecoderConfigCountFunc(IntPtr self, ref D3D11_VIDEO_DECODER_DESC pDesc, out uint pCount);
        GetVideoDecoderConfigCountFunc m_GetVideoDecoderConfigCountFunc;

        public virtual int GetVideoDecoderConfig(
            ref D3D11_VIDEO_DECODER_DESC pDesc,
            uint Index,
            out D3D11_VIDEO_DECODER_CONFIG pConfig
        ){
            var fp = GetFunctionPointer(15);
            if(m_GetVideoDecoderConfigFunc==null) m_GetVideoDecoderConfigFunc = (GetVideoDecoderConfigFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVideoDecoderConfigFunc));
            
            return m_GetVideoDecoderConfigFunc(m_ptr, ref pDesc, Index, out pConfig);
        }
        delegate int GetVideoDecoderConfigFunc(IntPtr self, ref D3D11_VIDEO_DECODER_DESC pDesc, uint Index, out D3D11_VIDEO_DECODER_CONFIG pConfig);
        GetVideoDecoderConfigFunc m_GetVideoDecoderConfigFunc;

        public virtual int GetContentProtectionCaps(
            ref Guid pCryptoType,
            ref Guid pDecoderProfile,
            out D3D11_VIDEO_CONTENT_PROTECTION_CAPS pCaps
        ){
            var fp = GetFunctionPointer(16);
            if(m_GetContentProtectionCapsFunc==null) m_GetContentProtectionCapsFunc = (GetContentProtectionCapsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetContentProtectionCapsFunc));
            
            return m_GetContentProtectionCapsFunc(m_ptr, ref pCryptoType, ref pDecoderProfile, out pCaps);
        }
        delegate int GetContentProtectionCapsFunc(IntPtr self, ref Guid pCryptoType, ref Guid pDecoderProfile, out D3D11_VIDEO_CONTENT_PROTECTION_CAPS pCaps);
        GetContentProtectionCapsFunc m_GetContentProtectionCapsFunc;

        public virtual int CheckCryptoKeyExchange(
            ref Guid pCryptoType,
            ref Guid pDecoderProfile,
            uint Index,
            out Guid pKeyExchangeType
        ){
            var fp = GetFunctionPointer(17);
            if(m_CheckCryptoKeyExchangeFunc==null) m_CheckCryptoKeyExchangeFunc = (CheckCryptoKeyExchangeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckCryptoKeyExchangeFunc));
            
            return m_CheckCryptoKeyExchangeFunc(m_ptr, ref pCryptoType, ref pDecoderProfile, Index, out pKeyExchangeType);
        }
        delegate int CheckCryptoKeyExchangeFunc(IntPtr self, ref Guid pCryptoType, ref Guid pDecoderProfile, uint Index, out Guid pKeyExchangeType);
        CheckCryptoKeyExchangeFunc m_CheckCryptoKeyExchangeFunc;

        public virtual int SetPrivateData(
            ref Guid guid,
            uint DataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(18);
            if(m_SetPrivateDataFunc==null) m_SetPrivateDataFunc = (SetPrivateDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPrivateDataFunc));
            
            return m_SetPrivateDataFunc(m_ptr, ref guid, DataSize, pData);
        }
        delegate int SetPrivateDataFunc(IntPtr self, ref Guid guid, uint DataSize, IntPtr pData);
        SetPrivateDataFunc m_SetPrivateDataFunc;

        public virtual int SetPrivateDataInterface(
            ref Guid guid,
            IUnknown pData
        ){
            var fp = GetFunctionPointer(19);
            if(m_SetPrivateDataInterfaceFunc==null) m_SetPrivateDataInterfaceFunc = (SetPrivateDataInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPrivateDataInterfaceFunc));
            
            return m_SetPrivateDataInterfaceFunc(m_ptr, ref guid, pData!=null ? pData.Ptr : IntPtr.Zero);
        }
        delegate int SetPrivateDataInterfaceFunc(IntPtr self, ref Guid guid, IntPtr pData);
        SetPrivateDataInterfaceFunc m_SetPrivateDataInterfaceFunc;

    }
}
