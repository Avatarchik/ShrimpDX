// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D11ClassInstance: ID3D11DeviceChild
    {
        static Guid s_uuid = new Guid("a6cd7faa-b0b7-4a2f-9436-8662a65797cb");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual void GetClassLinkage(
            out ID3D11ClassLinkage ppLinkage
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetClassLinkageFunc==null) m_GetClassLinkageFunc = (GetClassLinkageFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetClassLinkageFunc));
            ppLinkage = new ID3D11ClassLinkage();
            m_GetClassLinkageFunc(m_ptr, out ppLinkage.PtrForNew);
        }
        delegate void GetClassLinkageFunc(IntPtr self, out IntPtr ppLinkage);
        GetClassLinkageFunc m_GetClassLinkageFunc;

        public virtual void GetDesc(
            out D3D11_CLASS_INSTANCE_DESC pDesc
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetDescFunc==null) m_GetDescFunc = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            m_GetDescFunc(m_ptr, out pDesc);
        }
        delegate void GetDescFunc(IntPtr self, out D3D11_CLASS_INSTANCE_DESC pDesc);
        GetDescFunc m_GetDescFunc;

        public virtual void GetInstanceName(
            out sbyte pInstanceName,
            out ulong pBufferLength
        ){
            var fp = GetFunctionPointer(9);
            if(m_GetInstanceNameFunc==null) m_GetInstanceNameFunc = (GetInstanceNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetInstanceNameFunc));
            
            m_GetInstanceNameFunc(m_ptr, out pInstanceName, out pBufferLength);
        }
        delegate void GetInstanceNameFunc(IntPtr self, out sbyte pInstanceName, out ulong pBufferLength);
        GetInstanceNameFunc m_GetInstanceNameFunc;

        public virtual void GetTypeName(
            out sbyte pTypeName,
            out ulong pBufferLength
        ){
            var fp = GetFunctionPointer(10);
            if(m_GetTypeNameFunc==null) m_GetTypeNameFunc = (GetTypeNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeNameFunc));
            
            m_GetTypeNameFunc(m_ptr, out pTypeName, out pBufferLength);
        }
        delegate void GetTypeNameFunc(IntPtr self, out sbyte pTypeName, out ulong pBufferLength);
        GetTypeNameFunc m_GetTypeNameFunc;

    }
}
