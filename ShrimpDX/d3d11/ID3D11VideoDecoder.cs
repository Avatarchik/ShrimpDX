// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D11VideoDecoder: ID3D11DeviceChild
    {
        static Guid s_uuid = new Guid("3c9c5b51-995d-48d1-9b8d-fa5caeded65c");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int GetCreationParameters(
            out D3D11_VIDEO_DECODER_DESC pVideoDesc,
            out D3D11_VIDEO_DECODER_CONFIG pConfig
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetCreationParametersFunc==null) m_GetCreationParametersFunc = (GetCreationParametersFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCreationParametersFunc));
            
            return m_GetCreationParametersFunc(m_ptr, out pVideoDesc, out pConfig);
        }
        delegate int GetCreationParametersFunc(IntPtr self, out D3D11_VIDEO_DECODER_DESC pVideoDesc, out D3D11_VIDEO_DECODER_CONFIG pConfig);
        GetCreationParametersFunc m_GetCreationParametersFunc;

        public virtual int GetDriverHandle(
            out IntPtr pDriverHandle
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetDriverHandleFunc==null) m_GetDriverHandleFunc = (GetDriverHandleFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDriverHandleFunc));
            
            return m_GetDriverHandleFunc(m_ptr, out pDriverHandle);
        }
        delegate int GetDriverHandleFunc(IntPtr self, out IntPtr pDriverHandle);
        GetDriverHandleFunc m_GetDriverHandleFunc;

    }
}
