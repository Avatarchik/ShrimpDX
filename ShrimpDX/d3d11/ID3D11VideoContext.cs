// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D11VideoContext: ID3D11DeviceChild
    {
        static Guid s_uuid = new Guid("61f21c45-3c0e-4a74-9cea-67100d9ad5e4");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int GetDecoderBuffer(
            ID3D11VideoDecoder pDecoder,
            D3D11_VIDEO_DECODER_BUFFER_TYPE Type,
            out uint pBufferSize,
            out IntPtr ppBuffer
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetDecoderBufferFunc==null) m_GetDecoderBufferFunc = (GetDecoderBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDecoderBufferFunc));
            
            return m_GetDecoderBufferFunc(m_ptr, pDecoder!=null ? pDecoder.Ptr : IntPtr.Zero, Type, out pBufferSize, out ppBuffer);
        }
        delegate int GetDecoderBufferFunc(IntPtr self, IntPtr pDecoder, D3D11_VIDEO_DECODER_BUFFER_TYPE Type, out uint pBufferSize, out IntPtr ppBuffer);
        GetDecoderBufferFunc m_GetDecoderBufferFunc;

        public virtual int ReleaseDecoderBuffer(
            ID3D11VideoDecoder pDecoder,
            D3D11_VIDEO_DECODER_BUFFER_TYPE Type
        ){
            var fp = GetFunctionPointer(8);
            if(m_ReleaseDecoderBufferFunc==null) m_ReleaseDecoderBufferFunc = (ReleaseDecoderBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ReleaseDecoderBufferFunc));
            
            return m_ReleaseDecoderBufferFunc(m_ptr, pDecoder!=null ? pDecoder.Ptr : IntPtr.Zero, Type);
        }
        delegate int ReleaseDecoderBufferFunc(IntPtr self, IntPtr pDecoder, D3D11_VIDEO_DECODER_BUFFER_TYPE Type);
        ReleaseDecoderBufferFunc m_ReleaseDecoderBufferFunc;

        public virtual int DecoderBeginFrame(
            ID3D11VideoDecoder pDecoder,
            ID3D11VideoDecoderOutputView pView,
            uint ContentKeySize,
            IntPtr pContentKey
        ){
            var fp = GetFunctionPointer(9);
            if(m_DecoderBeginFrameFunc==null) m_DecoderBeginFrameFunc = (DecoderBeginFrameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DecoderBeginFrameFunc));
            
            return m_DecoderBeginFrameFunc(m_ptr, pDecoder!=null ? pDecoder.Ptr : IntPtr.Zero, pView!=null ? pView.Ptr : IntPtr.Zero, ContentKeySize, pContentKey);
        }
        delegate int DecoderBeginFrameFunc(IntPtr self, IntPtr pDecoder, IntPtr pView, uint ContentKeySize, IntPtr pContentKey);
        DecoderBeginFrameFunc m_DecoderBeginFrameFunc;

        public virtual int DecoderEndFrame(
            ID3D11VideoDecoder pDecoder
        ){
            var fp = GetFunctionPointer(10);
            if(m_DecoderEndFrameFunc==null) m_DecoderEndFrameFunc = (DecoderEndFrameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DecoderEndFrameFunc));
            
            return m_DecoderEndFrameFunc(m_ptr, pDecoder!=null ? pDecoder.Ptr : IntPtr.Zero);
        }
        delegate int DecoderEndFrameFunc(IntPtr self, IntPtr pDecoder);
        DecoderEndFrameFunc m_DecoderEndFrameFunc;

        public virtual int SubmitDecoderBuffers(
            ID3D11VideoDecoder pDecoder,
            uint NumBuffers,
            ref D3D11_VIDEO_DECODER_BUFFER_DESC pBufferDesc
        ){
            var fp = GetFunctionPointer(11);
            if(m_SubmitDecoderBuffersFunc==null) m_SubmitDecoderBuffersFunc = (SubmitDecoderBuffersFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SubmitDecoderBuffersFunc));
            
            return m_SubmitDecoderBuffersFunc(m_ptr, pDecoder!=null ? pDecoder.Ptr : IntPtr.Zero, NumBuffers, ref pBufferDesc);
        }
        delegate int SubmitDecoderBuffersFunc(IntPtr self, IntPtr pDecoder, uint NumBuffers, ref D3D11_VIDEO_DECODER_BUFFER_DESC pBufferDesc);
        SubmitDecoderBuffersFunc m_SubmitDecoderBuffersFunc;

        public virtual int DecoderExtension(
            ID3D11VideoDecoder pDecoder,
            ref D3D11_VIDEO_DECODER_EXTENSION pExtensionData
        ){
            var fp = GetFunctionPointer(12);
            if(m_DecoderExtensionFunc==null) m_DecoderExtensionFunc = (DecoderExtensionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DecoderExtensionFunc));
            
            return m_DecoderExtensionFunc(m_ptr, pDecoder!=null ? pDecoder.Ptr : IntPtr.Zero, ref pExtensionData);
        }
        delegate int DecoderExtensionFunc(IntPtr self, IntPtr pDecoder, ref D3D11_VIDEO_DECODER_EXTENSION pExtensionData);
        DecoderExtensionFunc m_DecoderExtensionFunc;

        public virtual void VideoProcessorSetOutputTargetRect(
            ID3D11VideoProcessor pVideoProcessor,
            int Enable,
            ref tagRECT pRect
        ){
            var fp = GetFunctionPointer(13);
            if(m_VideoProcessorSetOutputTargetRectFunc==null) m_VideoProcessorSetOutputTargetRectFunc = (VideoProcessorSetOutputTargetRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetOutputTargetRectFunc));
            
            m_VideoProcessorSetOutputTargetRectFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, Enable, ref pRect);
        }
        delegate void VideoProcessorSetOutputTargetRectFunc(IntPtr self, IntPtr pVideoProcessor, int Enable, ref tagRECT pRect);
        VideoProcessorSetOutputTargetRectFunc m_VideoProcessorSetOutputTargetRectFunc;

        public virtual void VideoProcessorSetOutputBackgroundColor(
            ID3D11VideoProcessor pVideoProcessor,
            int YCbCr,
            ref D3D11_VIDEO_COLOR pColor
        ){
            var fp = GetFunctionPointer(14);
            if(m_VideoProcessorSetOutputBackgroundColorFunc==null) m_VideoProcessorSetOutputBackgroundColorFunc = (VideoProcessorSetOutputBackgroundColorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetOutputBackgroundColorFunc));
            
            m_VideoProcessorSetOutputBackgroundColorFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, YCbCr, ref pColor);
        }
        delegate void VideoProcessorSetOutputBackgroundColorFunc(IntPtr self, IntPtr pVideoProcessor, int YCbCr, ref D3D11_VIDEO_COLOR pColor);
        VideoProcessorSetOutputBackgroundColorFunc m_VideoProcessorSetOutputBackgroundColorFunc;

        public virtual void VideoProcessorSetOutputColorSpace(
            ID3D11VideoProcessor pVideoProcessor,
            ref D3D11_VIDEO_PROCESSOR_COLOR_SPACE pColorSpace
        ){
            var fp = GetFunctionPointer(15);
            if(m_VideoProcessorSetOutputColorSpaceFunc==null) m_VideoProcessorSetOutputColorSpaceFunc = (VideoProcessorSetOutputColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetOutputColorSpaceFunc));
            
            m_VideoProcessorSetOutputColorSpaceFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, ref pColorSpace);
        }
        delegate void VideoProcessorSetOutputColorSpaceFunc(IntPtr self, IntPtr pVideoProcessor, ref D3D11_VIDEO_PROCESSOR_COLOR_SPACE pColorSpace);
        VideoProcessorSetOutputColorSpaceFunc m_VideoProcessorSetOutputColorSpaceFunc;

        public virtual void VideoProcessorSetOutputAlphaFillMode(
            ID3D11VideoProcessor pVideoProcessor,
            D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode,
            uint StreamIndex
        ){
            var fp = GetFunctionPointer(16);
            if(m_VideoProcessorSetOutputAlphaFillModeFunc==null) m_VideoProcessorSetOutputAlphaFillModeFunc = (VideoProcessorSetOutputAlphaFillModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetOutputAlphaFillModeFunc));
            
            m_VideoProcessorSetOutputAlphaFillModeFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, AlphaFillMode, StreamIndex);
        }
        delegate void VideoProcessorSetOutputAlphaFillModeFunc(IntPtr self, IntPtr pVideoProcessor, D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode, uint StreamIndex);
        VideoProcessorSetOutputAlphaFillModeFunc m_VideoProcessorSetOutputAlphaFillModeFunc;

        public virtual void VideoProcessorSetOutputConstriction(
            ID3D11VideoProcessor pVideoProcessor,
            int Enable,
            tagSIZE Size
        ){
            var fp = GetFunctionPointer(17);
            if(m_VideoProcessorSetOutputConstrictionFunc==null) m_VideoProcessorSetOutputConstrictionFunc = (VideoProcessorSetOutputConstrictionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetOutputConstrictionFunc));
            
            m_VideoProcessorSetOutputConstrictionFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, Enable, Size);
        }
        delegate void VideoProcessorSetOutputConstrictionFunc(IntPtr self, IntPtr pVideoProcessor, int Enable, tagSIZE Size);
        VideoProcessorSetOutputConstrictionFunc m_VideoProcessorSetOutputConstrictionFunc;

        public virtual void VideoProcessorSetOutputStereoMode(
            ID3D11VideoProcessor pVideoProcessor,
            int Enable
        ){
            var fp = GetFunctionPointer(18);
            if(m_VideoProcessorSetOutputStereoModeFunc==null) m_VideoProcessorSetOutputStereoModeFunc = (VideoProcessorSetOutputStereoModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetOutputStereoModeFunc));
            
            m_VideoProcessorSetOutputStereoModeFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, Enable);
        }
        delegate void VideoProcessorSetOutputStereoModeFunc(IntPtr self, IntPtr pVideoProcessor, int Enable);
        VideoProcessorSetOutputStereoModeFunc m_VideoProcessorSetOutputStereoModeFunc;

        public virtual int VideoProcessorSetOutputExtension(
            ID3D11VideoProcessor pVideoProcessor,
            ref Guid pExtensionGuid,
            uint DataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(19);
            if(m_VideoProcessorSetOutputExtensionFunc==null) m_VideoProcessorSetOutputExtensionFunc = (VideoProcessorSetOutputExtensionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetOutputExtensionFunc));
            
            return m_VideoProcessorSetOutputExtensionFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, ref pExtensionGuid, DataSize, pData);
        }
        delegate int VideoProcessorSetOutputExtensionFunc(IntPtr self, IntPtr pVideoProcessor, ref Guid pExtensionGuid, uint DataSize, IntPtr pData);
        VideoProcessorSetOutputExtensionFunc m_VideoProcessorSetOutputExtensionFunc;

        public virtual void VideoProcessorGetOutputTargetRect(
            ID3D11VideoProcessor pVideoProcessor,
            out int Enabled,
            out tagRECT pRect
        ){
            var fp = GetFunctionPointer(20);
            if(m_VideoProcessorGetOutputTargetRectFunc==null) m_VideoProcessorGetOutputTargetRectFunc = (VideoProcessorGetOutputTargetRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetOutputTargetRectFunc));
            
            m_VideoProcessorGetOutputTargetRectFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, out Enabled, out pRect);
        }
        delegate void VideoProcessorGetOutputTargetRectFunc(IntPtr self, IntPtr pVideoProcessor, out int Enabled, out tagRECT pRect);
        VideoProcessorGetOutputTargetRectFunc m_VideoProcessorGetOutputTargetRectFunc;

        public virtual void VideoProcessorGetOutputBackgroundColor(
            ID3D11VideoProcessor pVideoProcessor,
            out int pYCbCr,
            out D3D11_VIDEO_COLOR pColor
        ){
            var fp = GetFunctionPointer(21);
            if(m_VideoProcessorGetOutputBackgroundColorFunc==null) m_VideoProcessorGetOutputBackgroundColorFunc = (VideoProcessorGetOutputBackgroundColorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetOutputBackgroundColorFunc));
            
            m_VideoProcessorGetOutputBackgroundColorFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, out pYCbCr, out pColor);
        }
        delegate void VideoProcessorGetOutputBackgroundColorFunc(IntPtr self, IntPtr pVideoProcessor, out int pYCbCr, out D3D11_VIDEO_COLOR pColor);
        VideoProcessorGetOutputBackgroundColorFunc m_VideoProcessorGetOutputBackgroundColorFunc;

        public virtual void VideoProcessorGetOutputColorSpace(
            ID3D11VideoProcessor pVideoProcessor,
            out D3D11_VIDEO_PROCESSOR_COLOR_SPACE pColorSpace
        ){
            var fp = GetFunctionPointer(22);
            if(m_VideoProcessorGetOutputColorSpaceFunc==null) m_VideoProcessorGetOutputColorSpaceFunc = (VideoProcessorGetOutputColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetOutputColorSpaceFunc));
            
            m_VideoProcessorGetOutputColorSpaceFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, out pColorSpace);
        }
        delegate void VideoProcessorGetOutputColorSpaceFunc(IntPtr self, IntPtr pVideoProcessor, out D3D11_VIDEO_PROCESSOR_COLOR_SPACE pColorSpace);
        VideoProcessorGetOutputColorSpaceFunc m_VideoProcessorGetOutputColorSpaceFunc;

        public virtual void VideoProcessorGetOutputAlphaFillMode(
            ID3D11VideoProcessor pVideoProcessor,
            out D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE pAlphaFillMode,
            out uint pStreamIndex
        ){
            var fp = GetFunctionPointer(23);
            if(m_VideoProcessorGetOutputAlphaFillModeFunc==null) m_VideoProcessorGetOutputAlphaFillModeFunc = (VideoProcessorGetOutputAlphaFillModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetOutputAlphaFillModeFunc));
            
            m_VideoProcessorGetOutputAlphaFillModeFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, out pAlphaFillMode, out pStreamIndex);
        }
        delegate void VideoProcessorGetOutputAlphaFillModeFunc(IntPtr self, IntPtr pVideoProcessor, out D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE pAlphaFillMode, out uint pStreamIndex);
        VideoProcessorGetOutputAlphaFillModeFunc m_VideoProcessorGetOutputAlphaFillModeFunc;

        public virtual void VideoProcessorGetOutputConstriction(
            ID3D11VideoProcessor pVideoProcessor,
            out int pEnabled,
            out tagSIZE pSize
        ){
            var fp = GetFunctionPointer(24);
            if(m_VideoProcessorGetOutputConstrictionFunc==null) m_VideoProcessorGetOutputConstrictionFunc = (VideoProcessorGetOutputConstrictionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetOutputConstrictionFunc));
            
            m_VideoProcessorGetOutputConstrictionFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, out pEnabled, out pSize);
        }
        delegate void VideoProcessorGetOutputConstrictionFunc(IntPtr self, IntPtr pVideoProcessor, out int pEnabled, out tagSIZE pSize);
        VideoProcessorGetOutputConstrictionFunc m_VideoProcessorGetOutputConstrictionFunc;

        public virtual void VideoProcessorGetOutputStereoMode(
            ID3D11VideoProcessor pVideoProcessor,
            out int pEnabled
        ){
            var fp = GetFunctionPointer(25);
            if(m_VideoProcessorGetOutputStereoModeFunc==null) m_VideoProcessorGetOutputStereoModeFunc = (VideoProcessorGetOutputStereoModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetOutputStereoModeFunc));
            
            m_VideoProcessorGetOutputStereoModeFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, out pEnabled);
        }
        delegate void VideoProcessorGetOutputStereoModeFunc(IntPtr self, IntPtr pVideoProcessor, out int pEnabled);
        VideoProcessorGetOutputStereoModeFunc m_VideoProcessorGetOutputStereoModeFunc;

        public virtual int VideoProcessorGetOutputExtension(
            ID3D11VideoProcessor pVideoProcessor,
            ref Guid pExtensionGuid,
            uint DataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(26);
            if(m_VideoProcessorGetOutputExtensionFunc==null) m_VideoProcessorGetOutputExtensionFunc = (VideoProcessorGetOutputExtensionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetOutputExtensionFunc));
            
            return m_VideoProcessorGetOutputExtensionFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, ref pExtensionGuid, DataSize, pData);
        }
        delegate int VideoProcessorGetOutputExtensionFunc(IntPtr self, IntPtr pVideoProcessor, ref Guid pExtensionGuid, uint DataSize, IntPtr pData);
        VideoProcessorGetOutputExtensionFunc m_VideoProcessorGetOutputExtensionFunc;

        public virtual void VideoProcessorSetStreamFrameFormat(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            D3D11_VIDEO_FRAME_FORMAT FrameFormat
        ){
            var fp = GetFunctionPointer(27);
            if(m_VideoProcessorSetStreamFrameFormatFunc==null) m_VideoProcessorSetStreamFrameFormatFunc = (VideoProcessorSetStreamFrameFormatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamFrameFormatFunc));
            
            m_VideoProcessorSetStreamFrameFormatFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, FrameFormat);
        }
        delegate void VideoProcessorSetStreamFrameFormatFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, D3D11_VIDEO_FRAME_FORMAT FrameFormat);
        VideoProcessorSetStreamFrameFormatFunc m_VideoProcessorSetStreamFrameFormatFunc;

        public virtual void VideoProcessorSetStreamColorSpace(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            ref D3D11_VIDEO_PROCESSOR_COLOR_SPACE pColorSpace
        ){
            var fp = GetFunctionPointer(28);
            if(m_VideoProcessorSetStreamColorSpaceFunc==null) m_VideoProcessorSetStreamColorSpaceFunc = (VideoProcessorSetStreamColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamColorSpaceFunc));
            
            m_VideoProcessorSetStreamColorSpaceFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, ref pColorSpace);
        }
        delegate void VideoProcessorSetStreamColorSpaceFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, ref D3D11_VIDEO_PROCESSOR_COLOR_SPACE pColorSpace);
        VideoProcessorSetStreamColorSpaceFunc m_VideoProcessorSetStreamColorSpaceFunc;

        public virtual void VideoProcessorSetStreamOutputRate(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate,
            int RepeatFrame,
            ref DXGI_RATIONAL pCustomRate
        ){
            var fp = GetFunctionPointer(29);
            if(m_VideoProcessorSetStreamOutputRateFunc==null) m_VideoProcessorSetStreamOutputRateFunc = (VideoProcessorSetStreamOutputRateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamOutputRateFunc));
            
            m_VideoProcessorSetStreamOutputRateFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, OutputRate, RepeatFrame, ref pCustomRate);
        }
        delegate void VideoProcessorSetStreamOutputRateFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate, int RepeatFrame, ref DXGI_RATIONAL pCustomRate);
        VideoProcessorSetStreamOutputRateFunc m_VideoProcessorSetStreamOutputRateFunc;

        public virtual void VideoProcessorSetStreamSourceRect(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            int Enable,
            ref tagRECT pRect
        ){
            var fp = GetFunctionPointer(30);
            if(m_VideoProcessorSetStreamSourceRectFunc==null) m_VideoProcessorSetStreamSourceRectFunc = (VideoProcessorSetStreamSourceRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamSourceRectFunc));
            
            m_VideoProcessorSetStreamSourceRectFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Enable, ref pRect);
        }
        delegate void VideoProcessorSetStreamSourceRectFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, int Enable, ref tagRECT pRect);
        VideoProcessorSetStreamSourceRectFunc m_VideoProcessorSetStreamSourceRectFunc;

        public virtual void VideoProcessorSetStreamDestRect(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            int Enable,
            ref tagRECT pRect
        ){
            var fp = GetFunctionPointer(31);
            if(m_VideoProcessorSetStreamDestRectFunc==null) m_VideoProcessorSetStreamDestRectFunc = (VideoProcessorSetStreamDestRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamDestRectFunc));
            
            m_VideoProcessorSetStreamDestRectFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Enable, ref pRect);
        }
        delegate void VideoProcessorSetStreamDestRectFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, int Enable, ref tagRECT pRect);
        VideoProcessorSetStreamDestRectFunc m_VideoProcessorSetStreamDestRectFunc;

        public virtual void VideoProcessorSetStreamAlpha(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            int Enable,
            float Alpha
        ){
            var fp = GetFunctionPointer(32);
            if(m_VideoProcessorSetStreamAlphaFunc==null) m_VideoProcessorSetStreamAlphaFunc = (VideoProcessorSetStreamAlphaFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamAlphaFunc));
            
            m_VideoProcessorSetStreamAlphaFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Enable, Alpha);
        }
        delegate void VideoProcessorSetStreamAlphaFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, int Enable, float Alpha);
        VideoProcessorSetStreamAlphaFunc m_VideoProcessorSetStreamAlphaFunc;

        public virtual void VideoProcessorSetStreamPalette(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            uint Count,
            ref uint pEntries
        ){
            var fp = GetFunctionPointer(33);
            if(m_VideoProcessorSetStreamPaletteFunc==null) m_VideoProcessorSetStreamPaletteFunc = (VideoProcessorSetStreamPaletteFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamPaletteFunc));
            
            m_VideoProcessorSetStreamPaletteFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Count, ref pEntries);
        }
        delegate void VideoProcessorSetStreamPaletteFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, uint Count, ref uint pEntries);
        VideoProcessorSetStreamPaletteFunc m_VideoProcessorSetStreamPaletteFunc;

        public virtual void VideoProcessorSetStreamPixelAspectRatio(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            int Enable,
            ref DXGI_RATIONAL pSourceAspectRatio,
            ref DXGI_RATIONAL pDestinationAspectRatio
        ){
            var fp = GetFunctionPointer(34);
            if(m_VideoProcessorSetStreamPixelAspectRatioFunc==null) m_VideoProcessorSetStreamPixelAspectRatioFunc = (VideoProcessorSetStreamPixelAspectRatioFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamPixelAspectRatioFunc));
            
            m_VideoProcessorSetStreamPixelAspectRatioFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Enable, ref pSourceAspectRatio, ref pDestinationAspectRatio);
        }
        delegate void VideoProcessorSetStreamPixelAspectRatioFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, int Enable, ref DXGI_RATIONAL pSourceAspectRatio, ref DXGI_RATIONAL pDestinationAspectRatio);
        VideoProcessorSetStreamPixelAspectRatioFunc m_VideoProcessorSetStreamPixelAspectRatioFunc;

        public virtual void VideoProcessorSetStreamLumaKey(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            int Enable,
            float Lower,
            float Upper
        ){
            var fp = GetFunctionPointer(35);
            if(m_VideoProcessorSetStreamLumaKeyFunc==null) m_VideoProcessorSetStreamLumaKeyFunc = (VideoProcessorSetStreamLumaKeyFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamLumaKeyFunc));
            
            m_VideoProcessorSetStreamLumaKeyFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Enable, Lower, Upper);
        }
        delegate void VideoProcessorSetStreamLumaKeyFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, int Enable, float Lower, float Upper);
        VideoProcessorSetStreamLumaKeyFunc m_VideoProcessorSetStreamLumaKeyFunc;

        public virtual void VideoProcessorSetStreamStereoFormat(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            int Enable,
            D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format,
            int LeftViewFrame0,
            int BaseViewFrame0,
            D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode,
            int MonoOffset
        ){
            var fp = GetFunctionPointer(36);
            if(m_VideoProcessorSetStreamStereoFormatFunc==null) m_VideoProcessorSetStreamStereoFormatFunc = (VideoProcessorSetStreamStereoFormatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamStereoFormatFunc));
            
            m_VideoProcessorSetStreamStereoFormatFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Enable, Format, LeftViewFrame0, BaseViewFrame0, FlipMode, MonoOffset);
        }
        delegate void VideoProcessorSetStreamStereoFormatFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, int Enable, D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format, int LeftViewFrame0, int BaseViewFrame0, D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode, int MonoOffset);
        VideoProcessorSetStreamStereoFormatFunc m_VideoProcessorSetStreamStereoFormatFunc;

        public virtual void VideoProcessorSetStreamAutoProcessingMode(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            int Enable
        ){
            var fp = GetFunctionPointer(37);
            if(m_VideoProcessorSetStreamAutoProcessingModeFunc==null) m_VideoProcessorSetStreamAutoProcessingModeFunc = (VideoProcessorSetStreamAutoProcessingModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamAutoProcessingModeFunc));
            
            m_VideoProcessorSetStreamAutoProcessingModeFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Enable);
        }
        delegate void VideoProcessorSetStreamAutoProcessingModeFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, int Enable);
        VideoProcessorSetStreamAutoProcessingModeFunc m_VideoProcessorSetStreamAutoProcessingModeFunc;

        public virtual void VideoProcessorSetStreamFilter(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            D3D11_VIDEO_PROCESSOR_FILTER Filter,
            int Enable,
            int Level
        ){
            var fp = GetFunctionPointer(38);
            if(m_VideoProcessorSetStreamFilterFunc==null) m_VideoProcessorSetStreamFilterFunc = (VideoProcessorSetStreamFilterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamFilterFunc));
            
            m_VideoProcessorSetStreamFilterFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Filter, Enable, Level);
        }
        delegate void VideoProcessorSetStreamFilterFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, D3D11_VIDEO_PROCESSOR_FILTER Filter, int Enable, int Level);
        VideoProcessorSetStreamFilterFunc m_VideoProcessorSetStreamFilterFunc;

        public virtual int VideoProcessorSetStreamExtension(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            ref Guid pExtensionGuid,
            uint DataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(39);
            if(m_VideoProcessorSetStreamExtensionFunc==null) m_VideoProcessorSetStreamExtensionFunc = (VideoProcessorSetStreamExtensionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamExtensionFunc));
            
            return m_VideoProcessorSetStreamExtensionFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, ref pExtensionGuid, DataSize, pData);
        }
        delegate int VideoProcessorSetStreamExtensionFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, ref Guid pExtensionGuid, uint DataSize, IntPtr pData);
        VideoProcessorSetStreamExtensionFunc m_VideoProcessorSetStreamExtensionFunc;

        public virtual void VideoProcessorGetStreamFrameFormat(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out D3D11_VIDEO_FRAME_FORMAT pFrameFormat
        ){
            var fp = GetFunctionPointer(40);
            if(m_VideoProcessorGetStreamFrameFormatFunc==null) m_VideoProcessorGetStreamFrameFormatFunc = (VideoProcessorGetStreamFrameFormatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamFrameFormatFunc));
            
            m_VideoProcessorGetStreamFrameFormatFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pFrameFormat);
        }
        delegate void VideoProcessorGetStreamFrameFormatFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out D3D11_VIDEO_FRAME_FORMAT pFrameFormat);
        VideoProcessorGetStreamFrameFormatFunc m_VideoProcessorGetStreamFrameFormatFunc;

        public virtual void VideoProcessorGetStreamColorSpace(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out D3D11_VIDEO_PROCESSOR_COLOR_SPACE pColorSpace
        ){
            var fp = GetFunctionPointer(41);
            if(m_VideoProcessorGetStreamColorSpaceFunc==null) m_VideoProcessorGetStreamColorSpaceFunc = (VideoProcessorGetStreamColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamColorSpaceFunc));
            
            m_VideoProcessorGetStreamColorSpaceFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pColorSpace);
        }
        delegate void VideoProcessorGetStreamColorSpaceFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out D3D11_VIDEO_PROCESSOR_COLOR_SPACE pColorSpace);
        VideoProcessorGetStreamColorSpaceFunc m_VideoProcessorGetStreamColorSpaceFunc;

        public virtual void VideoProcessorGetStreamOutputRate(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out D3D11_VIDEO_PROCESSOR_OUTPUT_RATE pOutputRate,
            out int pRepeatFrame,
            out DXGI_RATIONAL pCustomRate
        ){
            var fp = GetFunctionPointer(42);
            if(m_VideoProcessorGetStreamOutputRateFunc==null) m_VideoProcessorGetStreamOutputRateFunc = (VideoProcessorGetStreamOutputRateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamOutputRateFunc));
            
            m_VideoProcessorGetStreamOutputRateFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pOutputRate, out pRepeatFrame, out pCustomRate);
        }
        delegate void VideoProcessorGetStreamOutputRateFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out D3D11_VIDEO_PROCESSOR_OUTPUT_RATE pOutputRate, out int pRepeatFrame, out DXGI_RATIONAL pCustomRate);
        VideoProcessorGetStreamOutputRateFunc m_VideoProcessorGetStreamOutputRateFunc;

        public virtual void VideoProcessorGetStreamSourceRect(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out int pEnabled,
            out tagRECT pRect
        ){
            var fp = GetFunctionPointer(43);
            if(m_VideoProcessorGetStreamSourceRectFunc==null) m_VideoProcessorGetStreamSourceRectFunc = (VideoProcessorGetStreamSourceRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamSourceRectFunc));
            
            m_VideoProcessorGetStreamSourceRectFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pEnabled, out pRect);
        }
        delegate void VideoProcessorGetStreamSourceRectFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out int pEnabled, out tagRECT pRect);
        VideoProcessorGetStreamSourceRectFunc m_VideoProcessorGetStreamSourceRectFunc;

        public virtual void VideoProcessorGetStreamDestRect(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out int pEnabled,
            out tagRECT pRect
        ){
            var fp = GetFunctionPointer(44);
            if(m_VideoProcessorGetStreamDestRectFunc==null) m_VideoProcessorGetStreamDestRectFunc = (VideoProcessorGetStreamDestRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamDestRectFunc));
            
            m_VideoProcessorGetStreamDestRectFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pEnabled, out pRect);
        }
        delegate void VideoProcessorGetStreamDestRectFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out int pEnabled, out tagRECT pRect);
        VideoProcessorGetStreamDestRectFunc m_VideoProcessorGetStreamDestRectFunc;

        public virtual void VideoProcessorGetStreamAlpha(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out int pEnabled,
            out float pAlpha
        ){
            var fp = GetFunctionPointer(45);
            if(m_VideoProcessorGetStreamAlphaFunc==null) m_VideoProcessorGetStreamAlphaFunc = (VideoProcessorGetStreamAlphaFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamAlphaFunc));
            
            m_VideoProcessorGetStreamAlphaFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pEnabled, out pAlpha);
        }
        delegate void VideoProcessorGetStreamAlphaFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out int pEnabled, out float pAlpha);
        VideoProcessorGetStreamAlphaFunc m_VideoProcessorGetStreamAlphaFunc;

        public virtual void VideoProcessorGetStreamPalette(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            uint Count,
            out uint pEntries
        ){
            var fp = GetFunctionPointer(46);
            if(m_VideoProcessorGetStreamPaletteFunc==null) m_VideoProcessorGetStreamPaletteFunc = (VideoProcessorGetStreamPaletteFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamPaletteFunc));
            
            m_VideoProcessorGetStreamPaletteFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Count, out pEntries);
        }
        delegate void VideoProcessorGetStreamPaletteFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, uint Count, out uint pEntries);
        VideoProcessorGetStreamPaletteFunc m_VideoProcessorGetStreamPaletteFunc;

        public virtual void VideoProcessorGetStreamPixelAspectRatio(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out int pEnabled,
            out DXGI_RATIONAL pSourceAspectRatio,
            out DXGI_RATIONAL pDestinationAspectRatio
        ){
            var fp = GetFunctionPointer(47);
            if(m_VideoProcessorGetStreamPixelAspectRatioFunc==null) m_VideoProcessorGetStreamPixelAspectRatioFunc = (VideoProcessorGetStreamPixelAspectRatioFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamPixelAspectRatioFunc));
            
            m_VideoProcessorGetStreamPixelAspectRatioFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pEnabled, out pSourceAspectRatio, out pDestinationAspectRatio);
        }
        delegate void VideoProcessorGetStreamPixelAspectRatioFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out int pEnabled, out DXGI_RATIONAL pSourceAspectRatio, out DXGI_RATIONAL pDestinationAspectRatio);
        VideoProcessorGetStreamPixelAspectRatioFunc m_VideoProcessorGetStreamPixelAspectRatioFunc;

        public virtual void VideoProcessorGetStreamLumaKey(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out int pEnabled,
            out float pLower,
            out float pUpper
        ){
            var fp = GetFunctionPointer(48);
            if(m_VideoProcessorGetStreamLumaKeyFunc==null) m_VideoProcessorGetStreamLumaKeyFunc = (VideoProcessorGetStreamLumaKeyFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamLumaKeyFunc));
            
            m_VideoProcessorGetStreamLumaKeyFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pEnabled, out pLower, out pUpper);
        }
        delegate void VideoProcessorGetStreamLumaKeyFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out int pEnabled, out float pLower, out float pUpper);
        VideoProcessorGetStreamLumaKeyFunc m_VideoProcessorGetStreamLumaKeyFunc;

        public virtual void VideoProcessorGetStreamStereoFormat(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out int pEnable,
            out D3D11_VIDEO_PROCESSOR_STEREO_FORMAT pFormat,
            out int pLeftViewFrame0,
            out int pBaseViewFrame0,
            out D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE pFlipMode,
            out int MonoOffset
        ){
            var fp = GetFunctionPointer(49);
            if(m_VideoProcessorGetStreamStereoFormatFunc==null) m_VideoProcessorGetStreamStereoFormatFunc = (VideoProcessorGetStreamStereoFormatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamStereoFormatFunc));
            
            m_VideoProcessorGetStreamStereoFormatFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pEnable, out pFormat, out pLeftViewFrame0, out pBaseViewFrame0, out pFlipMode, out MonoOffset);
        }
        delegate void VideoProcessorGetStreamStereoFormatFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out int pEnable, out D3D11_VIDEO_PROCESSOR_STEREO_FORMAT pFormat, out int pLeftViewFrame0, out int pBaseViewFrame0, out D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE pFlipMode, out int MonoOffset);
        VideoProcessorGetStreamStereoFormatFunc m_VideoProcessorGetStreamStereoFormatFunc;

        public virtual void VideoProcessorGetStreamAutoProcessingMode(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out int pEnabled
        ){
            var fp = GetFunctionPointer(50);
            if(m_VideoProcessorGetStreamAutoProcessingModeFunc==null) m_VideoProcessorGetStreamAutoProcessingModeFunc = (VideoProcessorGetStreamAutoProcessingModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamAutoProcessingModeFunc));
            
            m_VideoProcessorGetStreamAutoProcessingModeFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pEnabled);
        }
        delegate void VideoProcessorGetStreamAutoProcessingModeFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out int pEnabled);
        VideoProcessorGetStreamAutoProcessingModeFunc m_VideoProcessorGetStreamAutoProcessingModeFunc;

        public virtual void VideoProcessorGetStreamFilter(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            D3D11_VIDEO_PROCESSOR_FILTER Filter,
            out int pEnabled,
            out int pLevel
        ){
            var fp = GetFunctionPointer(51);
            if(m_VideoProcessorGetStreamFilterFunc==null) m_VideoProcessorGetStreamFilterFunc = (VideoProcessorGetStreamFilterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamFilterFunc));
            
            m_VideoProcessorGetStreamFilterFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Filter, out pEnabled, out pLevel);
        }
        delegate void VideoProcessorGetStreamFilterFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, D3D11_VIDEO_PROCESSOR_FILTER Filter, out int pEnabled, out int pLevel);
        VideoProcessorGetStreamFilterFunc m_VideoProcessorGetStreamFilterFunc;

        public virtual int VideoProcessorGetStreamExtension(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            ref Guid pExtensionGuid,
            uint DataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(52);
            if(m_VideoProcessorGetStreamExtensionFunc==null) m_VideoProcessorGetStreamExtensionFunc = (VideoProcessorGetStreamExtensionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamExtensionFunc));
            
            return m_VideoProcessorGetStreamExtensionFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, ref pExtensionGuid, DataSize, pData);
        }
        delegate int VideoProcessorGetStreamExtensionFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, ref Guid pExtensionGuid, uint DataSize, IntPtr pData);
        VideoProcessorGetStreamExtensionFunc m_VideoProcessorGetStreamExtensionFunc;

        public virtual int VideoProcessorBlt(
            ID3D11VideoProcessor pVideoProcessor,
            ID3D11VideoProcessorOutputView pView,
            uint OutputFrame,
            uint StreamCount,
            ref D3D11_VIDEO_PROCESSOR_STREAM pStreams
        ){
            var fp = GetFunctionPointer(53);
            if(m_VideoProcessorBltFunc==null) m_VideoProcessorBltFunc = (VideoProcessorBltFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorBltFunc));
            
            return m_VideoProcessorBltFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, pView!=null ? pView.Ptr : IntPtr.Zero, OutputFrame, StreamCount, ref pStreams);
        }
        delegate int VideoProcessorBltFunc(IntPtr self, IntPtr pVideoProcessor, IntPtr pView, uint OutputFrame, uint StreamCount, ref D3D11_VIDEO_PROCESSOR_STREAM pStreams);
        VideoProcessorBltFunc m_VideoProcessorBltFunc;

        public virtual int NegotiateCryptoSessionKeyExchange(
            ID3D11CryptoSession pCryptoSession,
            uint DataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(54);
            if(m_NegotiateCryptoSessionKeyExchangeFunc==null) m_NegotiateCryptoSessionKeyExchangeFunc = (NegotiateCryptoSessionKeyExchangeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(NegotiateCryptoSessionKeyExchangeFunc));
            
            return m_NegotiateCryptoSessionKeyExchangeFunc(m_ptr, pCryptoSession!=null ? pCryptoSession.Ptr : IntPtr.Zero, DataSize, pData);
        }
        delegate int NegotiateCryptoSessionKeyExchangeFunc(IntPtr self, IntPtr pCryptoSession, uint DataSize, IntPtr pData);
        NegotiateCryptoSessionKeyExchangeFunc m_NegotiateCryptoSessionKeyExchangeFunc;

        public virtual void EncryptionBlt(
            ID3D11CryptoSession pCryptoSession,
            ID3D11Texture2D pSrcSurface,
            ID3D11Texture2D pDstSurface,
            uint IVSize,
            IntPtr pIV
        ){
            var fp = GetFunctionPointer(55);
            if(m_EncryptionBltFunc==null) m_EncryptionBltFunc = (EncryptionBltFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(EncryptionBltFunc));
            
            m_EncryptionBltFunc(m_ptr, pCryptoSession!=null ? pCryptoSession.Ptr : IntPtr.Zero, pSrcSurface!=null ? pSrcSurface.Ptr : IntPtr.Zero, pDstSurface!=null ? pDstSurface.Ptr : IntPtr.Zero, IVSize, pIV);
        }
        delegate void EncryptionBltFunc(IntPtr self, IntPtr pCryptoSession, IntPtr pSrcSurface, IntPtr pDstSurface, uint IVSize, IntPtr pIV);
        EncryptionBltFunc m_EncryptionBltFunc;

        public virtual void DecryptionBlt(
            ID3D11CryptoSession pCryptoSession,
            ID3D11Texture2D pSrcSurface,
            ID3D11Texture2D pDstSurface,
            out D3D11_ENCRYPTED_BLOCK_INFO pEncryptedBlockInfo,
            uint ContentKeySize,
            IntPtr pContentKey,
            uint IVSize,
            IntPtr pIV
        ){
            var fp = GetFunctionPointer(56);
            if(m_DecryptionBltFunc==null) m_DecryptionBltFunc = (DecryptionBltFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DecryptionBltFunc));
            
            m_DecryptionBltFunc(m_ptr, pCryptoSession!=null ? pCryptoSession.Ptr : IntPtr.Zero, pSrcSurface!=null ? pSrcSurface.Ptr : IntPtr.Zero, pDstSurface!=null ? pDstSurface.Ptr : IntPtr.Zero, out pEncryptedBlockInfo, ContentKeySize, pContentKey, IVSize, pIV);
        }
        delegate void DecryptionBltFunc(IntPtr self, IntPtr pCryptoSession, IntPtr pSrcSurface, IntPtr pDstSurface, out D3D11_ENCRYPTED_BLOCK_INFO pEncryptedBlockInfo, uint ContentKeySize, IntPtr pContentKey, uint IVSize, IntPtr pIV);
        DecryptionBltFunc m_DecryptionBltFunc;

        public virtual void StartSessionKeyRefresh(
            ID3D11CryptoSession pCryptoSession,
            uint RandomNumberSize,
            IntPtr pRandomNumber
        ){
            var fp = GetFunctionPointer(57);
            if(m_StartSessionKeyRefreshFunc==null) m_StartSessionKeyRefreshFunc = (StartSessionKeyRefreshFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(StartSessionKeyRefreshFunc));
            
            m_StartSessionKeyRefreshFunc(m_ptr, pCryptoSession!=null ? pCryptoSession.Ptr : IntPtr.Zero, RandomNumberSize, pRandomNumber);
        }
        delegate void StartSessionKeyRefreshFunc(IntPtr self, IntPtr pCryptoSession, uint RandomNumberSize, IntPtr pRandomNumber);
        StartSessionKeyRefreshFunc m_StartSessionKeyRefreshFunc;

        public virtual void FinishSessionKeyRefresh(
            ID3D11CryptoSession pCryptoSession
        ){
            var fp = GetFunctionPointer(58);
            if(m_FinishSessionKeyRefreshFunc==null) m_FinishSessionKeyRefreshFunc = (FinishSessionKeyRefreshFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(FinishSessionKeyRefreshFunc));
            
            m_FinishSessionKeyRefreshFunc(m_ptr, pCryptoSession!=null ? pCryptoSession.Ptr : IntPtr.Zero);
        }
        delegate void FinishSessionKeyRefreshFunc(IntPtr self, IntPtr pCryptoSession);
        FinishSessionKeyRefreshFunc m_FinishSessionKeyRefreshFunc;

        public virtual int GetEncryptionBltKey(
            ID3D11CryptoSession pCryptoSession,
            uint KeySize,
            IntPtr pReadbackKey
        ){
            var fp = GetFunctionPointer(59);
            if(m_GetEncryptionBltKeyFunc==null) m_GetEncryptionBltKeyFunc = (GetEncryptionBltKeyFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetEncryptionBltKeyFunc));
            
            return m_GetEncryptionBltKeyFunc(m_ptr, pCryptoSession!=null ? pCryptoSession.Ptr : IntPtr.Zero, KeySize, pReadbackKey);
        }
        delegate int GetEncryptionBltKeyFunc(IntPtr self, IntPtr pCryptoSession, uint KeySize, IntPtr pReadbackKey);
        GetEncryptionBltKeyFunc m_GetEncryptionBltKeyFunc;

        public virtual int NegotiateAuthenticatedChannelKeyExchange(
            ID3D11AuthenticatedChannel pChannel,
            uint DataSize,
            IntPtr pData
        ){
            var fp = GetFunctionPointer(60);
            if(m_NegotiateAuthenticatedChannelKeyExchangeFunc==null) m_NegotiateAuthenticatedChannelKeyExchangeFunc = (NegotiateAuthenticatedChannelKeyExchangeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(NegotiateAuthenticatedChannelKeyExchangeFunc));
            
            return m_NegotiateAuthenticatedChannelKeyExchangeFunc(m_ptr, pChannel!=null ? pChannel.Ptr : IntPtr.Zero, DataSize, pData);
        }
        delegate int NegotiateAuthenticatedChannelKeyExchangeFunc(IntPtr self, IntPtr pChannel, uint DataSize, IntPtr pData);
        NegotiateAuthenticatedChannelKeyExchangeFunc m_NegotiateAuthenticatedChannelKeyExchangeFunc;

        public virtual int QueryAuthenticatedChannel(
            ID3D11AuthenticatedChannel pChannel,
            uint InputSize,
            IntPtr pInput,
            uint OutputSize,
            IntPtr pOutput
        ){
            var fp = GetFunctionPointer(61);
            if(m_QueryAuthenticatedChannelFunc==null) m_QueryAuthenticatedChannelFunc = (QueryAuthenticatedChannelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryAuthenticatedChannelFunc));
            
            return m_QueryAuthenticatedChannelFunc(m_ptr, pChannel!=null ? pChannel.Ptr : IntPtr.Zero, InputSize, pInput, OutputSize, pOutput);
        }
        delegate int QueryAuthenticatedChannelFunc(IntPtr self, IntPtr pChannel, uint InputSize, IntPtr pInput, uint OutputSize, IntPtr pOutput);
        QueryAuthenticatedChannelFunc m_QueryAuthenticatedChannelFunc;

        public virtual int ConfigureAuthenticatedChannel(
            ID3D11AuthenticatedChannel pChannel,
            uint InputSize,
            IntPtr pInput,
            out D3D11_AUTHENTICATED_CONFIGURE_OUTPUT pOutput
        ){
            var fp = GetFunctionPointer(62);
            if(m_ConfigureAuthenticatedChannelFunc==null) m_ConfigureAuthenticatedChannelFunc = (ConfigureAuthenticatedChannelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ConfigureAuthenticatedChannelFunc));
            
            return m_ConfigureAuthenticatedChannelFunc(m_ptr, pChannel!=null ? pChannel.Ptr : IntPtr.Zero, InputSize, pInput, out pOutput);
        }
        delegate int ConfigureAuthenticatedChannelFunc(IntPtr self, IntPtr pChannel, uint InputSize, IntPtr pInput, out D3D11_AUTHENTICATED_CONFIGURE_OUTPUT pOutput);
        ConfigureAuthenticatedChannelFunc m_ConfigureAuthenticatedChannelFunc;

        public virtual void VideoProcessorSetStreamRotation(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            int Enable,
            D3D11_VIDEO_PROCESSOR_ROTATION Rotation
        ){
            var fp = GetFunctionPointer(63);
            if(m_VideoProcessorSetStreamRotationFunc==null) m_VideoProcessorSetStreamRotationFunc = (VideoProcessorSetStreamRotationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorSetStreamRotationFunc));
            
            m_VideoProcessorSetStreamRotationFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, Enable, Rotation);
        }
        delegate void VideoProcessorSetStreamRotationFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, int Enable, D3D11_VIDEO_PROCESSOR_ROTATION Rotation);
        VideoProcessorSetStreamRotationFunc m_VideoProcessorSetStreamRotationFunc;

        public virtual void VideoProcessorGetStreamRotation(
            ID3D11VideoProcessor pVideoProcessor,
            uint StreamIndex,
            out int pEnable,
            out D3D11_VIDEO_PROCESSOR_ROTATION pRotation
        ){
            var fp = GetFunctionPointer(64);
            if(m_VideoProcessorGetStreamRotationFunc==null) m_VideoProcessorGetStreamRotationFunc = (VideoProcessorGetStreamRotationFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(VideoProcessorGetStreamRotationFunc));
            
            m_VideoProcessorGetStreamRotationFunc(m_ptr, pVideoProcessor!=null ? pVideoProcessor.Ptr : IntPtr.Zero, StreamIndex, out pEnable, out pRotation);
        }
        delegate void VideoProcessorGetStreamRotationFunc(IntPtr self, IntPtr pVideoProcessor, uint StreamIndex, out int pEnable, out D3D11_VIDEO_PROCESSOR_ROTATION pRotation);
        VideoProcessorGetStreamRotationFunc m_VideoProcessorGetStreamRotationFunc;

    }
}
