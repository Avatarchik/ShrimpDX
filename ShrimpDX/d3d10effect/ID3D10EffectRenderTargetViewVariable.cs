// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D10EffectRenderTargetViewVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("28ca0cc3-c2c9-40bb-b57f-67b737122b17");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int SetRenderTarget(
            ID3D10RenderTargetView pResource
        ){
            var fp = GetFunctionPointer(25);
            if(m_SetRenderTargetFunc==null) m_SetRenderTargetFunc = (SetRenderTargetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRenderTargetFunc));
            
            return m_SetRenderTargetFunc(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero);
        }
        delegate int SetRenderTargetFunc(IntPtr self, IntPtr pResource);
        SetRenderTargetFunc m_SetRenderTargetFunc;

        public virtual int GetRenderTarget(
            out ID3D10RenderTargetView ppResource
        ){
            var fp = GetFunctionPointer(26);
            if(m_GetRenderTargetFunc==null) m_GetRenderTargetFunc = (GetRenderTargetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRenderTargetFunc));
            ppResource = new ID3D10RenderTargetView();
            return m_GetRenderTargetFunc(m_ptr, out ppResource.PtrForNew);
        }
        delegate int GetRenderTargetFunc(IntPtr self, out IntPtr ppResource);
        GetRenderTargetFunc m_GetRenderTargetFunc;

        public virtual int SetRenderTargetArray(
            out ID3D10RenderTargetView ppResources,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(27);
            if(m_SetRenderTargetArrayFunc==null) m_SetRenderTargetArrayFunc = (SetRenderTargetArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRenderTargetArrayFunc));
            ppResources = new ID3D10RenderTargetView();
            return m_SetRenderTargetArrayFunc(m_ptr, out ppResources.PtrForNew, Offset, Count);
        }
        delegate int SetRenderTargetArrayFunc(IntPtr self, out IntPtr ppResources, uint Offset, uint Count);
        SetRenderTargetArrayFunc m_SetRenderTargetArrayFunc;

        public virtual int GetRenderTargetArray(
            out ID3D10RenderTargetView ppResources,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(28);
            if(m_GetRenderTargetArrayFunc==null) m_GetRenderTargetArrayFunc = (GetRenderTargetArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRenderTargetArrayFunc));
            ppResources = new ID3D10RenderTargetView();
            return m_GetRenderTargetArrayFunc(m_ptr, out ppResources.PtrForNew, Offset, Count);
        }
        delegate int GetRenderTargetArrayFunc(IntPtr self, out IntPtr ppResources, uint Offset, uint Count);
        GetRenderTargetArrayFunc m_GetRenderTargetArrayFunc;

    }
}
