// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D10Effect: IUnknown
    {
        static Guid s_uuid = new Guid("51b0ca8b-ec0b-4519-870d-8ee1cb5017c7");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int QueryInterface(
            ref Guid iid,
            out IntPtr ppv
        ){
            var fp = GetFunctionPointer(3);
            var callback = (QueryInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryInterfaceFunc));
            
            return callback(m_ptr, ref iid, out ppv);
        }
        delegate int QueryInterfaceFunc(IntPtr self, ref Guid iid, out IntPtr ppv);

        public virtual uint AddRef(
        ){
            var fp = GetFunctionPointer(1);
            var callback = (AddRefFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AddRefFunc));
            
            return callback(m_ptr);
        }
        delegate uint AddRefFunc(IntPtr self);

        public virtual uint Release(
        ){
            var fp = GetFunctionPointer(2);
            var callback = (ReleaseFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ReleaseFunc));
            
            return callback(m_ptr);
        }
        delegate uint ReleaseFunc(IntPtr self);

        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(4);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual int IsPool(
        ){
            var fp = GetFunctionPointer(5);
            var callback = (IsPoolFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsPoolFunc));
            
            return callback(m_ptr);
        }
        delegate int IsPoolFunc(IntPtr self);

        public virtual int GetDevice(
            out ID3D10Device ppDevice
        ){
            var fp = GetFunctionPointer(6);
            var callback = (GetDeviceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDeviceFunc));
            ppDevice = new ID3D10Device();
            return callback(m_ptr, out ppDevice.PtrForNew);
        }
        delegate int GetDeviceFunc(IntPtr self, out IntPtr ppDevice);

        public virtual int GetDesc(
            out _D3D10_EFFECT_DESC pDesc
        ){
            var fp = GetFunctionPointer(7);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_DESC pDesc);

        public virtual ID3D10EffectConstantBuffer GetConstantBufferByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(8);
            var callback = (GetConstantBufferByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetConstantBufferByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectConstantBuffer GetConstantBufferByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetConstantBufferByName(
            string Name
        ){
            var fp = GetFunctionPointer(9);
            var callback = (GetConstantBufferByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetConstantBufferByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectConstantBuffer GetConstantBufferByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetVariableByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(10);
            var callback = (GetVariableByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVariableByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetVariableByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetVariableByName(
            string Name
        ){
            var fp = GetFunctionPointer(11);
            var callback = (GetVariableByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVariableByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetVariableByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetVariableBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(12);
            var callback = (GetVariableBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVariableBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetVariableBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectTechnique GetTechniqueByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(13);
            var callback = (GetTechniqueByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTechniqueByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectTechnique GetTechniqueByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectTechnique GetTechniqueByName(
            string Name
        ){
            var fp = GetFunctionPointer(14);
            var callback = (GetTechniqueByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTechniqueByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectTechnique GetTechniqueByNameFunc(IntPtr self, string Name);

        public virtual int Optimize(
        ){
            var fp = GetFunctionPointer(15);
            var callback = (OptimizeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OptimizeFunc));
            
            return callback(m_ptr);
        }
        delegate int OptimizeFunc(IntPtr self);

        public virtual int IsOptimized(
        ){
            var fp = GetFunctionPointer(16);
            var callback = (IsOptimizedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsOptimizedFunc));
            
            return callback(m_ptr);
        }
        delegate int IsOptimizedFunc(IntPtr self);

    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_EFFECT_DESC // 1
    {
        public int IsChildEffect;
        public uint ConstantBuffers;
        public uint SharedConstantBuffers;
        public uint GlobalVariables;
        public uint SharedGlobalVariables;
        public uint Techniques;
    }
    public class ID3D10EffectConstantBuffer: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("56648f4d-cc8b-4444-a5ad-b5a3d76e91b3");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int SetConstantBuffer(
            ID3D10Buffer pConstantBuffer
        ){
            var fp = GetFunctionPointer(49);
            var callback = (SetConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetConstantBufferFunc));
            
            return callback(m_ptr, pConstantBuffer!=null ? pConstantBuffer.Ptr : IntPtr.Zero);
        }
        delegate int SetConstantBufferFunc(IntPtr self, IntPtr pConstantBuffer);

        public virtual int GetConstantBuffer(
            out ID3D10Buffer ppConstantBuffer
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetConstantBufferFunc));
            ppConstantBuffer = new ID3D10Buffer();
            return callback(m_ptr, out ppConstantBuffer.PtrForNew);
        }
        delegate int GetConstantBufferFunc(IntPtr self, out IntPtr ppConstantBuffer);

        public virtual int SetTextureBuffer(
            ID3D10ShaderResourceView pTextureBuffer
        ){
            var fp = GetFunctionPointer(51);
            var callback = (SetTextureBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetTextureBufferFunc));
            
            return callback(m_ptr, pTextureBuffer!=null ? pTextureBuffer.Ptr : IntPtr.Zero);
        }
        delegate int SetTextureBufferFunc(IntPtr self, IntPtr pTextureBuffer);

        public virtual int GetTextureBuffer(
            out ID3D10ShaderResourceView ppTextureBuffer
        ){
            var fp = GetFunctionPointer(52);
            var callback = (GetTextureBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTextureBufferFunc));
            ppTextureBuffer = new ID3D10ShaderResourceView();
            return callback(m_ptr, out ppTextureBuffer.PtrForNew);
        }
        delegate int GetTextureBufferFunc(IntPtr self, out IntPtr ppTextureBuffer);

    }
    public class ID3D10EffectVariable: ComPtr
    {
        static Guid s_uuid = new Guid("ae897105-00e6-45bf-bb8e-281dd6db8e1b");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(1);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(2);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(3);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(4);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(5);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(6);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(7);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(8);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(9);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(10);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(11);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(12);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(13);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(14);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(15);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(16);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(17);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(18);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(19);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(20);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(21);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(22);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(23);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(24);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

    }
    public class ID3D10EffectType: ComPtr
    {
        static Guid s_uuid = new Guid("4e9e1ddc-cd9d-4772-a837-00180b9b88fd");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_TYPE_DESC pDesc
        ){
            var fp = GetFunctionPointer(1);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_TYPE_DESC pDesc);

        public virtual ID3D10EffectType GetMemberTypeByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(2);
            var callback = (GetMemberTypeByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectType GetMemberTypeByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectType GetMemberTypeByName(
            string Name
        ){
            var fp = GetFunctionPointer(3);
            var callback = (GetMemberTypeByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectType GetMemberTypeByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectType GetMemberTypeBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(4);
            var callback = (GetMemberTypeBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectType GetMemberTypeBySemanticFunc(IntPtr self, string Semantic);

        public virtual string GetMemberName(
            uint Index
        ){
            var fp = GetFunctionPointer(5);
            var callback = (GetMemberNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberNameFunc));
            
            return callback(m_ptr, Index);
        }
        delegate string GetMemberNameFunc(IntPtr self, uint Index);

        public virtual string GetMemberSemantic(
            uint Index
        ){
            var fp = GetFunctionPointer(6);
            var callback = (GetMemberSemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberSemanticFunc));
            
            return callback(m_ptr, Index);
        }
        delegate string GetMemberSemanticFunc(IntPtr self, uint Index);

    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_EFFECT_TYPE_DESC // 1
    {
        [MarshalAs(UnmanagedType.LPStr)]public string TypeName;
        public _D3D_SHADER_VARIABLE_CLASS Class;
        public _D3D_SHADER_VARIABLE_TYPE Type;
        public uint Elements;
        public uint Members;
        public uint Rows;
        public uint Columns;
        public uint PackedSize;
        public uint UnpackedSize;
        public uint Stride;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_EFFECT_VARIABLE_DESC // 1
    {
        [MarshalAs(UnmanagedType.LPStr)]public string Name;
        [MarshalAs(UnmanagedType.LPStr)]public string Semantic;
        public uint Flags;
        public uint Annotations;
        public uint BufferOffset;
        public uint ExplicitBindPoint;
    }
    public class ID3D10EffectScalarVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("00e48f7b-d2c8-49e8-a86c-022dee53431f");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint ByteOffset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, ByteOffset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint ByteOffset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint ByteOffset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, ByteOffset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint ByteOffset, uint ByteCount);

        public virtual int SetFloat(
            float Value
        ){
            var fp = GetFunctionPointer(49);
            var callback = (SetFloatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetFloatFunc));
            
            return callback(m_ptr, Value);
        }
        delegate int SetFloatFunc(IntPtr self, float Value);

        public virtual int GetFloat(
            out float pValue
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetFloatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFloatFunc));
            
            return callback(m_ptr, out pValue);
        }
        delegate int GetFloatFunc(IntPtr self, out float pValue);

        public virtual int SetFloatArray(
            out float pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(51);
            var callback = (SetFloatArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetFloatArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int SetFloatArrayFunc(IntPtr self, out float pData, uint Offset, uint Count);

        public virtual int GetFloatArray(
            out float pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(52);
            var callback = (GetFloatArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFloatArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int GetFloatArrayFunc(IntPtr self, out float pData, uint Offset, uint Count);

        public virtual int SetInt(
            int Value
        ){
            var fp = GetFunctionPointer(53);
            var callback = (SetIntFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetIntFunc));
            
            return callback(m_ptr, Value);
        }
        delegate int SetIntFunc(IntPtr self, int Value);

        public virtual int GetInt(
            out int pValue
        ){
            var fp = GetFunctionPointer(54);
            var callback = (GetIntFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetIntFunc));
            
            return callback(m_ptr, out pValue);
        }
        delegate int GetIntFunc(IntPtr self, out int pValue);

        public virtual int SetIntArray(
            out int pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(55);
            var callback = (SetIntArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetIntArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int SetIntArrayFunc(IntPtr self, out int pData, uint Offset, uint Count);

        public virtual int GetIntArray(
            out int pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(56);
            var callback = (GetIntArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetIntArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int GetIntArrayFunc(IntPtr self, out int pData, uint Offset, uint Count);

        public virtual int SetBool(
            int Value
        ){
            var fp = GetFunctionPointer(57);
            var callback = (SetBoolFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetBoolFunc));
            
            return callback(m_ptr, Value);
        }
        delegate int SetBoolFunc(IntPtr self, int Value);

        public virtual int GetBool(
            out int pValue
        ){
            var fp = GetFunctionPointer(58);
            var callback = (GetBoolFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBoolFunc));
            
            return callback(m_ptr, out pValue);
        }
        delegate int GetBoolFunc(IntPtr self, out int pValue);

        public virtual int SetBoolArray(
            out int pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(59);
            var callback = (SetBoolArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetBoolArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int SetBoolArrayFunc(IntPtr self, out int pData, uint Offset, uint Count);

        public virtual int GetBoolArray(
            out int pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(60);
            var callback = (GetBoolArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBoolArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int GetBoolArrayFunc(IntPtr self, out int pData, uint Offset, uint Count);

    }
    public class ID3D10EffectVectorVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("62b98c44-1f82-4c67-bcd0-72cf8f217e81");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint ByteOffset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, ByteOffset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint ByteOffset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint ByteOffset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, ByteOffset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint ByteOffset, uint ByteCount);

        public virtual int SetBoolVector(
            out int pData
        ){
            var fp = GetFunctionPointer(49);
            var callback = (SetBoolVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetBoolVectorFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int SetBoolVectorFunc(IntPtr self, out int pData);

        public virtual int SetIntVector(
            out int pData
        ){
            var fp = GetFunctionPointer(50);
            var callback = (SetIntVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetIntVectorFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int SetIntVectorFunc(IntPtr self, out int pData);

        public virtual int SetFloatVector(
            out float pData
        ){
            var fp = GetFunctionPointer(51);
            var callback = (SetFloatVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetFloatVectorFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int SetFloatVectorFunc(IntPtr self, out float pData);

        public virtual int GetBoolVector(
            out int pData
        ){
            var fp = GetFunctionPointer(52);
            var callback = (GetBoolVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBoolVectorFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int GetBoolVectorFunc(IntPtr self, out int pData);

        public virtual int GetIntVector(
            out int pData
        ){
            var fp = GetFunctionPointer(53);
            var callback = (GetIntVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetIntVectorFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int GetIntVectorFunc(IntPtr self, out int pData);

        public virtual int GetFloatVector(
            out float pData
        ){
            var fp = GetFunctionPointer(54);
            var callback = (GetFloatVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFloatVectorFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int GetFloatVectorFunc(IntPtr self, out float pData);

        public virtual int SetBoolVectorArray(
            out int pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(55);
            var callback = (SetBoolVectorArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetBoolVectorArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int SetBoolVectorArrayFunc(IntPtr self, out int pData, uint Offset, uint Count);

        public virtual int SetIntVectorArray(
            out int pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(56);
            var callback = (SetIntVectorArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetIntVectorArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int SetIntVectorArrayFunc(IntPtr self, out int pData, uint Offset, uint Count);

        public virtual int SetFloatVectorArray(
            out float pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(57);
            var callback = (SetFloatVectorArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetFloatVectorArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int SetFloatVectorArrayFunc(IntPtr self, out float pData, uint Offset, uint Count);

        public virtual int GetBoolVectorArray(
            out int pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(58);
            var callback = (GetBoolVectorArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBoolVectorArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int GetBoolVectorArrayFunc(IntPtr self, out int pData, uint Offset, uint Count);

        public virtual int GetIntVectorArray(
            out int pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(59);
            var callback = (GetIntVectorArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetIntVectorArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int GetIntVectorArrayFunc(IntPtr self, out int pData, uint Offset, uint Count);

        public virtual int GetFloatVectorArray(
            out float pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(60);
            var callback = (GetFloatVectorArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFloatVectorArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int GetFloatVectorArrayFunc(IntPtr self, out float pData, uint Offset, uint Count);

    }
    public class ID3D10EffectMatrixVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("50666c24-b82f-4eed-a172-5b6e7e8522e0");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint ByteOffset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, ByteOffset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint ByteOffset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint ByteOffset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, ByteOffset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint ByteOffset, uint ByteCount);

        public virtual int SetMatrix(
            out float pData
        ){
            var fp = GetFunctionPointer(49);
            var callback = (SetMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetMatrixFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int SetMatrixFunc(IntPtr self, out float pData);

        public virtual int GetMatrix(
            out float pData
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMatrixFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int GetMatrixFunc(IntPtr self, out float pData);

        public virtual int SetMatrixArray(
            out float pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(51);
            var callback = (SetMatrixArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetMatrixArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int SetMatrixArrayFunc(IntPtr self, out float pData, uint Offset, uint Count);

        public virtual int GetMatrixArray(
            out float pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(52);
            var callback = (GetMatrixArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMatrixArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int GetMatrixArrayFunc(IntPtr self, out float pData, uint Offset, uint Count);

        public virtual int SetMatrixTranspose(
            out float pData
        ){
            var fp = GetFunctionPointer(53);
            var callback = (SetMatrixTransposeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetMatrixTransposeFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int SetMatrixTransposeFunc(IntPtr self, out float pData);

        public virtual int GetMatrixTranspose(
            out float pData
        ){
            var fp = GetFunctionPointer(54);
            var callback = (GetMatrixTransposeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMatrixTransposeFunc));
            
            return callback(m_ptr, out pData);
        }
        delegate int GetMatrixTransposeFunc(IntPtr self, out float pData);

        public virtual int SetMatrixTransposeArray(
            out float pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(55);
            var callback = (SetMatrixTransposeArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetMatrixTransposeArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int SetMatrixTransposeArrayFunc(IntPtr self, out float pData, uint Offset, uint Count);

        public virtual int GetMatrixTransposeArray(
            out float pData,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(56);
            var callback = (GetMatrixTransposeArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMatrixTransposeArrayFunc));
            
            return callback(m_ptr, out pData, Offset, Count);
        }
        delegate int GetMatrixTransposeArrayFunc(IntPtr self, out float pData, uint Offset, uint Count);

    }
    public class ID3D10EffectStringVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("71417501-8df9-4e0a-a78a-255f9756baff");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetString(
            out string ppString
        ){
            var fp = GetFunctionPointer(49);
            var callback = (GetStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetStringFunc));
            
            return callback(m_ptr, out ppString);
        }
        delegate int GetStringFunc(IntPtr self, out string ppString);

        public virtual int GetStringArray(
            out string ppStrings,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetStringArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetStringArrayFunc));
            
            return callback(m_ptr, out ppStrings, Offset, Count);
        }
        delegate int GetStringArrayFunc(IntPtr self, out string ppStrings, uint Offset, uint Count);

    }
    public class ID3D10EffectShaderResourceVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("c0a7157b-d872-4b1d-8073-efc2acd4b1fc");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int SetResource(
            ID3D10ShaderResourceView pResource
        ){
            var fp = GetFunctionPointer(49);
            var callback = (SetResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetResourceFunc));
            
            return callback(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero);
        }
        delegate int SetResourceFunc(IntPtr self, IntPtr pResource);

        public virtual int GetResource(
            out ID3D10ShaderResourceView ppResource
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetResourceFunc));
            ppResource = new ID3D10ShaderResourceView();
            return callback(m_ptr, out ppResource.PtrForNew);
        }
        delegate int GetResourceFunc(IntPtr self, out IntPtr ppResource);

        public virtual int SetResourceArray(
            out ID3D10ShaderResourceView ppResources,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(51);
            var callback = (SetResourceArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetResourceArrayFunc));
            ppResources = new ID3D10ShaderResourceView();
            return callback(m_ptr, out ppResources.PtrForNew, Offset, Count);
        }
        delegate int SetResourceArrayFunc(IntPtr self, out IntPtr ppResources, uint Offset, uint Count);

        public virtual int GetResourceArray(
            out ID3D10ShaderResourceView ppResources,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(52);
            var callback = (GetResourceArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetResourceArrayFunc));
            ppResources = new ID3D10ShaderResourceView();
            return callback(m_ptr, out ppResources.PtrForNew, Offset, Count);
        }
        delegate int GetResourceArrayFunc(IntPtr self, out IntPtr ppResources, uint Offset, uint Count);

    }
    public class ID3D10EffectRenderTargetViewVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("28ca0cc3-c2c9-40bb-b57f-67b737122b17");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int SetRenderTarget(
            ID3D10RenderTargetView pResource
        ){
            var fp = GetFunctionPointer(49);
            var callback = (SetRenderTargetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRenderTargetFunc));
            
            return callback(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero);
        }
        delegate int SetRenderTargetFunc(IntPtr self, IntPtr pResource);

        public virtual int GetRenderTarget(
            out ID3D10RenderTargetView ppResource
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetRenderTargetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRenderTargetFunc));
            ppResource = new ID3D10RenderTargetView();
            return callback(m_ptr, out ppResource.PtrForNew);
        }
        delegate int GetRenderTargetFunc(IntPtr self, out IntPtr ppResource);

        public virtual int SetRenderTargetArray(
            out ID3D10RenderTargetView ppResources,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(51);
            var callback = (SetRenderTargetArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRenderTargetArrayFunc));
            ppResources = new ID3D10RenderTargetView();
            return callback(m_ptr, out ppResources.PtrForNew, Offset, Count);
        }
        delegate int SetRenderTargetArrayFunc(IntPtr self, out IntPtr ppResources, uint Offset, uint Count);

        public virtual int GetRenderTargetArray(
            out ID3D10RenderTargetView ppResources,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(52);
            var callback = (GetRenderTargetArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRenderTargetArrayFunc));
            ppResources = new ID3D10RenderTargetView();
            return callback(m_ptr, out ppResources.PtrForNew, Offset, Count);
        }
        delegate int GetRenderTargetArrayFunc(IntPtr self, out IntPtr ppResources, uint Offset, uint Count);

    }
    public class ID3D10EffectDepthStencilViewVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("3e02c918-cc79-4985-b622-2d92ad701623");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int SetDepthStencil(
            ID3D10DepthStencilView pResource
        ){
            var fp = GetFunctionPointer(49);
            var callback = (SetDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetDepthStencilFunc));
            
            return callback(m_ptr, pResource!=null ? pResource.Ptr : IntPtr.Zero);
        }
        delegate int SetDepthStencilFunc(IntPtr self, IntPtr pResource);

        public virtual int GetDepthStencil(
            out ID3D10DepthStencilView ppResource
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDepthStencilFunc));
            ppResource = new ID3D10DepthStencilView();
            return callback(m_ptr, out ppResource.PtrForNew);
        }
        delegate int GetDepthStencilFunc(IntPtr self, out IntPtr ppResource);

        public virtual int SetDepthStencilArray(
            out ID3D10DepthStencilView ppResources,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(51);
            var callback = (SetDepthStencilArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetDepthStencilArrayFunc));
            ppResources = new ID3D10DepthStencilView();
            return callback(m_ptr, out ppResources.PtrForNew, Offset, Count);
        }
        delegate int SetDepthStencilArrayFunc(IntPtr self, out IntPtr ppResources, uint Offset, uint Count);

        public virtual int GetDepthStencilArray(
            out ID3D10DepthStencilView ppResources,
            uint Offset,
            uint Count
        ){
            var fp = GetFunctionPointer(52);
            var callback = (GetDepthStencilArrayFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDepthStencilArrayFunc));
            ppResources = new ID3D10DepthStencilView();
            return callback(m_ptr, out ppResources.PtrForNew, Offset, Count);
        }
        delegate int GetDepthStencilArrayFunc(IntPtr self, out IntPtr ppResources, uint Offset, uint Count);

    }
    public class ID3D10EffectShaderVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("80849279-c799-4797-8c33-0407a07d9e06");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetShaderDesc(
            uint ShaderIndex,
            out _D3D10_EFFECT_SHADER_DESC pDesc
        ){
            var fp = GetFunctionPointer(49);
            var callback = (GetShaderDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetShaderDescFunc));
            
            return callback(m_ptr, ShaderIndex, out pDesc);
        }
        delegate int GetShaderDescFunc(IntPtr self, uint ShaderIndex, out _D3D10_EFFECT_SHADER_DESC pDesc);

        public virtual int GetVertexShader(
            uint ShaderIndex,
            out ID3D10VertexShader ppVS
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetVertexShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVertexShaderFunc));
            ppVS = new ID3D10VertexShader();
            return callback(m_ptr, ShaderIndex, out ppVS.PtrForNew);
        }
        delegate int GetVertexShaderFunc(IntPtr self, uint ShaderIndex, out IntPtr ppVS);

        public virtual int GetGeometryShader(
            uint ShaderIndex,
            out ID3D10GeometryShader ppGS
        ){
            var fp = GetFunctionPointer(51);
            var callback = (GetGeometryShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetGeometryShaderFunc));
            ppGS = new ID3D10GeometryShader();
            return callback(m_ptr, ShaderIndex, out ppGS.PtrForNew);
        }
        delegate int GetGeometryShaderFunc(IntPtr self, uint ShaderIndex, out IntPtr ppGS);

        public virtual int GetPixelShader(
            uint ShaderIndex,
            out ID3D10PixelShader ppPS
        ){
            var fp = GetFunctionPointer(52);
            var callback = (GetPixelShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPixelShaderFunc));
            ppPS = new ID3D10PixelShader();
            return callback(m_ptr, ShaderIndex, out ppPS.PtrForNew);
        }
        delegate int GetPixelShaderFunc(IntPtr self, uint ShaderIndex, out IntPtr ppPS);

        public virtual int GetInputSignatureElementDesc(
            uint ShaderIndex,
            uint Element,
            out _D3D10_SIGNATURE_PARAMETER_DESC pDesc
        ){
            var fp = GetFunctionPointer(53);
            var callback = (GetInputSignatureElementDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetInputSignatureElementDescFunc));
            
            return callback(m_ptr, ShaderIndex, Element, out pDesc);
        }
        delegate int GetInputSignatureElementDescFunc(IntPtr self, uint ShaderIndex, uint Element, out _D3D10_SIGNATURE_PARAMETER_DESC pDesc);

        public virtual int GetOutputSignatureElementDesc(
            uint ShaderIndex,
            uint Element,
            out _D3D10_SIGNATURE_PARAMETER_DESC pDesc
        ){
            var fp = GetFunctionPointer(54);
            var callback = (GetOutputSignatureElementDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetOutputSignatureElementDescFunc));
            
            return callback(m_ptr, ShaderIndex, Element, out pDesc);
        }
        delegate int GetOutputSignatureElementDescFunc(IntPtr self, uint ShaderIndex, uint Element, out _D3D10_SIGNATURE_PARAMETER_DESC pDesc);

    }
    public class ID3D10EffectBlendVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("1fcd2294-df6d-4eae-86b3-0e9160cfb07b");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetBlendState(
            uint Index,
            out ID3D10BlendState ppBlendState
        ){
            var fp = GetFunctionPointer(49);
            var callback = (GetBlendStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBlendStateFunc));
            ppBlendState = new ID3D10BlendState();
            return callback(m_ptr, Index, out ppBlendState.PtrForNew);
        }
        delegate int GetBlendStateFunc(IntPtr self, uint Index, out IntPtr ppBlendState);

        public virtual int GetBackingStore(
            uint Index,
            out D3D10_BLEND_DESC pBlendDesc
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetBackingStoreFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBackingStoreFunc));
            
            return callback(m_ptr, Index, out pBlendDesc);
        }
        delegate int GetBackingStoreFunc(IntPtr self, uint Index, out D3D10_BLEND_DESC pBlendDesc);

    }
    public class ID3D10EffectDepthStencilVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("af482368-330a-46a5-9a5c-01c71af24c8d");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetDepthStencilState(
            uint Index,
            out ID3D10DepthStencilState ppDepthStencilState
        ){
            var fp = GetFunctionPointer(49);
            var callback = (GetDepthStencilStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDepthStencilStateFunc));
            ppDepthStencilState = new ID3D10DepthStencilState();
            return callback(m_ptr, Index, out ppDepthStencilState.PtrForNew);
        }
        delegate int GetDepthStencilStateFunc(IntPtr self, uint Index, out IntPtr ppDepthStencilState);

        public virtual int GetBackingStore(
            uint Index,
            out D3D10_DEPTH_STENCIL_DESC pDepthStencilDesc
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetBackingStoreFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBackingStoreFunc));
            
            return callback(m_ptr, Index, out pDepthStencilDesc);
        }
        delegate int GetBackingStoreFunc(IntPtr self, uint Index, out D3D10_DEPTH_STENCIL_DESC pDepthStencilDesc);

    }
    public class ID3D10EffectRasterizerVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("21af9f0e-4d94-4ea9-9785-2cb76b8c0b34");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRasterizerState(
            uint Index,
            out ID3D10RasterizerState ppRasterizerState
        ){
            var fp = GetFunctionPointer(49);
            var callback = (GetRasterizerStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRasterizerStateFunc));
            ppRasterizerState = new ID3D10RasterizerState();
            return callback(m_ptr, Index, out ppRasterizerState.PtrForNew);
        }
        delegate int GetRasterizerStateFunc(IntPtr self, uint Index, out IntPtr ppRasterizerState);

        public virtual int GetBackingStore(
            uint Index,
            out D3D10_RASTERIZER_DESC pRasterizerDesc
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetBackingStoreFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBackingStoreFunc));
            
            return callback(m_ptr, Index, out pRasterizerDesc);
        }
        delegate int GetBackingStoreFunc(IntPtr self, uint Index, out D3D10_RASTERIZER_DESC pRasterizerDesc);

    }
    public class ID3D10EffectSamplerVariable: ID3D10EffectVariable
    {
        static Guid s_uuid = new Guid("6530d5c7-07e9-4271-a418-e7ce4bd1e480");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual ID3D10EffectType GetComType(
        ){
            var fp = GetFunctionPointer(25);
            var callback = (GetTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectType GetTypeFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_EFFECT_VARIABLE_DESC pDesc
        ){
            var fp = GetFunctionPointer(26);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_EFFECT_VARIABLE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(27);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(28);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(29);
            var callback = (GetMemberByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetMemberByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetMemberByName(
            string Name
        ){
            var fp = GetFunctionPointer(30);
            var callback = (GetMemberByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetMemberByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectVariable GetMemberBySemantic(
            string Semantic
        ){
            var fp = GetFunctionPointer(31);
            var callback = (GetMemberBySemanticFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberBySemanticFunc));
            
            return callback(m_ptr, Semantic);
        }
        delegate ID3D10EffectVariable GetMemberBySemanticFunc(IntPtr self, string Semantic);

        public virtual ID3D10EffectVariable GetElement(
            uint Index
        ){
            var fp = GetFunctionPointer(32);
            var callback = (GetElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetElementFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetElementFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectConstantBuffer GetParentConstantBuffer(
        ){
            var fp = GetFunctionPointer(33);
            var callback = (GetParentConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetParentConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer GetParentConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectScalarVariable AsScalar(
        ){
            var fp = GetFunctionPointer(34);
            var callback = (AsScalarFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsScalarFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectScalarVariable AsScalarFunc(IntPtr self);

        public virtual ID3D10EffectVectorVariable AsVector(
        ){
            var fp = GetFunctionPointer(35);
            var callback = (AsVectorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsVectorFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectVectorVariable AsVectorFunc(IntPtr self);

        public virtual ID3D10EffectMatrixVariable AsMatrix(
        ){
            var fp = GetFunctionPointer(36);
            var callback = (AsMatrixFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsMatrixFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectMatrixVariable AsMatrixFunc(IntPtr self);

        public virtual ID3D10EffectStringVariable AsString(
        ){
            var fp = GetFunctionPointer(37);
            var callback = (AsStringFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsStringFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectStringVariable AsStringFunc(IntPtr self);

        public virtual ID3D10EffectShaderResourceVariable AsShaderResource(
        ){
            var fp = GetFunctionPointer(38);
            var callback = (AsShaderResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderResourceFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderResourceVariable AsShaderResourceFunc(IntPtr self);

        public virtual ID3D10EffectRenderTargetViewVariable AsRenderTargetView(
        ){
            var fp = GetFunctionPointer(39);
            var callback = (AsRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRenderTargetViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRenderTargetViewVariable AsRenderTargetViewFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilViewVariable AsDepthStencilView(
        ){
            var fp = GetFunctionPointer(40);
            var callback = (AsDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilViewFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilViewVariable AsDepthStencilViewFunc(IntPtr self);

        public virtual ID3D10EffectConstantBuffer AsConstantBuffer(
        ){
            var fp = GetFunctionPointer(41);
            var callback = (AsConstantBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsConstantBufferFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectConstantBuffer AsConstantBufferFunc(IntPtr self);

        public virtual ID3D10EffectShaderVariable AsShader(
        ){
            var fp = GetFunctionPointer(42);
            var callback = (AsShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsShaderFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectShaderVariable AsShaderFunc(IntPtr self);

        public virtual ID3D10EffectBlendVariable AsBlend(
        ){
            var fp = GetFunctionPointer(43);
            var callback = (AsBlendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsBlendFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectBlendVariable AsBlendFunc(IntPtr self);

        public virtual ID3D10EffectDepthStencilVariable AsDepthStencil(
        ){
            var fp = GetFunctionPointer(44);
            var callback = (AsDepthStencilFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsDepthStencilFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectDepthStencilVariable AsDepthStencilFunc(IntPtr self);

        public virtual ID3D10EffectRasterizerVariable AsRasterizer(
        ){
            var fp = GetFunctionPointer(45);
            var callback = (AsRasterizerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsRasterizerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectRasterizerVariable AsRasterizerFunc(IntPtr self);

        public virtual ID3D10EffectSamplerVariable AsSampler(
        ){
            var fp = GetFunctionPointer(46);
            var callback = (AsSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AsSamplerFunc));
            
            return callback(m_ptr);
        }
        delegate ID3D10EffectSamplerVariable AsSamplerFunc(IntPtr self);

        public virtual int SetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(47);
            var callback = (SetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int SetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetRawValue(
            IntPtr pData,
            uint Offset,
            uint ByteCount
        ){
            var fp = GetFunctionPointer(48);
            var callback = (GetRawValueFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRawValueFunc));
            
            return callback(m_ptr, pData, Offset, ByteCount);
        }
        delegate int GetRawValueFunc(IntPtr self, IntPtr pData, uint Offset, uint ByteCount);

        public virtual int GetSampler(
            uint Index,
            out ID3D10SamplerState ppSampler
        ){
            var fp = GetFunctionPointer(49);
            var callback = (GetSamplerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSamplerFunc));
            ppSampler = new ID3D10SamplerState();
            return callback(m_ptr, Index, out ppSampler.PtrForNew);
        }
        delegate int GetSamplerFunc(IntPtr self, uint Index, out IntPtr ppSampler);

        public virtual int GetBackingStore(
            uint Index,
            out D3D10_SAMPLER_DESC pSamplerDesc
        ){
            var fp = GetFunctionPointer(50);
            var callback = (GetBackingStoreFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBackingStoreFunc));
            
            return callback(m_ptr, Index, out pSamplerDesc);
        }
        delegate int GetBackingStoreFunc(IntPtr self, uint Index, out D3D10_SAMPLER_DESC pSamplerDesc);

    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_EFFECT_SHADER_DESC // 1
    {
        public IntPtr pInputSignature;
        public int IsInline;
        public IntPtr pBytecode;
        public uint BytecodeLength;
        [MarshalAs(UnmanagedType.LPStr)]public string SODecl;
        public uint NumInputSignatureEntries;
        public uint NumOutputSignatureEntries;
    }
    public class ID3D10EffectTechnique: ComPtr
    {
        static Guid s_uuid = new Guid("db122ce8-d1c9-4292-b237-24ed3de8b175");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_TECHNIQUE_DESC pDesc
        ){
            var fp = GetFunctionPointer(1);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_TECHNIQUE_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(2);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(3);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual ID3D10EffectPass GetPassByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(4);
            var callback = (GetPassByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPassByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectPass GetPassByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectPass GetPassByName(
            string Name
        ){
            var fp = GetFunctionPointer(5);
            var callback = (GetPassByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPassByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectPass GetPassByNameFunc(IntPtr self, string Name);

        public virtual int ComputeStateBlockMask(
            out _D3D10_STATE_BLOCK_MASK pStateBlockMask
        ){
            var fp = GetFunctionPointer(6);
            var callback = (ComputeStateBlockMaskFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ComputeStateBlockMaskFunc));
            
            return callback(m_ptr, out pStateBlockMask);
        }
        delegate int ComputeStateBlockMaskFunc(IntPtr self, out _D3D10_STATE_BLOCK_MASK pStateBlockMask);

    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_TECHNIQUE_DESC // 1
    {
        [MarshalAs(UnmanagedType.LPStr)]public string Name;
        public uint Passes;
        public uint Annotations;
    }
    public class ID3D10EffectPass: ComPtr
    {
        static Guid s_uuid = new Guid("5cfbeb89-1a06-46e0-b282-e3f9bfa36a54");
        public static new ref Guid IID => ref s_uuid;
                
        public virtual int IsValid(
        ){
            var fp = GetFunctionPointer(0);
            var callback = (IsValidFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsValidFunc));
            
            return callback(m_ptr);
        }
        delegate int IsValidFunc(IntPtr self);

        public virtual int GetDesc(
            out _D3D10_PASS_DESC pDesc
        ){
            var fp = GetFunctionPointer(1);
            var callback = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D10_PASS_DESC pDesc);

        public virtual int GetVertexShaderDesc(
            out _D3D10_PASS_SHADER_DESC pDesc
        ){
            var fp = GetFunctionPointer(2);
            var callback = (GetVertexShaderDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVertexShaderDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetVertexShaderDescFunc(IntPtr self, out _D3D10_PASS_SHADER_DESC pDesc);

        public virtual int GetGeometryShaderDesc(
            out _D3D10_PASS_SHADER_DESC pDesc
        ){
            var fp = GetFunctionPointer(3);
            var callback = (GetGeometryShaderDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetGeometryShaderDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetGeometryShaderDescFunc(IntPtr self, out _D3D10_PASS_SHADER_DESC pDesc);

        public virtual int GetPixelShaderDesc(
            out _D3D10_PASS_SHADER_DESC pDesc
        ){
            var fp = GetFunctionPointer(4);
            var callback = (GetPixelShaderDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPixelShaderDescFunc));
            
            return callback(m_ptr, out pDesc);
        }
        delegate int GetPixelShaderDescFunc(IntPtr self, out _D3D10_PASS_SHADER_DESC pDesc);

        public virtual ID3D10EffectVariable GetAnnotationByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(5);
            var callback = (GetAnnotationByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByIndexFunc));
            
            return callback(m_ptr, Index);
        }
        delegate ID3D10EffectVariable GetAnnotationByIndexFunc(IntPtr self, uint Index);

        public virtual ID3D10EffectVariable GetAnnotationByName(
            string Name
        ){
            var fp = GetFunctionPointer(6);
            var callback = (GetAnnotationByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAnnotationByNameFunc));
            
            return callback(m_ptr, Name);
        }
        delegate ID3D10EffectVariable GetAnnotationByNameFunc(IntPtr self, string Name);

        public virtual int Apply(
            uint Flags
        ){
            var fp = GetFunctionPointer(7);
            var callback = (ApplyFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ApplyFunc));
            
            return callback(m_ptr, Flags);
        }
        delegate int ApplyFunc(IntPtr self, uint Flags);

        public virtual int ComputeStateBlockMask(
            out _D3D10_STATE_BLOCK_MASK pStateBlockMask
        ){
            var fp = GetFunctionPointer(8);
            var callback = (ComputeStateBlockMaskFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ComputeStateBlockMaskFunc));
            
            return callback(m_ptr, out pStateBlockMask);
        }
        delegate int ComputeStateBlockMaskFunc(IntPtr self, out _D3D10_STATE_BLOCK_MASK pStateBlockMask);

    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_PASS_DESC // 1
    {
        [MarshalAs(UnmanagedType.LPStr)]public string Name;
        public uint Annotations;
        public IntPtr pIAInputSignature;
        public ulong IAInputSignatureSize;
        public uint StencilRef;
        public uint SampleMask;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]public float[] BlendFactor;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_PASS_SHADER_DESC // 1
    {
        public ID3D10EffectShaderVariable pShaderVariable;
        public uint ShaderIndex;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct _D3D10_STATE_BLOCK_MASK // 1
    {
        public byte VS;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]public byte[] VSSamplers;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]public byte[] VSShaderResources;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]public byte[] VSConstantBuffers;
        public byte GS;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]public byte[] GSSamplers;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]public byte[] GSShaderResources;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]public byte[] GSConstantBuffers;
        public byte PS;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]public byte[] PSSamplers;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]public byte[] PSShaderResources;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]public byte[] PSConstantBuffers;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]public byte[] IAVertexBuffers;
        public byte IAIndexBuffer;
        public byte IAInputLayout;
        public byte IAPrimitiveTopology;
        public byte OMRenderTargets;
        public byte OMDepthStencilState;
        public byte OMBlendState;
        public byte RSViewports;
        public byte RSScissorRects;
        public byte RSRasterizerState;
        public byte SOBuffers;
        public byte Predication;
    }
}
