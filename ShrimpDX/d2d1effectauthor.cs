// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public static partial class Constants {
        public const int D2D1_APPEND_ALIGNED_ELEMENT = unchecked((int)0xffffffff);
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_PROPERTY_BINDING // 1
    {
        public IntPtr propertyName;
        public PD2D1_PROPERTY_SET_FUNCTION setFunction;
        public PD2D1_PROPERTY_GET_FUNCTION getFunction;
    }
    public delegate int PD2D1_PROPERTY_SET_FUNCTION(IUnknown effect, ref byte data, uint dataSize);
    public delegate int PD2D1_PROPERTY_GET_FUNCTION(IUnknown effect, out byte data, uint dataSize, out uint actualSize);
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_BLEND_DESCRIPTION // 1
    {
        public D2D1_BLEND sourceBlend;
        public D2D1_BLEND destinationBlend;
        public D2D1_BLEND_OPERATION blendOperation;
        public D2D1_BLEND sourceBlendAlpha;
        public D2D1_BLEND destinationBlendAlpha;
        public D2D1_BLEND_OPERATION blendOperationAlpha;
        [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]public float[] blendFactor;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_RESOURCE_TEXTURE_PROPERTIES // 1
    {
        public IntPtr extents;
        public uint dimensions;
        public D2D1_BUFFER_PRECISION bufferPrecision;
        public D2D1_CHANNEL_DEPTH channelDepth;
        public D2D1_FILTER filter;
        public IntPtr extendModes;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_VERTEX_BUFFER_PROPERTIES // 1
    {
        public uint inputCount;
        public D2D1_VERTEX_USAGE usage;
        public IntPtr data;
        public uint byteWidth;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES // 1
    {
        public IntPtr shaderBufferWithInputSignature;
        public uint shaderBufferSize;
        public IntPtr inputElements;
        public uint elementCount;
        public uint stride;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_INPUT_ELEMENT_DESC // 1
    {
        public IntPtr semanticName;
        public uint semanticIndex;
        public DXGI_FORMAT format;
        public uint inputSlot;
        public uint alignedByteOffset;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_VERTEX_RANGE // 1
    {
        public uint startVertex;
        public uint vertexCount;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_INPUT_DESCRIPTION // 1
    {
        public D2D1_FILTER filter;
        public uint levelOfDetailCount;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_FEATURE_DATA_DOUBLES // 1
    {
        public int doublePrecisionFloatShaderOps;
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS // 1
    {
        public int computeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x;
    }
}
