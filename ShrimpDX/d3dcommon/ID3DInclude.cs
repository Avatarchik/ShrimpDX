// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3DInclude: ComPtr
    {
        public virtual int Open(
            _D3D_INCLUDE_TYPE IncludeType,
            string pFileName,
            IntPtr pParentData,
            ref IntPtr ppData,
            out uint pBytes
        ){
            var fp = GetFunctionPointer(0);
            if(m_OpenFunc==null) m_OpenFunc = (OpenFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OpenFunc));
            
            return m_OpenFunc(m_ptr, IncludeType, pFileName, pParentData, ref ppData, out pBytes);
        }
        delegate int OpenFunc(IntPtr self, _D3D_INCLUDE_TYPE IncludeType, string pFileName, IntPtr pParentData, ref IntPtr ppData, out uint pBytes);
        OpenFunc m_OpenFunc;

        public virtual int Close(
            IntPtr pData
        ){
            var fp = GetFunctionPointer(1);
            if(m_CloseFunc==null) m_CloseFunc = (CloseFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CloseFunc));
            
            return m_CloseFunc(m_ptr, pData);
        }
        delegate int CloseFunc(IntPtr self, IntPtr pData);
        CloseFunc m_CloseFunc;

    }
}
