// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D11ShaderReflection: IUnknown
    {
        static Guid s_uuid = new Guid("8d536ca1-0cca-4956-a837-786963755584");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int GetDesc(
            out _D3D11_SHADER_DESC pDesc
        ){
            var fp = GetFunctionPointer(3);
            if(m_GetDescFunc==null) m_GetDescFunc = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return m_GetDescFunc(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D11_SHADER_DESC pDesc);
        GetDescFunc m_GetDescFunc;

        public virtual ID3D11ShaderReflectionConstantBuffer GetConstantBufferByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(4);
            if(m_GetConstantBufferByIndexFunc==null) m_GetConstantBufferByIndexFunc = (GetConstantBufferByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetConstantBufferByIndexFunc));
            
            return m_GetConstantBufferByIndexFunc(m_ptr, Index);
        }
        delegate ID3D11ShaderReflectionConstantBuffer GetConstantBufferByIndexFunc(IntPtr self, uint Index);
        GetConstantBufferByIndexFunc m_GetConstantBufferByIndexFunc;

        public virtual ID3D11ShaderReflectionConstantBuffer GetConstantBufferByName(
            string Name
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetConstantBufferByNameFunc==null) m_GetConstantBufferByNameFunc = (GetConstantBufferByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetConstantBufferByNameFunc));
            
            return m_GetConstantBufferByNameFunc(m_ptr, Name);
        }
        delegate ID3D11ShaderReflectionConstantBuffer GetConstantBufferByNameFunc(IntPtr self, string Name);
        GetConstantBufferByNameFunc m_GetConstantBufferByNameFunc;

        public virtual int GetResourceBindingDesc(
            uint ResourceIndex,
            out _D3D11_SHADER_INPUT_BIND_DESC pDesc
        ){
            var fp = GetFunctionPointer(6);
            if(m_GetResourceBindingDescFunc==null) m_GetResourceBindingDescFunc = (GetResourceBindingDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetResourceBindingDescFunc));
            
            return m_GetResourceBindingDescFunc(m_ptr, ResourceIndex, out pDesc);
        }
        delegate int GetResourceBindingDescFunc(IntPtr self, uint ResourceIndex, out _D3D11_SHADER_INPUT_BIND_DESC pDesc);
        GetResourceBindingDescFunc m_GetResourceBindingDescFunc;

        public virtual int GetInputParameterDesc(
            uint ParameterIndex,
            out _D3D11_SIGNATURE_PARAMETER_DESC pDesc
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetInputParameterDescFunc==null) m_GetInputParameterDescFunc = (GetInputParameterDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetInputParameterDescFunc));
            
            return m_GetInputParameterDescFunc(m_ptr, ParameterIndex, out pDesc);
        }
        delegate int GetInputParameterDescFunc(IntPtr self, uint ParameterIndex, out _D3D11_SIGNATURE_PARAMETER_DESC pDesc);
        GetInputParameterDescFunc m_GetInputParameterDescFunc;

        public virtual int GetOutputParameterDesc(
            uint ParameterIndex,
            out _D3D11_SIGNATURE_PARAMETER_DESC pDesc
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetOutputParameterDescFunc==null) m_GetOutputParameterDescFunc = (GetOutputParameterDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetOutputParameterDescFunc));
            
            return m_GetOutputParameterDescFunc(m_ptr, ParameterIndex, out pDesc);
        }
        delegate int GetOutputParameterDescFunc(IntPtr self, uint ParameterIndex, out _D3D11_SIGNATURE_PARAMETER_DESC pDesc);
        GetOutputParameterDescFunc m_GetOutputParameterDescFunc;

        public virtual int GetPatchConstantParameterDesc(
            uint ParameterIndex,
            out _D3D11_SIGNATURE_PARAMETER_DESC pDesc
        ){
            var fp = GetFunctionPointer(9);
            if(m_GetPatchConstantParameterDescFunc==null) m_GetPatchConstantParameterDescFunc = (GetPatchConstantParameterDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPatchConstantParameterDescFunc));
            
            return m_GetPatchConstantParameterDescFunc(m_ptr, ParameterIndex, out pDesc);
        }
        delegate int GetPatchConstantParameterDescFunc(IntPtr self, uint ParameterIndex, out _D3D11_SIGNATURE_PARAMETER_DESC pDesc);
        GetPatchConstantParameterDescFunc m_GetPatchConstantParameterDescFunc;

        public virtual ID3D11ShaderReflectionVariable GetVariableByName(
            string Name
        ){
            var fp = GetFunctionPointer(10);
            if(m_GetVariableByNameFunc==null) m_GetVariableByNameFunc = (GetVariableByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVariableByNameFunc));
            
            return m_GetVariableByNameFunc(m_ptr, Name);
        }
        delegate ID3D11ShaderReflectionVariable GetVariableByNameFunc(IntPtr self, string Name);
        GetVariableByNameFunc m_GetVariableByNameFunc;

        public virtual int GetResourceBindingDescByName(
            string Name,
            out _D3D11_SHADER_INPUT_BIND_DESC pDesc
        ){
            var fp = GetFunctionPointer(11);
            if(m_GetResourceBindingDescByNameFunc==null) m_GetResourceBindingDescByNameFunc = (GetResourceBindingDescByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetResourceBindingDescByNameFunc));
            
            return m_GetResourceBindingDescByNameFunc(m_ptr, Name, out pDesc);
        }
        delegate int GetResourceBindingDescByNameFunc(IntPtr self, string Name, out _D3D11_SHADER_INPUT_BIND_DESC pDesc);
        GetResourceBindingDescByNameFunc m_GetResourceBindingDescByNameFunc;

        public virtual uint GetMovInstructionCount(
        ){
            var fp = GetFunctionPointer(12);
            if(m_GetMovInstructionCountFunc==null) m_GetMovInstructionCountFunc = (GetMovInstructionCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMovInstructionCountFunc));
            
            return m_GetMovInstructionCountFunc(m_ptr);
        }
        delegate uint GetMovInstructionCountFunc(IntPtr self);
        GetMovInstructionCountFunc m_GetMovInstructionCountFunc;

        public virtual uint GetMovcInstructionCount(
        ){
            var fp = GetFunctionPointer(13);
            if(m_GetMovcInstructionCountFunc==null) m_GetMovcInstructionCountFunc = (GetMovcInstructionCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMovcInstructionCountFunc));
            
            return m_GetMovcInstructionCountFunc(m_ptr);
        }
        delegate uint GetMovcInstructionCountFunc(IntPtr self);
        GetMovcInstructionCountFunc m_GetMovcInstructionCountFunc;

        public virtual uint GetConversionInstructionCount(
        ){
            var fp = GetFunctionPointer(14);
            if(m_GetConversionInstructionCountFunc==null) m_GetConversionInstructionCountFunc = (GetConversionInstructionCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetConversionInstructionCountFunc));
            
            return m_GetConversionInstructionCountFunc(m_ptr);
        }
        delegate uint GetConversionInstructionCountFunc(IntPtr self);
        GetConversionInstructionCountFunc m_GetConversionInstructionCountFunc;

        public virtual uint GetBitwiseInstructionCount(
        ){
            var fp = GetFunctionPointer(15);
            if(m_GetBitwiseInstructionCountFunc==null) m_GetBitwiseInstructionCountFunc = (GetBitwiseInstructionCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBitwiseInstructionCountFunc));
            
            return m_GetBitwiseInstructionCountFunc(m_ptr);
        }
        delegate uint GetBitwiseInstructionCountFunc(IntPtr self);
        GetBitwiseInstructionCountFunc m_GetBitwiseInstructionCountFunc;

        public virtual D3D_PRIMITIVE GetGSInputPrimitive(
        ){
            var fp = GetFunctionPointer(16);
            if(m_GetGSInputPrimitiveFunc==null) m_GetGSInputPrimitiveFunc = (GetGSInputPrimitiveFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetGSInputPrimitiveFunc));
            
            return m_GetGSInputPrimitiveFunc(m_ptr);
        }
        delegate D3D_PRIMITIVE GetGSInputPrimitiveFunc(IntPtr self);
        GetGSInputPrimitiveFunc m_GetGSInputPrimitiveFunc;

        public virtual int IsSampleFrequencyShader(
        ){
            var fp = GetFunctionPointer(17);
            if(m_IsSampleFrequencyShaderFunc==null) m_IsSampleFrequencyShaderFunc = (IsSampleFrequencyShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsSampleFrequencyShaderFunc));
            
            return m_IsSampleFrequencyShaderFunc(m_ptr);
        }
        delegate int IsSampleFrequencyShaderFunc(IntPtr self);
        IsSampleFrequencyShaderFunc m_IsSampleFrequencyShaderFunc;

        public virtual uint GetNumInterfaceSlots(
        ){
            var fp = GetFunctionPointer(18);
            if(m_GetNumInterfaceSlotsFunc==null) m_GetNumInterfaceSlotsFunc = (GetNumInterfaceSlotsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetNumInterfaceSlotsFunc));
            
            return m_GetNumInterfaceSlotsFunc(m_ptr);
        }
        delegate uint GetNumInterfaceSlotsFunc(IntPtr self);
        GetNumInterfaceSlotsFunc m_GetNumInterfaceSlotsFunc;

        public virtual int GetMinFeatureLevel(
            out D3D_FEATURE_LEVEL pLevel
        ){
            var fp = GetFunctionPointer(19);
            if(m_GetMinFeatureLevelFunc==null) m_GetMinFeatureLevelFunc = (GetMinFeatureLevelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMinFeatureLevelFunc));
            
            return m_GetMinFeatureLevelFunc(m_ptr, out pLevel);
        }
        delegate int GetMinFeatureLevelFunc(IntPtr self, out D3D_FEATURE_LEVEL pLevel);
        GetMinFeatureLevelFunc m_GetMinFeatureLevelFunc;

        public virtual uint GetThreadGroupSize(
            out uint pSizeX,
            out uint pSizeY,
            out uint pSizeZ
        ){
            var fp = GetFunctionPointer(20);
            if(m_GetThreadGroupSizeFunc==null) m_GetThreadGroupSizeFunc = (GetThreadGroupSizeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetThreadGroupSizeFunc));
            
            return m_GetThreadGroupSizeFunc(m_ptr, out pSizeX, out pSizeY, out pSizeZ);
        }
        delegate uint GetThreadGroupSizeFunc(IntPtr self, out uint pSizeX, out uint pSizeY, out uint pSizeZ);
        GetThreadGroupSizeFunc m_GetThreadGroupSizeFunc;

        public virtual ulong GetRequiresFlags(
        ){
            var fp = GetFunctionPointer(21);
            if(m_GetRequiresFlagsFunc==null) m_GetRequiresFlagsFunc = (GetRequiresFlagsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRequiresFlagsFunc));
            
            return m_GetRequiresFlagsFunc(m_ptr);
        }
        delegate ulong GetRequiresFlagsFunc(IntPtr self);
        GetRequiresFlagsFunc m_GetRequiresFlagsFunc;

    }
}
