// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace ShrimpDX {
    public class ID3D11ShaderReflectionType: ComPtr
    {
        static Guid s_uuid = new Guid("6e6ffa6a-9bae-4613-a51e-91652d508c21");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int GetDesc(
            out _D3D11_SHADER_TYPE_DESC pDesc
        ){
            var fp = GetFunctionPointer(0);
            if(m_GetDescFunc==null) m_GetDescFunc = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            
            return m_GetDescFunc(m_ptr, out pDesc);
        }
        delegate int GetDescFunc(IntPtr self, out _D3D11_SHADER_TYPE_DESC pDesc);
        GetDescFunc m_GetDescFunc;

        public virtual ID3D11ShaderReflectionType GetMemberTypeByIndex(
            uint Index
        ){
            var fp = GetFunctionPointer(1);
            if(m_GetMemberTypeByIndexFunc==null) m_GetMemberTypeByIndexFunc = (GetMemberTypeByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeByIndexFunc));
            
            return m_GetMemberTypeByIndexFunc(m_ptr, Index);
        }
        delegate ID3D11ShaderReflectionType GetMemberTypeByIndexFunc(IntPtr self, uint Index);
        GetMemberTypeByIndexFunc m_GetMemberTypeByIndexFunc;

        public virtual ID3D11ShaderReflectionType GetMemberTypeByName(
            string Name
        ){
            var fp = GetFunctionPointer(2);
            if(m_GetMemberTypeByNameFunc==null) m_GetMemberTypeByNameFunc = (GetMemberTypeByNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeByNameFunc));
            
            return m_GetMemberTypeByNameFunc(m_ptr, Name);
        }
        delegate ID3D11ShaderReflectionType GetMemberTypeByNameFunc(IntPtr self, string Name);
        GetMemberTypeByNameFunc m_GetMemberTypeByNameFunc;

        public virtual string GetMemberTypeName(
            uint Index
        ){
            var fp = GetFunctionPointer(3);
            if(m_GetMemberTypeNameFunc==null) m_GetMemberTypeNameFunc = (GetMemberTypeNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMemberTypeNameFunc));
            
            return m_GetMemberTypeNameFunc(m_ptr, Index);
        }
        delegate string GetMemberTypeNameFunc(IntPtr self, uint Index);
        GetMemberTypeNameFunc m_GetMemberTypeNameFunc;

        public virtual int IsEqual(
            ID3D11ShaderReflectionType pType
        ){
            var fp = GetFunctionPointer(4);
            if(m_IsEqualFunc==null) m_IsEqualFunc = (IsEqualFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsEqualFunc));
            
            return m_IsEqualFunc(m_ptr, pType!=null ? pType.Ptr : IntPtr.Zero);
        }
        delegate int IsEqualFunc(IntPtr self, IntPtr pType);
        IsEqualFunc m_IsEqualFunc;

        public virtual ID3D11ShaderReflectionType GetSubType(
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetSubTypeFunc==null) m_GetSubTypeFunc = (GetSubTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSubTypeFunc));
            
            return m_GetSubTypeFunc(m_ptr);
        }
        delegate ID3D11ShaderReflectionType GetSubTypeFunc(IntPtr self);
        GetSubTypeFunc m_GetSubTypeFunc;

        public virtual ID3D11ShaderReflectionType GetBaseClass(
        ){
            var fp = GetFunctionPointer(6);
            if(m_GetBaseClassFunc==null) m_GetBaseClassFunc = (GetBaseClassFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBaseClassFunc));
            
            return m_GetBaseClassFunc(m_ptr);
        }
        delegate ID3D11ShaderReflectionType GetBaseClassFunc(IntPtr self);
        GetBaseClassFunc m_GetBaseClassFunc;

        public virtual uint GetNumInterfaces(
        ){
            var fp = GetFunctionPointer(7);
            if(m_GetNumInterfacesFunc==null) m_GetNumInterfacesFunc = (GetNumInterfacesFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetNumInterfacesFunc));
            
            return m_GetNumInterfacesFunc(m_ptr);
        }
        delegate uint GetNumInterfacesFunc(IntPtr self);
        GetNumInterfacesFunc m_GetNumInterfacesFunc;

        public virtual ID3D11ShaderReflectionType GetInterfaceByIndex(
            uint uIndex
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetInterfaceByIndexFunc==null) m_GetInterfaceByIndexFunc = (GetInterfaceByIndexFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetInterfaceByIndexFunc));
            
            return m_GetInterfaceByIndexFunc(m_ptr, uIndex);
        }
        delegate ID3D11ShaderReflectionType GetInterfaceByIndexFunc(IntPtr self, uint uIndex);
        GetInterfaceByIndexFunc m_GetInterfaceByIndexFunc;

        public virtual int IsOfType(
            ID3D11ShaderReflectionType pType
        ){
            var fp = GetFunctionPointer(9);
            if(m_IsOfTypeFunc==null) m_IsOfTypeFunc = (IsOfTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(IsOfTypeFunc));
            
            return m_IsOfTypeFunc(m_ptr, pType!=null ? pType.Ptr : IntPtr.Zero);
        }
        delegate int IsOfTypeFunc(IntPtr self, IntPtr pType);
        IsOfTypeFunc m_IsOfTypeFunc;

        public virtual int ImplementsInterface(
            ID3D11ShaderReflectionType pBase
        ){
            var fp = GetFunctionPointer(10);
            if(m_ImplementsInterfaceFunc==null) m_ImplementsInterfaceFunc = (ImplementsInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ImplementsInterfaceFunc));
            
            return m_ImplementsInterfaceFunc(m_ptr, pBase!=null ? pBase.Ptr : IntPtr.Zero);
        }
        delegate int ImplementsInterfaceFunc(IntPtr self, IntPtr pBase);
        ImplementsInterfaceFunc m_ImplementsInterfaceFunc;

    }
}
